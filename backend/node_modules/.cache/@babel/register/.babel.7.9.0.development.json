{
  "{\"sourceRoot\":\"/Users/ngjingkang/Desktop/website/backend/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/ngjingkang/Desktop/website/backend\",\"filename\":\"/Users/ngjingkang/Desktop/website/backend/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/ngjingkang/Desktop/website/backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/ngjingkang/Desktop/website/backend",
      "filename": "/Users/ngjingkang/Desktop/website/backend/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/ngjingkang/Desktop/website/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ngjingkang/Desktop/website/backend/server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/ngjingkang/Desktop/website/backend/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nrequire(\"babel-polyfill\");\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _env = _interopRequireDefault(require(\"./env\"));\n\nvar _customersRoute = _interopRequireDefault(require(\"./app/routes/customersRoute\"));\n\nvar _managersRoute = _interopRequireDefault(require(\"./app/routes/managersRoute\"));\n\nvar _ridersRoute = _interopRequireDefault(require(\"./app/routes/ridersRoute\"));\n\nvar _staffRoute = _interopRequireDefault(require(\"./app/routes/staffRoute\"));\n\nvar _restaurantsRoute = _interopRequireDefault(require(\"./app/routes/restaurantsRoute\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\n\nvar bodyParser = require('body-parser'); // Add middleware for parsing URL encoded bodies (which are usually sent by browser)\n\n\napp.use((0, _cors[\"default\"])()); // Add middleware for parsing JSON and urlencoded data and populating `req.body`\n\napp.use(_express[\"default\"].json()); // app.use(express.urlencoded({ extended: false }));\n\napp.use('/api/v1/customer', _customersRoute[\"default\"]);\napp.use('/api/v1/manager', _managersRoute[\"default\"]);\napp.use('/api/v1/rider', _ridersRoute[\"default\"]);\napp.use('/api/v1/staff', _staffRoute[\"default\"]);\napp.use('/api/v1/restaurant', _restaurantsRoute[\"default\"]);\napp.listen(_env[\"default\"].port).on('listening', function () {\n  console.log(\"\\uD83D\\uDE80 are live on \".concat(_env[\"default\"].port));\n});\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJib2R5UGFyc2VyIiwicmVxdWlyZSIsInVzZSIsImV4cHJlc3MiLCJqc29uIiwiY3VzdG9tZXJzUm91dGUiLCJtYW5hZ2Vyc1JvdXRlIiwicmlkZXJzUm91dGUiLCJzdGFmZlJvdXRlIiwicmVzdGF1cmFudHNSb3V0ZSIsImxpc3RlbiIsImVudiIsInBvcnQiLCJvbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLEdBQUcsR0FBRywwQkFBWjs7QUFDQSxJQUFNQyxVQUFVLEdBQUdDLE9BQU8sQ0FBQyxhQUFELENBQTFCLEMsQ0FFQTs7O0FBQ0FGLEdBQUcsQ0FBQ0csR0FBSixDQUFRLHVCQUFSLEUsQ0FDQTs7QUFDQUgsR0FBRyxDQUFDRyxHQUFKLENBQVFDLG9CQUFRQyxJQUFSLEVBQVIsRSxDQUNBOztBQUVBTCxHQUFHLENBQUNHLEdBQUosQ0FBUSxrQkFBUixFQUE0QkcsMEJBQTVCO0FBQ0FOLEdBQUcsQ0FBQ0csR0FBSixDQUFRLGlCQUFSLEVBQTJCSSx5QkFBM0I7QUFDQVAsR0FBRyxDQUFDRyxHQUFKLENBQVEsZUFBUixFQUF5QkssdUJBQXpCO0FBQ0FSLEdBQUcsQ0FBQ0csR0FBSixDQUFRLGVBQVIsRUFBeUJNLHNCQUF6QjtBQUNBVCxHQUFHLENBQUNHLEdBQUosQ0FBUSxvQkFBUixFQUE4Qk8sNEJBQTlCO0FBRUFWLEdBQUcsQ0FBQ1csTUFBSixDQUFXQyxnQkFBSUMsSUFBZixFQUFxQkMsRUFBckIsQ0FBd0IsV0FBeEIsRUFBcUMsWUFBTTtBQUN2Q0MsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLG9DQUE4QkosZ0JBQUlDLElBQWxDO0FBQ0gsQ0FGRDtlQUtlYixHIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9uZ2ppbmdrYW5nL0Rlc2t0b3Avd2Vic2l0ZS9iYWNrZW5kLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0ICdiYWJlbC1wb2x5ZmlsbCc7XG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJztcbmltcG9ydCBlbnYgZnJvbSAnLi9lbnYnO1xuaW1wb3J0IGN1c3RvbWVyc1JvdXRlIGZyb20gJy4vYXBwL3JvdXRlcy9jdXN0b21lcnNSb3V0ZSc7XG5pbXBvcnQgbWFuYWdlcnNSb3V0ZSBmcm9tICcuL2FwcC9yb3V0ZXMvbWFuYWdlcnNSb3V0ZSc7XG5pbXBvcnQgcmlkZXJzUm91dGUgZnJvbSAnLi9hcHAvcm91dGVzL3JpZGVyc1JvdXRlJztcbmltcG9ydCBzdGFmZlJvdXRlIGZyb20gJy4vYXBwL3JvdXRlcy9zdGFmZlJvdXRlJztcbmltcG9ydCByZXN0YXVyYW50c1JvdXRlIGZyb20gJy4vYXBwL3JvdXRlcy9yZXN0YXVyYW50c1JvdXRlJztcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJylcblxuLy8gQWRkIG1pZGRsZXdhcmUgZm9yIHBhcnNpbmcgVVJMIGVuY29kZWQgYm9kaWVzICh3aGljaCBhcmUgdXN1YWxseSBzZW50IGJ5IGJyb3dzZXIpXG5hcHAudXNlKGNvcnMoKSk7XG4vLyBBZGQgbWlkZGxld2FyZSBmb3IgcGFyc2luZyBKU09OIGFuZCB1cmxlbmNvZGVkIGRhdGEgYW5kIHBvcHVsYXRpbmcgYHJlcS5ib2R5YFxuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XG4vLyBhcHAudXNlKGV4cHJlc3MudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSk7XG5cbmFwcC51c2UoJy9hcGkvdjEvY3VzdG9tZXInLCBjdXN0b21lcnNSb3V0ZSk7XG5hcHAudXNlKCcvYXBpL3YxL21hbmFnZXInLCBtYW5hZ2Vyc1JvdXRlKTtcbmFwcC51c2UoJy9hcGkvdjEvcmlkZXInLCByaWRlcnNSb3V0ZSk7XG5hcHAudXNlKCcvYXBpL3YxL3N0YWZmJywgc3RhZmZSb3V0ZSk7XG5hcHAudXNlKCcvYXBpL3YxL3Jlc3RhdXJhbnQnLCByZXN0YXVyYW50c1JvdXRlKTtcblxuYXBwLmxpc3RlbihlbnYucG9ydCkub24oJ2xpc3RlbmluZycsICgpID0+IHtcbiAgICBjb25zb2xlLmxvZyhg8J+agCBhcmUgbGl2ZSBvbiAke2Vudi5wb3J0fWApO1xufSk7XG5cblxuZXhwb3J0IGRlZmF1bHQgYXBwOyAgIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "bodyParser",
        "require",
        "use",
        "express",
        "json",
        "customersRoute",
        "managersRoute",
        "ridersRoute",
        "staffRoute",
        "restaurantsRoute",
        "listen",
        "env",
        "port",
        "on",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;;AACA,IAAMC,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B,C,CAEA;;;AACAF,GAAG,CAACG,GAAJ,CAAQ,uBAAR,E,CACA;;AACAH,GAAG,CAACG,GAAJ,CAAQC,oBAAQC,IAAR,EAAR,E,CACA;;AAEAL,GAAG,CAACG,GAAJ,CAAQ,kBAAR,EAA4BG,0BAA5B;AACAN,GAAG,CAACG,GAAJ,CAAQ,iBAAR,EAA2BI,yBAA3B;AACAP,GAAG,CAACG,GAAJ,CAAQ,eAAR,EAAyBK,uBAAzB;AACAR,GAAG,CAACG,GAAJ,CAAQ,eAAR,EAAyBM,sBAAzB;AACAT,GAAG,CAACG,GAAJ,CAAQ,oBAAR,EAA8BO,4BAA9B;AAEAV,GAAG,CAACW,MAAJ,CAAWC,gBAAIC,IAAf,EAAqBC,EAArB,CAAwB,WAAxB,EAAqC,YAAM;AACvCC,EAAAA,OAAO,CAACC,GAAR,oCAA8BJ,gBAAIC,IAAlC;AACH,CAFD;eAKeb,G",
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/",
      "sourcesContent": [
        "import express from 'express';\nimport 'babel-polyfill';\nimport cors from 'cors';\nimport env from './env';\nimport customersRoute from './app/routes/customersRoute';\nimport managersRoute from './app/routes/managersRoute';\nimport ridersRoute from './app/routes/ridersRoute';\nimport staffRoute from './app/routes/staffRoute';\nimport restaurantsRoute from './app/routes/restaurantsRoute';\n\nconst app = express();\nconst bodyParser = require('body-parser')\n\n// Add middleware for parsing URL encoded bodies (which are usually sent by browser)\napp.use(cors());\n// Add middleware for parsing JSON and urlencoded data and populating `req.body`\napp.use(express.json());\n// app.use(express.urlencoded({ extended: false }));\n\napp.use('/api/v1/customer', customersRoute);\napp.use('/api/v1/manager', managersRoute);\napp.use('/api/v1/rider', ridersRoute);\napp.use('/api/v1/staff', staffRoute);\napp.use('/api/v1/restaurant', restaurantsRoute);\n\napp.listen(env.port).on('listening', () => {\n    console.log(`🚀 are live on ${env.port}`);\n});\n\n\nexport default app;  "
      ]
    },
    "sourceType": "script",
    "mtime": 1586140084243
  },
  "{\"sourceRoot\":\"/Users/ngjingkang/Desktop/website/backend/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/ngjingkang/Desktop/website/backend\",\"filename\":\"/Users/ngjingkang/Desktop/website/backend/env.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/ngjingkang/Desktop/website/backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/ngjingkang/Desktop/website/backend",
      "filename": "/Users/ngjingkang/Desktop/website/backend/env.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/ngjingkang/Desktop/website/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ngjingkang/Desktop/website/backend/env.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/ngjingkang/Desktop/website/backend/env.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/",
        "sourceFileName": "env.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_dotenv[\"default\"].config();\n\nvar _default = {\n  database_url: process.env.DATABASE_URL,\n  port: process.env.PORT || 3000\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVudi5qcyJdLCJuYW1lcyI6WyJkb3RlbnYiLCJjb25maWciLCJkYXRhYmFzZV91cmwiLCJwcm9jZXNzIiwiZW52IiwiREFUQUJBU0VfVVJMIiwicG9ydCIsIlBPUlQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVBQSxtQkFBT0MsTUFBUDs7ZUFFZTtBQUNiQyxFQUFBQSxZQUFZLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxZQURiO0FBRWJDLEVBQUFBLElBQUksRUFBRUgsT0FBTyxDQUFDQyxHQUFSLENBQVlHLElBQVosSUFBb0I7QUFGYixDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9uZ2ppbmdrYW5nL0Rlc2t0b3Avd2Vic2l0ZS9iYWNrZW5kLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkb3RlbnYgZnJvbSAnZG90ZW52JztcblxuZG90ZW52LmNvbmZpZygpO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGRhdGFiYXNlX3VybDogcHJvY2Vzcy5lbnYuREFUQUJBU0VfVVJMLFxuICBwb3J0OiBwcm9jZXNzLmVudi5QT1JUIHx8IDMwMDAsXG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "env.js"
      ],
      "names": [
        "dotenv",
        "config",
        "database_url",
        "process",
        "env",
        "DATABASE_URL",
        "port",
        "PORT"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEAA,mBAAOC,MAAP;;eAEe;AACbC,EAAAA,YAAY,EAAEC,OAAO,CAACC,GAAR,CAAYC,YADb;AAEbC,EAAAA,IAAI,EAAEH,OAAO,CAACC,GAAR,CAAYG,IAAZ,IAAoB;AAFb,C",
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/",
      "sourcesContent": [
        "import dotenv from 'dotenv';\n\ndotenv.config();\n\nexport default {\n  database_url: process.env.DATABASE_URL,\n  port: process.env.PORT || 3000,\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588260154242
  },
  "{\"sourceRoot\":\"/Users/ngjingkang/Desktop/website/backend/app/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/ngjingkang/Desktop/website/backend\",\"filename\":\"/Users/ngjingkang/Desktop/website/backend/app/routes/customersRoute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/ngjingkang/Desktop/website/backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/ngjingkang/Desktop/website/backend",
      "filename": "/Users/ngjingkang/Desktop/website/backend/app/routes/customersRoute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/ngjingkang/Desktop/website/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ngjingkang/Desktop/website/backend/app/routes/customersRoute.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/ngjingkang/Desktop/website/backend/app/routes/customersRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/routes/",
        "sourceFileName": "customersRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _customersController = require(\"../controllers/customersController\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = _express[\"default\"].Router(); // customer Routes\n\n\nrouter.post('/auth/signup', _customersController.createCustomer);\nrouter.post('/auth/signin', _customersController.signinCustomer);\nrouter.get('/search', _customersController.searchCustomerFirstnameOrLastname);\nrouter.post('/edit', _customersController.editCustomer);\nrouter.post('/delete', _customersController.deleteCustomer);\nrouter.post('/orders', _customersController.ordersByCustomer);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN1c3RvbWVyc1JvdXRlLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwb3N0IiwiY3JlYXRlQ3VzdG9tZXIiLCJzaWduaW5DdXN0b21lciIsImdldCIsInNlYXJjaEN1c3RvbWVyRmlyc3RuYW1lT3JMYXN0bmFtZSIsImVkaXRDdXN0b21lciIsImRlbGV0ZUN1c3RvbWVyIiwib3JkZXJzQnlDdXN0b21lciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOzs7O0FBRUEsSUFBTUEsTUFBTSxHQUFHQyxvQkFBUUMsTUFBUixFQUFmLEMsQ0FFQTs7O0FBRUFGLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLGNBQVosRUFBNEJDLG1DQUE1QjtBQUNBSixNQUFNLENBQUNHLElBQVAsQ0FBWSxjQUFaLEVBQTRCRSxtQ0FBNUI7QUFDQUwsTUFBTSxDQUFDTSxHQUFQLENBQVcsU0FBWCxFQUFzQkMsc0RBQXRCO0FBQ0FQLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLE9BQVosRUFBcUJLLGlDQUFyQjtBQUNBUixNQUFNLENBQUNHLElBQVAsQ0FBWSxTQUFaLEVBQXVCTSxtQ0FBdkI7QUFDQVQsTUFBTSxDQUFDRyxJQUFQLENBQVksU0FBWixFQUF1Qk8scUNBQXZCO2VBRWVWLE0iLCJzb3VyY2VSb290IjoiL1VzZXJzL25namluZ2thbmcvRGVza3RvcC93ZWJzaXRlL2JhY2tlbmQvYXBwL3JvdXRlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcblxuaW1wb3J0IHsgY3JlYXRlQ3VzdG9tZXIsIHNpZ25pbkN1c3RvbWVyLCBzZWFyY2hDdXN0b21lckZpcnN0bmFtZU9yTGFzdG5hbWUsIGVkaXRDdXN0b21lciwgZGVsZXRlQ3VzdG9tZXIsIG9yZGVyc0J5Q3VzdG9tZXIgfSBmcm9tICcuLi9jb250cm9sbGVycy9jdXN0b21lcnNDb250cm9sbGVyJztcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuLy8gY3VzdG9tZXIgUm91dGVzXG5cbnJvdXRlci5wb3N0KCcvYXV0aC9zaWdudXAnLCBjcmVhdGVDdXN0b21lcik7XG5yb3V0ZXIucG9zdCgnL2F1dGgvc2lnbmluJywgc2lnbmluQ3VzdG9tZXIpO1xucm91dGVyLmdldCgnL3NlYXJjaCcsIHNlYXJjaEN1c3RvbWVyRmlyc3RuYW1lT3JMYXN0bmFtZSk7XG5yb3V0ZXIucG9zdCgnL2VkaXQnLCBlZGl0Q3VzdG9tZXIpO1xucm91dGVyLnBvc3QoJy9kZWxldGUnLCBkZWxldGVDdXN0b21lcik7XG5yb3V0ZXIucG9zdCgnL29yZGVycycsIG9yZGVyc0J5Q3VzdG9tZXIpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "customersRoute.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "post",
        "createCustomer",
        "signinCustomer",
        "get",
        "searchCustomerFirstnameOrLastname",
        "editCustomer",
        "deleteCustomer",
        "ordersByCustomer"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;;;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf,C,CAEA;;;AAEAF,MAAM,CAACG,IAAP,CAAY,cAAZ,EAA4BC,mCAA5B;AACAJ,MAAM,CAACG,IAAP,CAAY,cAAZ,EAA4BE,mCAA5B;AACAL,MAAM,CAACM,GAAP,CAAW,SAAX,EAAsBC,sDAAtB;AACAP,MAAM,CAACG,IAAP,CAAY,OAAZ,EAAqBK,iCAArB;AACAR,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBM,mCAAvB;AACAT,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBO,qCAAvB;eAEeV,M",
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/routes/",
      "sourcesContent": [
        "import express from 'express';\n\nimport { createCustomer, signinCustomer, searchCustomerFirstnameOrLastname, editCustomer, deleteCustomer, ordersByCustomer } from '../controllers/customersController';\n\nconst router = express.Router();\n\n// customer Routes\n\nrouter.post('/auth/signup', createCustomer);\nrouter.post('/auth/signin', signinCustomer);\nrouter.get('/search', searchCustomerFirstnameOrLastname);\nrouter.post('/edit', editCustomer);\nrouter.post('/delete', deleteCustomer);\nrouter.post('/orders', ordersByCustomer);\n\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1588644908755
  },
  "{\"sourceRoot\":\"/Users/ngjingkang/Desktop/website/backend/app/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/ngjingkang/Desktop/website/backend\",\"filename\":\"/Users/ngjingkang/Desktop/website/backend/app/controllers/customersController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/ngjingkang/Desktop/website/backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/ngjingkang/Desktop/website/backend",
      "filename": "/Users/ngjingkang/Desktop/website/backend/app/controllers/customersController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/ngjingkang/Desktop/website/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ngjingkang/Desktop/website/backend/app/controllers/customersController.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/ngjingkang/Desktop/website/backend/app/controllers/customersController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/controllers/",
        "sourceFileName": "customersController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ordersByCustomer = exports.deleteCustomer = exports.editCustomer = exports.searchCustomerFirstnameOrLastname = exports.signinCustomer = exports.createCustomer = void 0;\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _dbQuery = _interopRequireDefault(require(\"../db/dev/dbQuery\"));\n\nvar _validations = require(\"../helpers/validations\");\n\nvar _status = require(\"../helpers/status\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n   * Create A Customer\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} reflection object (of Customer)\n   */\nvar createCustomer = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, email, first_name, last_name, password, createCustomerQuery, values, _yield$dbQuery$query, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _req$body = req.body, email = _req$body.email, first_name = _req$body.first_name, last_name = _req$body.last_name, password = _req$body.password;\n            console.log('body: ', req.body);\n            console.log('email: ', email);\n            console.log('first_name: ', first_name);\n            console.log('last_name: ', last_name);\n            console.log('password: ', password); // const created_on = moment(new Date());\n\n            if (!((0, _validations.isEmpty)(email) || (0, _validations.isEmpty)(first_name) || (0, _validations.isEmpty)(last_name) || (0, _validations.isEmpty)(password))) {\n              _context.next = 9;\n              break;\n            }\n\n            _status.errorMessage.error = 'Email, password, first name and last name fields cannot be empty';\n            return _context.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 9:\n            if ((0, _validations.isValidEmail)(email)) {\n              _context.next = 12;\n              break;\n            }\n\n            _status.errorMessage.error = 'Please enter a valid Email';\n            return _context.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 12:\n            if ((0, _validations.validatePassword)(password)) {\n              _context.next = 15;\n              break;\n            }\n\n            _status.errorMessage.error = 'Password must be more than five(5) characters';\n            return _context.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 15:\n            // const hashedPassword = hashPassword(password);\n            createCustomerQuery = \"INSERT INTO\\n        Customer(email, first_name, last_name, password)\\n        VALUES($1, $2, $3, $4)\\n        returning *\"; // const values = [\n            //   email,\n            //   first_name,\n            //   last_name,\n            //   hashedPassword,\n            //   // created_on,\n            // ];\n\n            values = [email, first_name, last_name, password // created_on,\n            ];\n            _context.prev = 17;\n            _context.next = 20;\n            return _dbQuery[\"default\"].query(createCustomerQuery, values);\n\n          case 20:\n            _yield$dbQuery$query = _context.sent;\n            rows = _yield$dbQuery$query.rows;\n            dbResponse = rows[0]; // delete dbResponse.password;\n            //   const token = generateUserToken(dbResponse.email, dbResponse.id, dbResponse.is_admin, dbResponse.first_name, dbResponse.last_name);\n\n            _status.successMessage.data = dbResponse; //   successMessage.data.token = token;\n\n            return _context.abrupt(\"return\", res.status(_status.status.created).send(_status.successMessage.data));\n\n          case 27:\n            _context.prev = 27;\n            _context.t0 = _context[\"catch\"](17);\n\n            if (!(_context.t0.routine === '_bt_check_unique')) {\n              _context.next = 32;\n              break;\n            }\n\n            _status.errorMessage.error = 'Customer with that EMAIL already exist';\n            return _context.abrupt(\"return\", res.status(_status.status.conflict).send(_status.errorMessage.error));\n\n          case 32:\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 34:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[17, 27]]);\n  }));\n\n  return function createCustomer(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n   * Signin\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} customer object\n   */\n\n\nexports.createCustomer = createCustomer;\n\nvar signinCustomer = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body2, email, password, firstname, lastname, creditcard, signinCustomerQuery, _yield$dbQuery$query2, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _req$body2 = req.body, email = _req$body2.email, password = _req$body2.password, firstname = _req$body2.firstname, lastname = _req$body2.lastname, creditcard = _req$body2.creditcard;\n\n            if (!((0, _validations.isEmpty)(email) || (0, _validations.isEmpty)(password))) {\n              _context2.next = 4;\n              break;\n            }\n\n            _status.errorMessage.error = 'Email or Password detail is missing';\n            return _context2.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 4:\n            if ((0, _validations.isValidEmail)(email)) {\n              _context2.next = 7;\n              break;\n            }\n\n            _status.errorMessage.error = 'Please enter a valid Email or Password';\n            return _context2.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 7:\n            signinCustomerQuery = 'SELECT * FROM Customer WHERE email = $1';\n            _context2.prev = 8;\n            _context2.next = 11;\n            return _dbQuery[\"default\"].query(signinCustomerQuery, [email]);\n\n          case 11:\n            _yield$dbQuery$query2 = _context2.sent;\n            rows = _yield$dbQuery$query2.rows;\n            dbResponse = rows[0];\n\n            if (dbResponse) {\n              _context2.next = 18;\n              break;\n            }\n\n            _status.errorMessage.error = 'Customer with this email does not exist';\n            console.log(_status.errorMessage.error);\n            return _context2.abrupt(\"return\", res.status(_status.status.notfound).send(_status.errorMessage.error));\n\n          case 18:\n            if ((0, _validations.comparePassword)(dbResponse.password, password)) {\n              _context2.next = 21;\n              break;\n            }\n\n            _status.errorMessage.error = 'The password you provided is incorrect';\n            return _context2.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 21:\n            // const token = generateUserToken(dbResponse.email, dbResponse.id, dbResponse.is_admin, dbResponse.first_name, dbResponse.last_name);\n            // delete dbResponse.password;\n            _status.successMessage.data = dbResponse; //   successMessage.data.token = token;\n\n            return _context2.abrupt(\"return\", res.status(_status.status.success).send(_status.successMessage.data));\n\n          case 25:\n            _context2.prev = 25;\n            _context2.t0 = _context2[\"catch\"](8);\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context2.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 29:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[8, 25]]);\n  }));\n\n  return function signinCustomer(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n/**\n* @params {Object} req\n* @params {Object} res\n* @returns return firstname and Lastname\n*/\n\n\nexports.signinCustomer = signinCustomer;\n\nvar searchCustomerFirstnameOrLastname = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$query, first_name, last_name, searchQuery, _yield$dbQuery$query3, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _req$query = req.query, first_name = _req$query.first_name, last_name = _req$query.last_name;\n            searchQuery = 'SELECT * from Customer WHERE first_name =$1 OR last_name =$2 ORDER BY id DESC';\n            _context3.prev = 2;\n            _context3.next = 5;\n            return _dbQuery[\"default\"].query(searchQuery, [first_name, last_name]);\n\n          case 5:\n            _yield$dbQuery$query3 = _context3.sent;\n            rows = _yield$dbQuery$query3.rows;\n            dbResponse = rows;\n\n            if (dbResponse[0]) {\n              _context3.next = 11;\n              break;\n            }\n\n            _status.errorMessage.error = 'No user with such names';\n            return _context3.abrupt(\"return\", res.status(_status.status.notfound).send(_status.errorMessage.error));\n\n          case 11:\n            _status.successMessage.data = dbResponse;\n            return _context3.abrupt(\"return\", res.status(_status.status.success).send(_status.successMessage.data));\n\n          case 15:\n            _context3.prev = 15;\n            _context3.t0 = _context3[\"catch\"](2);\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context3.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 19:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[2, 15]]);\n  }));\n\n  return function searchCustomerFirstnameOrLastname(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n/**\n * Edit A Customer\n * @param {object} req\n * @param {object} res\n * @returns {object} reflection object (of Customer)\n */\n\n\nexports.searchCustomerFirstnameOrLastname = searchCustomerFirstnameOrLastname;\n\nvar editCustomer = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var _req$body3, email, first_name, last_name, password, id, editCustomerQuery, values, _yield$dbQuery$query4, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _req$body3 = req.body, email = _req$body3.email, first_name = _req$body3.first_name, last_name = _req$body3.last_name, password = _req$body3.password, id = _req$body3.id;\n            console.log('body: ', req.body);\n            console.log('email: ', email);\n            console.log('first_name: ', first_name);\n            console.log('last_name: ', last_name);\n            console.log('password: ', password);\n            console.log('id: ', id); // const created_on = moment(new Date());\n            // if (isEmpty(email) || isEmpty(first_name) || isEmpty(last_name) || isEmpty(password)) {\n            //   errorMessage.error = 'Email, password, first name and last name fields cannot be empty';\n            //   return res.status(status.bad).send(errorMessage.error);\n            // }\n\n            if (!((0, _validations.isEmpty)(email) || (0, _validations.isEmpty)(first_name) || (0, _validations.isEmpty)(last_name) || (0, _validations.isEmpty)(password))) {\n              _context4.next = 10;\n              break;\n            }\n\n            _status.errorMessage.error = 'Email, password, first name and last name fields cannot be empty';\n            return _context4.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 10:\n            if ((0, _validations.isValidEmail)(email)) {\n              _context4.next = 13;\n              break;\n            }\n\n            _status.errorMessage.error = 'Please enter a valid Email';\n            return _context4.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 13:\n            if ((0, _validations.validatePassword)(password)) {\n              _context4.next = 16;\n              break;\n            }\n\n            _status.errorMessage.error = 'Password must be more than five(5) characters';\n            return _context4.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 16:\n            // const hashedPassword = hashPassword(password);\n            editCustomerQuery = \"UPDATE Customer set\\n        email = $1,\\n        first_name = $2,\\n        last_name = $3,\\n        password = $4\\n        where id = $5\\n        returning *\";\n            values = [email, first_name, last_name, password, id // creditcard\n            // created_on,\n            ];\n            _context4.prev = 18;\n            _context4.next = 21;\n            return _dbQuery[\"default\"].query(editCustomerQuery, values);\n\n          case 21:\n            _yield$dbQuery$query4 = _context4.sent;\n            rows = _yield$dbQuery$query4.rows;\n            dbResponse = rows[0]; // delete dbResponse.password;\n            //   const token = generateUserToken(dbResponse.email, dbResponse.id, dbResponse.is_admin, dbResponse.first_name, dbResponse.last_name);\n\n            _status.successMessage.data = dbResponse; //   successMessage.data.token = token;\n\n            return _context4.abrupt(\"return\", res.status(_status.status.created).send(_status.successMessage.data));\n\n          case 28:\n            _context4.prev = 28;\n            _context4.t0 = _context4[\"catch\"](18);\n\n            if (!(_context4.t0.routine === '_bt_check_unique')) {\n              _context4.next = 33;\n              break;\n            }\n\n            _status.errorMessage.error = 'Customer with that EMAIL already exist';\n            return _context4.abrupt(\"return\", res.status(_status.status.conflict).send(_status.errorMessage.error));\n\n          case 33:\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context4.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 35:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[18, 28]]);\n  }));\n\n  return function editCustomer(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n/**\n * delete a customer\n */\n\n\nexports.editCustomer = editCustomer;\n\nvar deleteCustomer = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var id, deleteCustomerQuery, _yield$dbQuery$query5, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            id = req.body.id;\n            deleteCustomerQuery = 'delete from customer where id = $1 returning *';\n            _context5.prev = 2;\n            _context5.next = 5;\n            return _dbQuery[\"default\"].query(deleteCustomerQuery, [id]);\n\n          case 5:\n            _yield$dbQuery$query5 = _context5.sent;\n            rows = _yield$dbQuery$query5.rows;\n            dbResponse = rows[0];\n            _status.successMessage.data = dbResponse;\n            return _context5.abrupt(\"return\", res.status(_status.status.success).send(_status.successMessage.data));\n\n          case 12:\n            _context5.prev = 12;\n            _context5.t0 = _context5[\"catch\"](2);\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context5.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 16:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[2, 12]]);\n  }));\n\n  return function deleteCustomer(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n/**\n * get no. of customer's orders\n */\n\n\nexports.deleteCustomer = deleteCustomer;\n\nvar ordersByCustomer = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var id, ordersByCustomerQuery, _yield$dbQuery$query6, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            id = req.body.id;\n            console.log('id: ', id);\n            ordersByCustomerQuery = 'select count(id) from orders where id = $1';\n            _context6.prev = 3;\n            _context6.next = 6;\n            return _dbQuery[\"default\"].query(ordersByCustomerQuery, [id]);\n\n          case 6:\n            _yield$dbQuery$query6 = _context6.sent;\n            rows = _yield$dbQuery$query6.rows;\n            dbResponse = rows[0];\n            _status.successMessage.data = dbResponse;\n            console.log('res: ', dbResponse);\n            return _context6.abrupt(\"return\", res.status(_status.status.success).send(_status.successMessage.data));\n\n          case 14:\n            _context6.prev = 14;\n            _context6.t0 = _context6[\"catch\"](3);\n            console.log(_context6.t0);\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context6.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 19:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[3, 14]]);\n  }));\n\n  return function ordersByCustomer(_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nexports.ordersByCustomer = ordersByCustomer;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN1c3RvbWVyc0NvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiY3JlYXRlQ3VzdG9tZXIiLCJyZXEiLCJyZXMiLCJib2R5IiwiZW1haWwiLCJmaXJzdF9uYW1lIiwibGFzdF9uYW1lIiwicGFzc3dvcmQiLCJjb25zb2xlIiwibG9nIiwiZXJyb3JNZXNzYWdlIiwiZXJyb3IiLCJzdGF0dXMiLCJiYWQiLCJzZW5kIiwiY3JlYXRlQ3VzdG9tZXJRdWVyeSIsInZhbHVlcyIsImRiUXVlcnkiLCJxdWVyeSIsInJvd3MiLCJkYlJlc3BvbnNlIiwic3VjY2Vzc01lc3NhZ2UiLCJkYXRhIiwiY3JlYXRlZCIsInJvdXRpbmUiLCJjb25mbGljdCIsInNpZ25pbkN1c3RvbWVyIiwiZmlyc3RuYW1lIiwibGFzdG5hbWUiLCJjcmVkaXRjYXJkIiwic2lnbmluQ3VzdG9tZXJRdWVyeSIsIm5vdGZvdW5kIiwic3VjY2VzcyIsInNlYXJjaEN1c3RvbWVyRmlyc3RuYW1lT3JMYXN0bmFtZSIsInNlYXJjaFF1ZXJ5IiwiZWRpdEN1c3RvbWVyIiwiaWQiLCJlZGl0Q3VzdG9tZXJRdWVyeSIsImRlbGV0ZUN1c3RvbWVyIiwiZGVsZXRlQ3VzdG9tZXJRdWVyeSIsIm9yZGVyc0J5Q3VzdG9tZXIiLCJvcmRlcnNCeUN1c3RvbWVyUXVlcnkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFFQTs7QUFRQTs7Ozs7Ozs7QUFJQTs7Ozs7O0FBTUUsSUFBTUEsY0FBYztBQUFBLHFFQUFHLGlCQUFPQyxHQUFQLEVBQVlDLEdBQVo7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHdCQUdqQkQsR0FBRyxDQUFDRSxJQUhhLEVBRW5CQyxLQUZtQixhQUVuQkEsS0FGbUIsRUFFWkMsVUFGWSxhQUVaQSxVQUZZLEVBRUFDLFNBRkEsYUFFQUEsU0FGQSxFQUVXQyxRQUZYLGFBRVdBLFFBRlg7QUFLckJDLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFFBQVosRUFBc0JSLEdBQUcs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ZixHQUFzQkYsVUFBdEI7QUFDQVosWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksT0FBWixFQUFxQlcsVUFBckI7QUFScUIsOENBU2RsQixHQUFHLENBQUNVLE1BQUosQ0FBV0EsZUFBT29CLE9BQWxCLEVBQTJCbEIsSUFBM0IsQ0FBZ0NPLHVCQUFlQyxJQUEvQyxDQVRjOztBQUFBO0FBQUE7QUFBQTtBQVdyQmQsWUFBQUEsT0FBTyxDQUFDQyxHQUFSO0FBQ0FDLGlDQUFhQyxLQUFiLEdBQXFCLDhCQUFyQjtBQVpxQiw4Q0FhZFQsR0FBRyxDQUFDVSxNQUFKLENBQVdBLGVBQU9ELEtBQWxCLEVBQXlCRyxJQUF6QixDQUE4QkoscUJBQWFDLEtBQTNDLENBYmM7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBSDs7QUFBQSxrQkFBaEI2QixnQkFBZ0I7QUFBQTtBQUFBO0FBQUEsR0FBdEIiLCJzb3VyY2VSb290IjoiL1VzZXJzL25namluZ2thbmcvRGVza3RvcC93ZWJzaXRlL2JhY2tlbmQvYXBwL2NvbnRyb2xsZXJzLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JztcblxuaW1wb3J0IGRiUXVlcnkgZnJvbSAnLi4vZGIvZGV2L2RiUXVlcnknO1xuXG5pbXBvcnQge1xuICAgIGhhc2hQYXNzd29yZCxcbiAgICBjb21wYXJlUGFzc3dvcmQsXG4gICAgaXNWYWxpZEVtYWlsLFxuICAgIHZhbGlkYXRlUGFzc3dvcmQsXG4gICAgaXNFbXB0eSxcbn0gZnJvbSAnLi4vaGVscGVycy92YWxpZGF0aW9ucyc7XG4gIFxuaW1wb3J0IHtcbiAgICBlcnJvck1lc3NhZ2UsIHN1Y2Nlc3NNZXNzYWdlLCBzdGF0dXMsXG59IGZyb20gJy4uL2hlbHBlcnMvc3RhdHVzJztcblxuLyoqXG4gICAqIENyZWF0ZSBBIEN1c3RvbWVyXG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXFcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlc1xuICAgKiBAcmV0dXJucyB7b2JqZWN0fSByZWZsZWN0aW9uIG9iamVjdCAob2YgQ3VzdG9tZXIpXG4gICAqL1xuICBjb25zdCBjcmVhdGVDdXN0b21lciA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIGVtYWlsLCBmaXJzdF9uYW1lLCBsYXN0X25hbWUsIHBhc3N3b3JkLFxuICAgIH0gPSByZXEuYm9keTtcblxuICAgIGNvbnNvbGUubG9nKCdib2R5OiAnLCByZXEuYm9keSlcbiAgICBjb25zb2xlLmxvZygnZW1haWw6ICcsIGVtYWlsKVxuICAgIGNvbnNvbGUubG9nKCdmaXJzdF9uYW1lOiAnLCBmaXJzdF9uYW1lKVxuICAgIGNvbnNvbGUubG9nKCdsYXN0X25hbWU6ICcsIGxhc3RfbmFtZSlcbiAgICBjb25zb2xlLmxvZygncGFzc3dvcmQ6ICcsIHBhc3N3b3JkKVxuXG5cbiAgICAvLyBjb25zdCBjcmVhdGVkX29uID0gbW9tZW50KG5ldyBEYXRlKCkpO1xuICAgIGlmIChpc0VtcHR5KGVtYWlsKSB8fCBpc0VtcHR5KGZpcnN0X25hbWUpIHx8IGlzRW1wdHkobGFzdF9uYW1lKSB8fCBpc0VtcHR5KHBhc3N3b3JkKSkge1xuICAgICAgZXJyb3JNZXNzYWdlLmVycm9yID0gJ0VtYWlsLCBwYXNzd29yZCwgZmlyc3QgbmFtZSBhbmQgbGFzdCBuYW1lIGZpZWxkcyBjYW5ub3QgYmUgZW1wdHknO1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoc3RhdHVzLmJhZCkuc2VuZChlcnJvck1lc3NhZ2UuZXJyb3IpO1xuICAgIH1cbiAgICBpZiAoIWlzVmFsaWRFbWFpbChlbWFpbCkpIHtcbiAgICAgIGVycm9yTWVzc2FnZS5lcnJvciA9ICdQbGVhc2UgZW50ZXIgYSB2YWxpZCBFbWFpbCc7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyhzdGF0dXMuYmFkKS5zZW5kKGVycm9yTWVzc2FnZS5lcnJvcik7XG4gICAgfVxuICAgIGlmICghdmFsaWRhdGVQYXNzd29yZChwYXNzd29yZCkpIHtcbiAgICAgIGVycm9yTWVzc2FnZS5lcnJvciA9ICdQYXNzd29yZCBtdXN0IGJlIG1vcmUgdGhhbiBmaXZlKDUpIGNoYXJhY3RlcnMnO1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoc3RhdHVzLmJhZCkuc2VuZChlcnJvck1lc3NhZ2UuZXJyb3IpO1xuICAgIH1cbiAgICAvLyBjb25zdCBoYXNoZWRQYXNzd29yZCA9IGhhc2hQYXNzd29yZChwYXNzd29yZCk7XG4gICAgY29uc3QgY3JlYXRlQ3VzdG9tZXJRdWVyeSA9IGBJTlNFUlQgSU5UT1xuICAgICAgICBDdXN0b21lcihlbWFpbCwgZmlyc3RfbmFtZSwgbGFzdF9uYW1lLCBwYXNzd29yZClcbiAgICAgICAgVkFMVUVTKCQxLCAkMiwgJDMsICQ0KVxuICAgICAgICByZXR1cm5pbmcgKmA7XG4gICAgLy8gY29uc3QgdmFsdWVzID0gW1xuICAgIC8vICAgZW1haWwsXG4gICAgLy8gICBmaXJzdF9uYW1lLFxuICAgIC8vICAgbGFzdF9uYW1lLFxuICAgIC8vICAgaGFzaGVkUGFzc3dvcmQsXG4gICAgLy8gICAvLyBjcmVhdGVkX29uLFxuICAgIC8vIF07XG5cbiAgICBjb25zdCB2YWx1ZXMgPSBbXG4gICAgICBlbWFpbCxcbiAgICAgIGZpcnN0X25hbWUsXG4gICAgICBsYXN0X25hbWUsXG4gICAgICBwYXNzd29yZCxcbiAgICAgIC8vIGNyZWF0ZWRfb24sXG4gICAgXTtcbiAgXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHsgcm93cyB9ID0gYXdhaXQgZGJRdWVyeS5xdWVyeShjcmVhdGVDdXN0b21lclF1ZXJ5LCB2YWx1ZXMpO1xuICAgICAgY29uc3QgZGJSZXNwb25zZSA9IHJvd3NbMF07XG4gICAgICAvLyBkZWxldGUgZGJSZXNwb25zZS5wYXNzd29yZDtcbiAgICAvLyAgIGNvbnN0IHRva2VuID0gZ2VuZXJhdGVVc2VyVG9rZW4oZGJSZXNwb25zZS5lbWFpbCwgZGJSZXNwb25zZS5pZCwgZGJSZXNwb25zZS5pc19hZG1pbiwgZGJSZXNwb25zZS5maXJzdF9uYW1lLCBkYlJlc3BvbnNlLmxhc3RfbmFtZSk7XG4gICAgICBzdWNjZXNzTWVzc2FnZS5kYXRhID0gZGJSZXNwb25zZTtcbiAgICAvLyAgIHN1Y2Nlc3NNZXNzYWdlLmRhdGEudG9rZW4gPSB0b2tlbjtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKHN0YXR1cy5jcmVhdGVkKS5zZW5kKHN1Y2Nlc3NNZXNzYWdlLmRhdGEpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBpZiAoZXJyb3Iucm91dGluZSA9PT0gJ19idF9jaGVja191bmlxdWUnKSB7XG4gICAgICAgIGVycm9yTWVzc2FnZS5lcnJvciA9ICdDdXN0b21lciB3aXRoIHRoYXQgRU1BSUwgYWxyZWFkeSBleGlzdCc7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKHN0YXR1cy5jb25mbGljdCkuc2VuZChlcnJvck1lc3NhZ2UuZXJyb3IpO1xuICAgICAgfVxuICAgICAgZXJyb3JNZXNzYWdlLmVycm9yID0gJ09wZXJhdGlvbiB3YXMgbm90IHN1Y2Nlc3NmdWwnO1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoc3RhdHVzLmVycm9yKS5zZW5kKGVycm9yTWVzc2FnZS5lcnJvcik7XG4gICAgfVxuICB9O1xuICBcbiAgLyoqXG4gICAgICogU2lnbmluXG4gICAgICogQHBhcmFtIHtvYmplY3R9IHJlcVxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSByZXNcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBjdXN0b21lciBvYmplY3RcbiAgICAgKi9cbiAgY29uc3Qgc2lnbmluQ3VzdG9tZXIgPSBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCB7IGVtYWlsLCBwYXNzd29yZCwgZmlyc3RuYW1lLCBsYXN0bmFtZSwgY3JlZGl0Y2FyZCB9ID0gcmVxLmJvZHk7XG4gICAgaWYgKGlzRW1wdHkoZW1haWwpIHx8IGlzRW1wdHkocGFzc3dvcmQpKSB7XG4gICAgICBlcnJvck1lc3NhZ2UuZXJyb3IgPSAnRW1haWwgb3IgUGFzc3dvcmQgZGV0YWlsIGlzIG1pc3NpbmcnO1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoc3RhdHVzLmJhZCkuc2VuZChlcnJvck1lc3NhZ2UuZXJyb3IpO1xuICAgIH1cbiAgICBpZiAoIWlzVmFsaWRFbWFpbChlbWFpbCkpIHtcbiAgICAgIGVycm9yTWVzc2FnZS5lcnJvciA9ICdQbGVhc2UgZW50ZXIgYSB2YWxpZCBFbWFpbCBvciBQYXNzd29yZCc7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyhzdGF0dXMuYmFkKS5zZW5kKGVycm9yTWVzc2FnZS5lcnJvcik7XG4gICAgfVxuICAgIGNvbnN0IHNpZ25pbkN1c3RvbWVyUXVlcnkgPSAnU0VMRUNUICogRlJPTSBDdXN0b21lciBXSEVSRSBlbWFpbCA9ICQxJztcbiAgICB0cnkge1xuICAgICAgY29uc3QgeyByb3dzIH0gPSBhd2FpdCBkYlF1ZXJ5LnF1ZXJ5KHNpZ25pbkN1c3RvbWVyUXVlcnksIFtlbWFpbF0pO1xuICAgICAgY29uc3QgZGJSZXNwb25zZSA9IHJvd3NbMF07XG4gICAgICBpZiAoIWRiUmVzcG9uc2UpIHtcbiAgICAgICAgZXJyb3JNZXNzYWdlLmVycm9yID0gJ0N1c3RvbWVyIHdpdGggdGhpcyBlbWFpbCBkb2VzIG5vdCBleGlzdCc7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycm9yTWVzc2FnZS5lcnJvcik7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKHN0YXR1cy5ub3Rmb3VuZCkuc2VuZChlcnJvck1lc3NhZ2UuZXJyb3IpO1xuICAgICAgfVxuICAgICAgaWYgKCFjb21wYXJlUGFzc3dvcmQoZGJSZXNwb25zZS5wYXNzd29yZCwgcGFzc3dvcmQpKSB7XG4gICAgICAgIGVycm9yTWVzc2FnZS5lcnJvciA9ICdUaGUgcGFzc3dvcmQgeW91IHByb3ZpZGVkIGlzIGluY29ycmVjdCc7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKHN0YXR1cy5iYWQpLnNlbmQoZXJyb3JNZXNzYWdlLmVycm9yKTtcbiAgICAgIH1cbiAgICAgIC8vIGNvbnN0IHRva2VuID0gZ2VuZXJhdGVVc2VyVG9rZW4oZGJSZXNwb25zZS5lbWFpbCwgZGJSZXNwb25zZS5pZCwgZGJSZXNwb25zZS5pc19hZG1pbiwgZGJSZXNwb25zZS5maXJzdF9uYW1lLCBkYlJlc3BvbnNlLmxhc3RfbmFtZSk7XG4gICAgICAvLyBkZWxldGUgZGJSZXNwb25zZS5wYXNzd29yZDtcbiAgICAgIHN1Y2Nlc3NNZXNzYWdlLmRhdGEgPSBkYlJlc3BvbnNlO1xuICAgIC8vICAgc3VjY2Vzc01lc3NhZ2UuZGF0YS50b2tlbiA9IHRva2VuO1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoc3RhdHVzLnN1Y2Nlc3MpLnNlbmQoc3VjY2Vzc01lc3NhZ2UuZGF0YSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGVycm9yTWVzc2FnZS5lcnJvciA9ICdPcGVyYXRpb24gd2FzIG5vdCBzdWNjZXNzZnVsJztcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKHN0YXR1cy5lcnJvcikuc2VuZChlcnJvck1lc3NhZ2UuZXJyb3IpO1xuICAgIH1cbiAgfTtcblxuICAvKipcbiAqIEBwYXJhbXMge09iamVjdH0gcmVxXG4gKiBAcGFyYW1zIHtPYmplY3R9IHJlc1xuICogQHJldHVybnMgcmV0dXJuIGZpcnN0bmFtZSBhbmQgTGFzdG5hbWVcbiAqLyBcblxuIGNvbnN0IHNlYXJjaEN1c3RvbWVyRmlyc3RuYW1lT3JMYXN0bmFtZSA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IHsgZmlyc3RfbmFtZSwgbGFzdF9uYW1lIH0gPSByZXEucXVlcnk7XG4gICAgY29uc3Qgc2VhcmNoUXVlcnkgPSAnU0VMRUNUICogZnJvbSBDdXN0b21lciBXSEVSRSBmaXJzdF9uYW1lID0kMSBPUiBsYXN0X25hbWUgPSQyIE9SREVSIEJZIGlkIERFU0MnO1xuICAgIHRyeSB7XG4gICAgICBjb25zdCB7IHJvd3MgfSA9IGF3YWl0IGRiUXVlcnkucXVlcnkoc2VhcmNoUXVlcnksIFtmaXJzdF9uYW1lLCBsYXN0X25hbWVdKTtcbiAgICAgIGNvbnN0IGRiUmVzcG9uc2UgPSByb3dzO1xuICAgICAgaWYgKCFkYlJlc3BvbnNlWzBdKSB7XG4gICAgICAgIGVycm9yTWVzc2FnZS5lcnJvciA9ICdObyB1c2VyIHdpdGggc3VjaCBuYW1lcyc7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKHN0YXR1cy5ub3Rmb3VuZCkuc2VuZChlcnJvck1lc3NhZ2UuZXJyb3IpO1xuICAgICAgfVxuICAgICAgc3VjY2Vzc01lc3NhZ2UuZGF0YSA9IGRiUmVzcG9uc2U7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyhzdGF0dXMuc3VjY2Vzcykuc2VuZChzdWNjZXNzTWVzc2FnZS5kYXRhKTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICBlcnJvck1lc3NhZ2UuZXJyb3IgPSAnT3BlcmF0aW9uIHdhcyBub3Qgc3VjY2Vzc2Z1bCc7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyhzdGF0dXMuZXJyb3IpLnNlbmQoZXJyb3JNZXNzYWdlLmVycm9yKTtcblxuICAgIH1cbiAgfTtcblxuICAvKipcbiAgICogRWRpdCBBIEN1c3RvbWVyXG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXFcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlc1xuICAgKiBAcmV0dXJucyB7b2JqZWN0fSByZWZsZWN0aW9uIG9iamVjdCAob2YgQ3VzdG9tZXIpXG4gICAqL1xuICBjb25zdCBlZGl0Q3VzdG9tZXIgPSBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBlbWFpbCwgZmlyc3RfbmFtZSwgbGFzdF9uYW1lLCBwYXNzd29yZCwgaWRcbiAgICB9ID0gcmVxLmJvZHk7XG5cbiAgICBjb25zb2xlLmxvZygnYm9keTogJywgcmVxLmJvZHkpXG4gICAgY29uc29sZS5sb2coJ2VtYWlsOiAnLCBlbWFpbClcbiAgICBjb25zb2xlLmxvZygnZmlyc3RfbmFtZTogJywgZmlyc3RfbmFtZSlcbiAgICBjb25zb2xlLmxvZygnbGFzdF9uYW1lOiAnLCBsYXN0X25hbWUpXG4gICAgY29uc29sZS5sb2coJ3Bhc3N3b3JkOiAnLCBwYXNzd29yZClcbiAgICBjb25zb2xlLmxvZygnaWQ6ICcsIGlkKVxuXG5cbiAgICAvLyBjb25zdCBjcmVhdGVkX29uID0gbW9tZW50KG5ldyBEYXRlKCkpO1xuICAgIC8vIGlmIChpc0VtcHR5KGVtYWlsKSB8fCBpc0VtcHR5KGZpcnN0X25hbWUpIHx8IGlzRW1wdHkobGFzdF9uYW1lKSB8fCBpc0VtcHR5KHBhc3N3b3JkKSkge1xuICAgIC8vICAgZXJyb3JNZXNzYWdlLmVycm9yID0gJ0VtYWlsLCBwYXNzd29yZCwgZmlyc3QgbmFtZSBhbmQgbGFzdCBuYW1lIGZpZWxkcyBjYW5ub3QgYmUgZW1wdHknO1xuICAgIC8vICAgcmV0dXJuIHJlcy5zdGF0dXMoc3RhdHVzLmJhZCkuc2VuZChlcnJvck1lc3NhZ2UuZXJyb3IpO1xuICAgIC8vIH1cbiAgICBpZiAoaXNFbXB0eShlbWFpbCkgfHwgaXNFbXB0eShmaXJzdF9uYW1lKSB8fCBpc0VtcHR5KGxhc3RfbmFtZSkgfHwgaXNFbXB0eShwYXNzd29yZCkpIHtcbiAgICAgIGVycm9yTWVzc2FnZS5lcnJvciA9ICdFbWFpbCwgcGFzc3dvcmQsIGZpcnN0IG5hbWUgYW5kIGxhc3QgbmFtZSBmaWVsZHMgY2Fubm90IGJlIGVtcHR5JztcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKHN0YXR1cy5iYWQpLnNlbmQoZXJyb3JNZXNzYWdlLmVycm9yKTtcbiAgICB9XG4gICAgaWYgKCFpc1ZhbGlkRW1haWwoZW1haWwpKSB7XG4gICAgICBlcnJvck1lc3NhZ2UuZXJyb3IgPSAnUGxlYXNlIGVudGVyIGEgdmFsaWQgRW1haWwnO1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoc3RhdHVzLmJhZCkuc2VuZChlcnJvck1lc3NhZ2UuZXJyb3IpO1xuICAgIH1cbiAgICBpZiAoIXZhbGlkYXRlUGFzc3dvcmQocGFzc3dvcmQpKSB7XG4gICAgICBlcnJvck1lc3NhZ2UuZXJyb3IgPSAnUGFzc3dvcmQgbXVzdCBiZSBtb3JlIHRoYW4gZml2ZSg1KSBjaGFyYWN0ZXJzJztcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKHN0YXR1cy5iYWQpLnNlbmQoZXJyb3JNZXNzYWdlLmVycm9yKTtcbiAgICB9XG4gICAgLy8gY29uc3QgaGFzaGVkUGFzc3dvcmQgPSBoYXNoUGFzc3dvcmQocGFzc3dvcmQpO1xuICAgIGNvbnN0IGVkaXRDdXN0b21lclF1ZXJ5ID0gYFVQREFURSBDdXN0b21lciBzZXRcbiAgICAgICAgZW1haWwgPSAkMSxcbiAgICAgICAgZmlyc3RfbmFtZSA9ICQyLFxuICAgICAgICBsYXN0X25hbWUgPSAkMyxcbiAgICAgICAgcGFzc3dvcmQgPSAkNFxuICAgICAgICB3aGVyZSBpZCA9ICQ1XG4gICAgICAgIHJldHVybmluZyAqYDtcbiAgICBjb25zdCB2YWx1ZXMgPSBbXG4gICAgICBlbWFpbCxcbiAgICAgIGZpcnN0X25hbWUsXG4gICAgICBsYXN0X25hbWUsXG4gICAgICBwYXNzd29yZCxcbiAgICAgIGlkXG4gICAgICAvLyBjcmVkaXRjYXJkXG4gICAgICAvLyBjcmVhdGVkX29uLFxuICAgIF07XG4gIFxuICAgIHRyeSB7XG4gICAgICBjb25zdCB7IHJvd3MgfSA9IGF3YWl0IGRiUXVlcnkucXVlcnkoZWRpdEN1c3RvbWVyUXVlcnksIHZhbHVlcyk7XG4gICAgICBjb25zdCBkYlJlc3BvbnNlID0gcm93c1swXTtcbiAgICAgIC8vIGRlbGV0ZSBkYlJlc3BvbnNlLnBhc3N3b3JkO1xuICAgIC8vICAgY29uc3QgdG9rZW4gPSBnZW5lcmF0ZVVzZXJUb2tlbihkYlJlc3BvbnNlLmVtYWlsLCBkYlJlc3BvbnNlLmlkLCBkYlJlc3BvbnNlLmlzX2FkbWluLCBkYlJlc3BvbnNlLmZpcnN0X25hbWUsIGRiUmVzcG9uc2UubGFzdF9uYW1lKTtcbiAgICAgIHN1Y2Nlc3NNZXNzYWdlLmRhdGEgPSBkYlJlc3BvbnNlO1xuICAgIC8vICAgc3VjY2Vzc01lc3NhZ2UuZGF0YS50b2tlbiA9IHRva2VuO1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoc3RhdHVzLmNyZWF0ZWQpLnNlbmQoc3VjY2Vzc01lc3NhZ2UuZGF0YSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGlmIChlcnJvci5yb3V0aW5lID09PSAnX2J0X2NoZWNrX3VuaXF1ZScpIHtcbiAgICAgICAgZXJyb3JNZXNzYWdlLmVycm9yID0gJ0N1c3RvbWVyIHdpdGggdGhhdCBFTUFJTCBhbHJlYWR5IGV4aXN0JztcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoc3RhdHVzLmNvbmZsaWN0KS5zZW5kKGVycm9yTWVzc2FnZS5lcnJvcik7XG4gICAgICB9XG4gICAgICBlcnJvck1lc3NhZ2UuZXJyb3IgPSAnT3BlcmF0aW9uIHdhcyBub3Qgc3VjY2Vzc2Z1bCc7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyhzdGF0dXMuZXJyb3IpLnNlbmQoZXJyb3JNZXNzYWdlLmVycm9yKTtcbiAgICB9XG4gIH07XG5cbiAgLyoqXG4gICAqIGRlbGV0ZSBhIGN1c3RvbWVyXG4gICAqL1xuICBjb25zdCBkZWxldGVDdXN0b21lciA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IHsgaWQgfSA9IHJlcS5ib2R5O1xuICAgIGNvbnN0IGRlbGV0ZUN1c3RvbWVyUXVlcnkgPSAnZGVsZXRlIGZyb20gY3VzdG9tZXIgd2hlcmUgaWQgPSAkMSByZXR1cm5pbmcgKic7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHsgcm93cyB9ID0gYXdhaXQgZGJRdWVyeS5xdWVyeShkZWxldGVDdXN0b21lclF1ZXJ5LCBbaWRdKTtcbiAgICAgIGNvbnN0IGRiUmVzcG9uc2UgPSByb3dzWzBdO1xuICAgICAgc3VjY2Vzc01lc3NhZ2UuZGF0YSA9IGRiUmVzcG9uc2U7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyhzdGF0dXMuc3VjY2Vzcykuc2VuZChzdWNjZXNzTWVzc2FnZS5kYXRhKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgZXJyb3JNZXNzYWdlLmVycm9yID0gJ09wZXJhdGlvbiB3YXMgbm90IHN1Y2Nlc3NmdWwnO1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoc3RhdHVzLmVycm9yKS5zZW5kKGVycm9yTWVzc2FnZS5lcnJvcik7XG4gICAgfVxuICB9O1xuXG4gIC8qKlxuICAgKiBnZXQgbm8uIG9mIGN1c3RvbWVyJ3Mgb3JkZXJzXG4gICAqL1xuICBjb25zdCBvcmRlcnNCeUN1c3RvbWVyID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgeyBpZCB9ID0gcmVxLmJvZHk7XG4gICAgY29uc29sZS5sb2coJ2lkOiAnLCBpZCk7XG4gICAgY29uc3Qgb3JkZXJzQnlDdXN0b21lclF1ZXJ5ID0gJ3NlbGVjdCBjb3VudChpZCkgZnJvbSBvcmRlcnMgd2hlcmUgaWQgPSAkMSc7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHsgcm93cyB9ID0gYXdhaXQgZGJRdWVyeS5xdWVyeShvcmRlcnNCeUN1c3RvbWVyUXVlcnksIFtpZF0pO1xuICAgICAgY29uc3QgZGJSZXNwb25zZSA9IHJvd3NbMF07XG4gICAgICBzdWNjZXNzTWVzc2FnZS5kYXRhID0gZGJSZXNwb25zZTtcbiAgICAgIGNvbnNvbGUubG9nKCdyZXM6ICcsIGRiUmVzcG9uc2UpO1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoc3RhdHVzLnN1Y2Nlc3MpLnNlbmQoc3VjY2Vzc01lc3NhZ2UuZGF0YSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICAgIGVycm9yTWVzc2FnZS5lcnJvciA9ICdPcGVyYXRpb24gd2FzIG5vdCBzdWNjZXNzZnVsJztcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKHN0YXR1cy5lcnJvcikuc2VuZChlcnJvck1lc3NhZ2UuZXJyb3IpO1xuICAgIH1cbiAgfVxuICBcbiAgZXhwb3J0IHtcbiAgICBjcmVhdGVDdXN0b21lcixcbiAgICBzaWduaW5DdXN0b21lcixcbiAgICBzZWFyY2hDdXN0b21lckZpcnN0bmFtZU9yTGFzdG5hbWUsXG4gICAgZWRpdEN1c3RvbWVyLFxuICAgIGRlbGV0ZUN1c3RvbWVyLFxuICAgIG9yZGVyc0J5Q3VzdG9tZXIsXG4gIH07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "customersController.js"
      ],
      "names": [
        "createCustomer",
        "req",
        "res",
        "body",
        "email",
        "first_name",
        "last_name",
        "password",
        "console",
        "log",
        "errorMessage",
        "error",
        "status",
        "bad",
        "send",
        "createCustomerQuery",
        "values",
        "dbQuery",
        "query",
        "rows",
        "dbResponse",
        "successMessage",
        "data",
        "created",
        "routine",
        "conflict",
        "signinCustomer",
        "firstname",
        "lastname",
        "creditcard",
        "signinCustomerQuery",
        "notfound",
        "success",
        "searchCustomerFirstnameOrLastname",
        "searchQuery",
        "editCustomer",
        "id",
        "editCustomerQuery",
        "deleteCustomer",
        "deleteCustomerQuery",
        "ordersByCustomer",
        "ordersByCustomerQuery"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/controllers/",
      "sourcesContent": [
        "import moment from 'moment';\n\nimport dbQuery from '../db/dev/dbQuery';\n\nimport {\n    hashPassword,\n    comparePassword,\n    isValidEmail,\n    validatePassword,\n    isEmpty,\n} from '../helpers/validations';\n  \nimport {\n    errorMessage, successMessage, status,\n} from '../helpers/status';\n\n/**\n   * Create A Customer\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} reflection object (of Customer)\n   */\n  const createCustomer = async (req, res) => {\n    const {\n      email, first_name, last_name, password,\n    } = req.body;\n\n    console.log('body: ', req.body)\n    console.log('email: ', email)\n    console.log('first_name: ', first_name)\n    console.log('last_name: ', last_name)\n    console.log('password: ', password)\n\n\n    // const created_on = moment(new Date());\n    if (isEmpty(email) || isEmpty(first_name) || isEmpty(last_name) || isEmpty(password)) {\n      errorMessage.error = 'Email, password, first name and last name fields cannot be empty';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    if (!isValidEmail(email)) {\n      errorMessage.error = 'Please enter a valid Email';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    if (!validatePassword(password)) {\n      errorMessage.error = 'Password must be more than five(5) characters';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    // const hashedPassword = hashPassword(password);\n    const createCustomerQuery = `INSERT INTO\n        Customer(email, first_name, last_name, password)\n        VALUES($1, $2, $3, $4)\n        returning *`;\n    // const values = [\n    //   email,\n    //   first_name,\n    //   last_name,\n    //   hashedPassword,\n    //   // created_on,\n    // ];\n\n    const values = [\n      email,\n      first_name,\n      last_name,\n      password,\n      // created_on,\n    ];\n  \n    try {\n      const { rows } = await dbQuery.query(createCustomerQuery, values);\n      const dbResponse = rows[0];\n      // delete dbResponse.password;\n    //   const token = generateUserToken(dbResponse.email, dbResponse.id, dbResponse.is_admin, dbResponse.first_name, dbResponse.last_name);\n      successMessage.data = dbResponse;\n    //   successMessage.data.token = token;\n      return res.status(status.created).send(successMessage.data);\n    } catch (error) {\n      if (error.routine === '_bt_check_unique') {\n        errorMessage.error = 'Customer with that EMAIL already exist';\n        return res.status(status.conflict).send(errorMessage.error);\n      }\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n    }\n  };\n  \n  /**\n     * Signin\n     * @param {object} req\n     * @param {object} res\n     * @returns {object} customer object\n     */\n  const signinCustomer = async (req, res) => {\n    const { email, password, firstname, lastname, creditcard } = req.body;\n    if (isEmpty(email) || isEmpty(password)) {\n      errorMessage.error = 'Email or Password detail is missing';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    if (!isValidEmail(email)) {\n      errorMessage.error = 'Please enter a valid Email or Password';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    const signinCustomerQuery = 'SELECT * FROM Customer WHERE email = $1';\n    try {\n      const { rows } = await dbQuery.query(signinCustomerQuery, [email]);\n      const dbResponse = rows[0];\n      if (!dbResponse) {\n        errorMessage.error = 'Customer with this email does not exist';\n        console.log(errorMessage.error);\n        return res.status(status.notfound).send(errorMessage.error);\n      }\n      if (!comparePassword(dbResponse.password, password)) {\n        errorMessage.error = 'The password you provided is incorrect';\n        return res.status(status.bad).send(errorMessage.error);\n      }\n      // const token = generateUserToken(dbResponse.email, dbResponse.id, dbResponse.is_admin, dbResponse.first_name, dbResponse.last_name);\n      // delete dbResponse.password;\n      successMessage.data = dbResponse;\n    //   successMessage.data.token = token;\n      return res.status(status.success).send(successMessage.data);\n    } catch (error) {\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n    }\n  };\n\n  /**\n * @params {Object} req\n * @params {Object} res\n * @returns return firstname and Lastname\n */ \n\n const searchCustomerFirstnameOrLastname = async (req, res) => {\n    const { first_name, last_name } = req.query;\n    const searchQuery = 'SELECT * from Customer WHERE first_name =$1 OR last_name =$2 ORDER BY id DESC';\n    try {\n      const { rows } = await dbQuery.query(searchQuery, [first_name, last_name]);\n      const dbResponse = rows;\n      if (!dbResponse[0]) {\n        errorMessage.error = 'No user with such names';\n        return res.status(status.notfound).send(errorMessage.error);\n      }\n      successMessage.data = dbResponse;\n      return res.status(status.success).send(successMessage.data);\n    }\n    catch (error) {\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n\n    }\n  };\n\n  /**\n   * Edit A Customer\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} reflection object (of Customer)\n   */\n  const editCustomer = async (req, res) => {\n    const {\n      email, first_name, last_name, password, id\n    } = req.body;\n\n    console.log('body: ', req.body)\n    console.log('email: ', email)\n    console.log('first_name: ', first_name)\n    console.log('last_name: ', last_name)\n    console.log('password: ', password)\n    console.log('id: ', id)\n\n\n    // const created_on = moment(new Date());\n    // if (isEmpty(email) || isEmpty(first_name) || isEmpty(last_name) || isEmpty(password)) {\n    //   errorMessage.error = 'Email, password, first name and last name fields cannot be empty';\n    //   return res.status(status.bad).send(errorMessage.error);\n    // }\n    if (isEmpty(email) || isEmpty(first_name) || isEmpty(last_name) || isEmpty(password)) {\n      errorMessage.error = 'Email, password, first name and last name fields cannot be empty';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    if (!isValidEmail(email)) {\n      errorMessage.error = 'Please enter a valid Email';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    if (!validatePassword(password)) {\n      errorMessage.error = 'Password must be more than five(5) characters';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    // const hashedPassword = hashPassword(password);\n    const editCustomerQuery = `UPDATE Customer set\n        email = $1,\n        first_name = $2,\n        last_name = $3,\n        password = $4\n        where id = $5\n        returning *`;\n    const values = [\n      email,\n      first_name,\n      last_name,\n      password,\n      id\n      // creditcard\n      // created_on,\n    ];\n  \n    try {\n      const { rows } = await dbQuery.query(editCustomerQuery, values);\n      const dbResponse = rows[0];\n      // delete dbResponse.password;\n    //   const token = generateUserToken(dbResponse.email, dbResponse.id, dbResponse.is_admin, dbResponse.first_name, dbResponse.last_name);\n      successMessage.data = dbResponse;\n    //   successMessage.data.token = token;\n      return res.status(status.created).send(successMessage.data);\n    } catch (error) {\n      if (error.routine === '_bt_check_unique') {\n        errorMessage.error = 'Customer with that EMAIL already exist';\n        return res.status(status.conflict).send(errorMessage.error);\n      }\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n    }\n  };\n\n  /**\n   * delete a customer\n   */\n  const deleteCustomer = async (req, res) => {\n    const { id } = req.body;\n    const deleteCustomerQuery = 'delete from customer where id = $1 returning *';\n    try {\n      const { rows } = await dbQuery.query(deleteCustomerQuery, [id]);\n      const dbResponse = rows[0];\n      successMessage.data = dbResponse;\n      return res.status(status.success).send(successMessage.data);\n    } catch (error) {\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n    }\n  };\n\n  /**\n   * get no. of customer's orders\n   */\n  const ordersByCustomer = async (req, res) => {\n    const { id } = req.body;\n    console.log('id: ', id);\n    const ordersByCustomerQuery = 'select count(id) from orders where id = $1';\n    try {\n      const { rows } = await dbQuery.query(ordersByCustomerQuery, [id]);\n      const dbResponse = rows[0];\n      successMessage.data = dbResponse;\n      console.log('res: ', dbResponse);\n      return res.status(status.success).send(successMessage.data);\n    } catch (error) {\n      console.log(error);\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n    }\n  }\n  \n  export {\n    createCustomer,\n    signinCustomer,\n    searchCustomerFirstnameOrLastname,\n    editCustomer,\n    deleteCustomer,\n    ordersByCustomer,\n  };\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588644908752
  },
  "{\"sourceRoot\":\"/Users/ngjingkang/Desktop/website/backend/app/db/dev/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/ngjingkang/Desktop/website/backend\",\"filename\":\"/Users/ngjingkang/Desktop/website/backend/app/db/dev/dbQuery.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/ngjingkang/Desktop/website/backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/db/dev/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/ngjingkang/Desktop/website/backend",
      "filename": "/Users/ngjingkang/Desktop/website/backend/app/db/dev/dbQuery.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/ngjingkang/Desktop/website/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ngjingkang/Desktop/website/backend/app/db/dev/dbQuery.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/ngjingkang/Desktop/website/backend/app/db/dev/dbQuery.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/db/dev/",
        "sourceFileName": "dbQuery.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _pool = _interopRequireDefault(require(\"./pool\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//db/dev/dbQuery.js\nvar _default = {\n  /**\n   * DB Query\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} object\n   */\n  query: function query(queryText, params) {\n    return new Promise(function (resolve, reject) {\n      _pool[\"default\"].query(queryText, params).then(function (res) {\n        resolve(res);\n      })[\"catch\"](function (err) {\n        reject(err);\n      });\n    });\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiUXVlcnkuanMiXSwibmFtZXMiOlsicXVlcnkiLCJxdWVyeVRleHQiLCJwYXJhbXMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInBvb2wiLCJ0aGVuIiwicmVzIiwiZXJyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRUE7Ozs7QUFGQTtlQUllO0FBQ2I7Ozs7OztBQU1BQSxFQUFBQSxLQVBhLGlCQU9QQyxTQVBPLEVBT0lDLE1BUEosRUFPWTtBQUN2QixXQUFPLElBQUlDLE9BQUosQ0FBWSxVQUFDQyxPQUFELEVBQVVDLE1BQVYsRUFBcUI7QUFDdENDLHVCQUFLTixLQUFMLENBQVdDLFNBQVgsRUFBc0JDLE1BQXRCLEVBQ0dLLElBREgsQ0FDUSxVQUFDQyxHQUFELEVBQVM7QUFDYkosUUFBQUEsT0FBTyxDQUFDSSxHQUFELENBQVA7QUFDRCxPQUhILFdBSVMsVUFBQ0MsR0FBRCxFQUFTO0FBQ2RKLFFBQUFBLE1BQU0sQ0FBQ0ksR0FBRCxDQUFOO0FBQ0QsT0FOSDtBQU9ELEtBUk0sQ0FBUDtBQVNEO0FBakJZLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL25namluZ2thbmcvRGVza3RvcC93ZWJzaXRlL2JhY2tlbmQvYXBwL2RiL2Rldi8iLCJzb3VyY2VzQ29udGVudCI6WyIvL2RiL2Rldi9kYlF1ZXJ5LmpzXG5cbmltcG9ydCBwb29sIGZyb20gJy4vcG9vbCc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgLyoqXG4gICAqIERCIFF1ZXJ5XG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXFcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlc1xuICAgKiBAcmV0dXJucyB7b2JqZWN0fSBvYmplY3RcbiAgICovXG4gIHF1ZXJ5KHF1ZXJ5VGV4dCwgcGFyYW1zKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIHBvb2wucXVlcnkocXVlcnlUZXh0LCBwYXJhbXMpXG4gICAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgICByZXNvbHZlKHJlcyk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuICB9LFxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "dbQuery.js"
      ],
      "names": [
        "query",
        "queryText",
        "params",
        "Promise",
        "resolve",
        "reject",
        "pool",
        "then",
        "res",
        "err"
      ],
      "mappings": ";;;;;;;AAEA;;;;AAFA;eAIe;AACb;;;;;;AAMAA,EAAAA,KAPa,iBAOPC,SAPO,EAOIC,MAPJ,EAOY;AACvB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,uBAAKN,KAAL,CAAWC,SAAX,EAAsBC,MAAtB,EACGK,IADH,CACQ,UAACC,GAAD,EAAS;AACbJ,QAAAA,OAAO,CAACI,GAAD,CAAP;AACD,OAHH,WAIS,UAACC,GAAD,EAAS;AACdJ,QAAAA,MAAM,CAACI,GAAD,CAAN;AACD,OANH;AAOD,KARM,CAAP;AASD;AAjBY,C",
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/db/dev/",
      "sourcesContent": [
        "//db/dev/dbQuery.js\n\nimport pool from './pool';\n\nexport default {\n  /**\n   * DB Query\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} object\n   */\n  query(queryText, params) {\n    return new Promise((resolve, reject) => {\n      pool.query(queryText, params)\n        .then((res) => {\n          resolve(res);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  },\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1586140081669
  },
  "{\"sourceRoot\":\"/Users/ngjingkang/Desktop/website/backend/app/db/dev/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/ngjingkang/Desktop/website/backend\",\"filename\":\"/Users/ngjingkang/Desktop/website/backend/app/db/dev/pool.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/ngjingkang/Desktop/website/backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/db/dev/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/ngjingkang/Desktop/website/backend",
      "filename": "/Users/ngjingkang/Desktop/website/backend/app/db/dev/pool.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/ngjingkang/Desktop/website/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ngjingkang/Desktop/website/backend/app/db/dev/pool.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/ngjingkang/Desktop/website/backend/app/db/dev/pool.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/db/dev/",
        "sourceFileName": "pool.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _pg = require(\"pg\");\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//db/dev/pool.js\n_dotenv[\"default\"].config();\n\nvar databaseConfig = {\n  connectionString: process.env.DATABASE_URL\n};\nvar pool = new _pg.Pool(databaseConfig);\nvar _default = pool;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvb2wuanMiXSwibmFtZXMiOlsiZG90ZW52IiwiY29uZmlnIiwiZGF0YWJhc2VDb25maWciLCJjb25uZWN0aW9uU3RyaW5nIiwicHJvY2VzcyIsImVudiIsIkRBVEFCQVNFX1VSTCIsInBvb2wiLCJQb29sIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRUE7O0FBRUE7Ozs7QUFKQTtBQU1BQSxtQkFBT0MsTUFBUDs7QUFFQSxJQUFNQyxjQUFjLEdBQUc7QUFBRUMsRUFBQUEsZ0JBQWdCLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQztBQUFoQyxDQUF2QjtBQUNBLElBQU1DLElBQUksR0FBRyxJQUFJQyxRQUFKLENBQVNOLGNBQVQsQ0FBYjtlQUVlSyxJIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9uZ2ppbmdrYW5nL0Rlc2t0b3Avd2Vic2l0ZS9iYWNrZW5kL2FwcC9kYi9kZXYvIiwic291cmNlc0NvbnRlbnQiOlsiLy9kYi9kZXYvcG9vbC5qc1xuXG5pbXBvcnQgeyBQb29sIH0gZnJvbSAncGcnO1xuXG5pbXBvcnQgZG90ZW52IGZyb20gJ2RvdGVudic7XG5cbmRvdGVudi5jb25maWcoKTtcblxuY29uc3QgZGF0YWJhc2VDb25maWcgPSB7IGNvbm5lY3Rpb25TdHJpbmc6IHByb2Nlc3MuZW52LkRBVEFCQVNFX1VSTCB9O1xuY29uc3QgcG9vbCA9IG5ldyBQb29sKGRhdGFiYXNlQ29uZmlnKTtcblxuZXhwb3J0IGRlZmF1bHQgcG9vbDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "pool.js"
      ],
      "names": [
        "dotenv",
        "config",
        "databaseConfig",
        "connectionString",
        "process",
        "env",
        "DATABASE_URL",
        "pool",
        "Pool"
      ],
      "mappings": ";;;;;;;AAEA;;AAEA;;;;AAJA;AAMAA,mBAAOC,MAAP;;AAEA,IAAMC,cAAc,GAAG;AAAEC,EAAAA,gBAAgB,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAAhC,CAAvB;AACA,IAAMC,IAAI,GAAG,IAAIC,QAAJ,CAASN,cAAT,CAAb;eAEeK,I",
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/db/dev/",
      "sourcesContent": [
        "//db/dev/pool.js\n\nimport { Pool } from 'pg';\n\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nconst databaseConfig = { connectionString: process.env.DATABASE_URL };\nconst pool = new Pool(databaseConfig);\n\nexport default pool;"
      ]
    },
    "sourceType": "script",
    "mtime": 1586140081670
  },
  "{\"sourceRoot\":\"/Users/ngjingkang/Desktop/website/backend/app/helpers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/ngjingkang/Desktop/website/backend\",\"filename\":\"/Users/ngjingkang/Desktop/website/backend/app/helpers/validations.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/ngjingkang/Desktop/website/backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/helpers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/ngjingkang/Desktop/website/backend",
      "filename": "/Users/ngjingkang/Desktop/website/backend/app/helpers/validations.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/ngjingkang/Desktop/website/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ngjingkang/Desktop/website/backend/app/helpers/validations.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/ngjingkang/Desktop/website/backend/app/helpers/validations.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/helpers/",
        "sourceFileName": "validations.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isNum = exports.generateUserToken = exports.empty = exports.isEmpty = exports.validatePassword = exports.isValidEmail = exports.comparePassword = exports.hashPassword = void 0;\n\nvar _bcryptjs = _interopRequireDefault(require(\"bcryptjs\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _env = _interopRequireDefault(require(\"../../env\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/* eslint-disable camelcase */\n\n/**\n   * Hash Password Method\n   * @param {string} password\n   * @returns {string} returns hashed password\n   */\nvar saltRounds = 10;\n\nvar salt = _bcryptjs[\"default\"].genSaltSync(saltRounds);\n\nvar hashPassword = function hashPassword(password) {\n  return _bcryptjs[\"default\"].hashSync(password, salt);\n};\n/**\n   * comparePassword\n   * @param {string} hashPassword\n   * @param {string} password\n   * @returns {Boolean} return True or False\n   */\n\n\nexports.hashPassword = hashPassword;\n\nvar comparePassword = function comparePassword(hashedPassword, password) {\n  return hashedPassword === password; // return bcrypt.compareSync(password, hashedPassword);\n};\n/**\n   * isValidEmail helper method\n   * @param {string} email\n   * @returns {Boolean} True or False\n   */\n\n\nexports.comparePassword = comparePassword;\n\nvar isValidEmail = function isValidEmail(email) {\n  var regEx = /\\S+@\\S+\\.\\S+/;\n  return regEx.test(email);\n};\n/**\n   * validatePassword helper method\n   * @param {string} password\n   * @returns {Boolean} True or False\n   */\n\n\nexports.isValidEmail = isValidEmail;\n\nvar validatePassword = function validatePassword(password) {\n  if (password.length <= 5 || password === '') {\n    return false;\n  }\n\n  return true;\n};\n/**\n   * isEmpty helper method\n   * @param {string, integer} input\n   * @returns {Boolean} True or False\n   */\n\n\nexports.validatePassword = validatePassword;\n\nvar isEmpty = function isEmpty(input) {\n  if (input === undefined || input === '') {\n    return true;\n  }\n\n  if (input.replace(/\\s/g, '').length) {\n    return false;\n  }\n\n  return true;\n};\n\nexports.isEmpty = isEmpty;\n\nvar isNum = function isNum(input) {\n  if (!isNaN(Number(input))) {\n    return true;\n  }\n\n  return false;\n}; // /**\n//    * empty helper method\n//    * @param {string, integer} input\n//    * @returns {Boolean} True or False\n//    */\n// const empty = (input) => {\n//   if (input === undefined || input === '') {\n//     return true;\n//   }\n// };\n\n/**\n   * empty helper method\n   * @param {string, integer} input\n   * @returns {Boolean} True or False\n   */\n\n\nexports.isNum = isNum;\n\nvar empty = function empty(input) {\n  if (input === undefined) {\n    return true;\n  }\n};\n/**\n   * Generate Token\n   * @param {string} id\n   * @returns {string} token\n   */\n\n\nexports.empty = empty;\n\nvar generateUserToken = function generateUserToken(email, id, is_admin, first_name, last_name) {\n  var token = _jsonwebtoken[\"default\"].sign({\n    email: email,\n    user_id: id,\n    is_admin: is_admin,\n    first_name: first_name,\n    last_name: last_name\n  }, _env[\"default\"].secret, {\n    expiresIn: '3d'\n  });\n\n  return token;\n};\n\nexports.generateUserToken = generateUserToken;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbGlkYXRpb25zLmpzIl0sIm5hbWVzIjpbInNhbHRSb3VuZHMiLCJzYWx0IiwiYmNyeXB0IiwiZ2VuU2FsdFN5bmMiLCJoYXNoUGFzc3dvcmQiLCJwYXNzd29yZCIsImhhc2hTeW5jIiwiY29tcGFyZVBhc3N3b3JkIiwiaGFzaGVkUGFzc3dvcmQiLCJpc1ZhbGlkRW1haWwiLCJlbWFpbCIsInJlZ0V4IiwidGVzdCIsInZhbGlkYXRlUGFzc3dvcmQiLCJsZW5ndGgiLCJpc0VtcHR5IiwiaW5wdXQiLCJ1bmRlZmluZWQiLCJyZXBsYWNlIiwiaXNOdW0iLCJpc05hTiIsIk51bWJlciIsImVtcHR5IiwiZ2VuZXJhdGVVc2VyVG9rZW4iLCJpZCIsImlzX2FkbWluIiwiZmlyc3RfbmFtZSIsImxhc3RfbmFtZSIsInRva2VuIiwiand0Iiwic2lnbiIsInVzZXJfaWQiLCJlbnYiLCJzZWNyZXQiLCJleHBpcmVzSW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUhBOztBQUlBOzs7OztBQUtBLElBQU1BLFVBQVUsR0FBRyxFQUFuQjs7QUFDQSxJQUFNQyxJQUFJLEdBQUdDLHFCQUFPQyxXQUFQLENBQW1CSCxVQUFuQixDQUFiOztBQUNBLElBQU1JLFlBQVksR0FBRyxTQUFmQSxZQUFlLENBQUFDLFFBQVE7QUFBQSxTQUFJSCxxQkFBT0ksUUFBUCxDQUFnQkQsUUFBaEIsRUFBMEJKLElBQTFCLENBQUo7QUFBQSxDQUE3QjtBQUVBOzs7Ozs7Ozs7O0FBTUEsSUFBTU0sZUFBZSxHQUFHLFNBQWxCQSxlQUFrQixDQUFDQyxjQUFELEVBQWlCSCxRQUFqQixFQUE4QjtBQUNwRCxTQUFRRyxjQUFjLEtBQUtILFFBQTNCLENBRG9ELENBRXBEO0FBQ0QsQ0FIRDtBQUtBOzs7Ozs7Ozs7QUFLQSxJQUFNSSxZQUFZLEdBQUcsU0FBZkEsWUFBZSxDQUFDQyxLQUFELEVBQVc7QUFDOUIsTUFBTUMsS0FBSyxHQUFHLGNBQWQ7QUFDQSxTQUFPQSxLQUFLLENBQUNDLElBQU4sQ0FBV0YsS0FBWCxDQUFQO0FBQ0QsQ0FIRDtBQUtBOzs7Ozs7Ozs7QUFLQSxJQUFNRyxnQkFBZ0IsR0FBRyxTQUFuQkEsZ0JBQW1CLENBQUNSLFFBQUQsRUFBYztBQUNyQyxNQUFJQSxRQUFRLENBQUNTLE1BQVQsSUFBbUIsQ0FBbkIsSUFBd0JULFFBQVEsS0FBSyxFQUF6QyxFQUE2QztBQUMzQyxXQUFPLEtBQVA7QUFDRDs7QUFBQyxTQUFPLElBQVA7QUFDSCxDQUpEO0FBTUE7Ozs7Ozs7OztBQUtBLElBQU1VLE9BQU8sR0FBRyxTQUFWQSxPQUFVLENBQUNDLEtBQUQsRUFBVztBQUN6QixNQUFJQSxLQUFLLEtBQUtDLFNBQVYsSUFBdUJELEtBQUssS0FBSyxFQUFyQyxFQUF5QztBQUN2QyxXQUFPLElBQVA7QUFDRDs7QUFDRCxNQUFJQSxLQUFLLENBQUNFLE9BQU4sQ0FBYyxLQUFkLEVBQXFCLEVBQXJCLEVBQXlCSixNQUE3QixFQUFxQztBQUNuQyxXQUFPLEtBQVA7QUFDRDs7QUFBQyxTQUFPLElBQVA7QUFDSCxDQVBEOzs7O0FBU0EsSUFBTUssS0FBSyxHQUFHLFNBQVJBLEtBQVEsQ0FBQ0gsS0FBRCxFQUFXO0FBQ3ZCLE1BQUksQ0FBQ0ksS0FBSyxDQUFDQyxNQUFNLENBQUNMLEtBQUQsQ0FBUCxDQUFWLEVBQTJCO0FBQ3pCLFdBQU8sSUFBUDtBQUNEOztBQUFDLFNBQU8sS0FBUDtBQUNILENBSkQsQyxDQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7QUFLRSxJQUFNTSxLQUFLLEdBQUcsU0FBUkEsS0FBUSxDQUFDTixLQUFELEVBQVc7QUFDdkIsTUFBSUEsS0FBSyxLQUFLQyxTQUFkLEVBQXlCO0FBQ3ZCLFdBQU8sSUFBUDtBQUNEO0FBQ0YsQ0FKRDtBQU1GOzs7Ozs7Ozs7QUFLQSxJQUFNTSxpQkFBaUIsR0FBRyxTQUFwQkEsaUJBQW9CLENBQUNiLEtBQUQsRUFBUWMsRUFBUixFQUFZQyxRQUFaLEVBQXNCQyxVQUF0QixFQUFrQ0MsU0FBbEMsRUFBZ0Q7QUFDeEUsTUFBTUMsS0FBSyxHQUFHQyx5QkFBSUMsSUFBSixDQUFTO0FBQ3JCcEIsSUFBQUEsS0FBSyxFQUFMQSxLQURxQjtBQUVyQnFCLElBQUFBLE9BQU8sRUFBRVAsRUFGWTtBQUdyQkMsSUFBQUEsUUFBUSxFQUFSQSxRQUhxQjtBQUlyQkMsSUFBQUEsVUFBVSxFQUFWQSxVQUpxQjtBQUtyQkMsSUFBQUEsU0FBUyxFQUFUQTtBQUxxQixHQUFULEVBT2RLLGdCQUFJQyxNQVBVLEVBT0Y7QUFBRUMsSUFBQUEsU0FBUyxFQUFFO0FBQWIsR0FQRSxDQUFkOztBQVFBLFNBQU9OLEtBQVA7QUFDRCxDQVZEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9uZ2ppbmdrYW5nL0Rlc2t0b3Avd2Vic2l0ZS9iYWNrZW5kL2FwcC9oZWxwZXJzLyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIGNhbWVsY2FzZSAqL1xuaW1wb3J0IGJjcnlwdCBmcm9tICdiY3J5cHRqcyc7XG5pbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbic7XG5pbXBvcnQgZW52IGZyb20gJy4uLy4uL2Vudic7XG4vKipcbiAgICogSGFzaCBQYXNzd29yZCBNZXRob2RcbiAgICogQHBhcmFtIHtzdHJpbmd9IHBhc3N3b3JkXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9IHJldHVybnMgaGFzaGVkIHBhc3N3b3JkXG4gICAqL1xuY29uc3Qgc2FsdFJvdW5kcyA9IDEwO1xuY29uc3Qgc2FsdCA9IGJjcnlwdC5nZW5TYWx0U3luYyhzYWx0Um91bmRzKTtcbmNvbnN0IGhhc2hQYXNzd29yZCA9IHBhc3N3b3JkID0+IGJjcnlwdC5oYXNoU3luYyhwYXNzd29yZCwgc2FsdCk7XG5cbi8qKlxuICAgKiBjb21wYXJlUGFzc3dvcmRcbiAgICogQHBhcmFtIHtzdHJpbmd9IGhhc2hQYXNzd29yZFxuICAgKiBAcGFyYW0ge3N0cmluZ30gcGFzc3dvcmRcbiAgICogQHJldHVybnMge0Jvb2xlYW59IHJldHVybiBUcnVlIG9yIEZhbHNlXG4gICAqL1xuY29uc3QgY29tcGFyZVBhc3N3b3JkID0gKGhhc2hlZFBhc3N3b3JkLCBwYXNzd29yZCkgPT4ge1xuICByZXR1cm4gKGhhc2hlZFBhc3N3b3JkID09PSBwYXNzd29yZCk7XG4gIC8vIHJldHVybiBiY3J5cHQuY29tcGFyZVN5bmMocGFzc3dvcmQsIGhhc2hlZFBhc3N3b3JkKTtcbn07XG5cbi8qKlxuICAgKiBpc1ZhbGlkRW1haWwgaGVscGVyIG1ldGhvZFxuICAgKiBAcGFyYW0ge3N0cmluZ30gZW1haWxcbiAgICogQHJldHVybnMge0Jvb2xlYW59IFRydWUgb3IgRmFsc2VcbiAgICovXG5jb25zdCBpc1ZhbGlkRW1haWwgPSAoZW1haWwpID0+IHtcbiAgY29uc3QgcmVnRXggPSAvXFxTK0BcXFMrXFwuXFxTKy87XG4gIHJldHVybiByZWdFeC50ZXN0KGVtYWlsKTtcbn07XG5cbi8qKlxuICAgKiB2YWxpZGF0ZVBhc3N3b3JkIGhlbHBlciBtZXRob2RcbiAgICogQHBhcmFtIHtzdHJpbmd9IHBhc3N3b3JkXG4gICAqIEByZXR1cm5zIHtCb29sZWFufSBUcnVlIG9yIEZhbHNlXG4gICAqL1xuY29uc3QgdmFsaWRhdGVQYXNzd29yZCA9IChwYXNzd29yZCkgPT4ge1xuICBpZiAocGFzc3dvcmQubGVuZ3RoIDw9IDUgfHwgcGFzc3dvcmQgPT09ICcnKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IHJldHVybiB0cnVlO1xufTtcblxuLyoqXG4gICAqIGlzRW1wdHkgaGVscGVyIG1ldGhvZFxuICAgKiBAcGFyYW0ge3N0cmluZywgaW50ZWdlcn0gaW5wdXRcbiAgICogQHJldHVybnMge0Jvb2xlYW59IFRydWUgb3IgRmFsc2VcbiAgICovXG5jb25zdCBpc0VtcHR5ID0gKGlucHV0KSA9PiB7XG4gIGlmIChpbnB1dCA9PT0gdW5kZWZpbmVkIHx8IGlucHV0ID09PSAnJykge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIGlmIChpbnB1dC5yZXBsYWNlKC9cXHMvZywgJycpLmxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSByZXR1cm4gdHJ1ZTtcbn07XG5cbmNvbnN0IGlzTnVtID0gKGlucHV0KSA9PiB7XG4gIGlmICghaXNOYU4oTnVtYmVyKGlucHV0KSkpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSByZXR1cm4gZmFsc2U7XG59XG5cbi8vIC8qKlxuLy8gICAgKiBlbXB0eSBoZWxwZXIgbWV0aG9kXG4vLyAgICAqIEBwYXJhbSB7c3RyaW5nLCBpbnRlZ2VyfSBpbnB1dFxuLy8gICAgKiBAcmV0dXJucyB7Qm9vbGVhbn0gVHJ1ZSBvciBGYWxzZVxuLy8gICAgKi9cbi8vIGNvbnN0IGVtcHR5ID0gKGlucHV0KSA9PiB7XG4vLyAgIGlmIChpbnB1dCA9PT0gdW5kZWZpbmVkIHx8IGlucHV0ID09PSAnJykge1xuLy8gICAgIHJldHVybiB0cnVlO1xuLy8gICB9XG4vLyB9O1xuXG4vKipcbiAgICogZW1wdHkgaGVscGVyIG1ldGhvZFxuICAgKiBAcGFyYW0ge3N0cmluZywgaW50ZWdlcn0gaW5wdXRcbiAgICogQHJldHVybnMge0Jvb2xlYW59IFRydWUgb3IgRmFsc2VcbiAgICovXG4gIGNvbnN0IGVtcHR5ID0gKGlucHV0KSA9PiB7XG4gICAgaWYgKGlucHV0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfTtcblxuLyoqXG4gICAqIEdlbmVyYXRlIFRva2VuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBpZFxuICAgKiBAcmV0dXJucyB7c3RyaW5nfSB0b2tlblxuICAgKi9cbmNvbnN0IGdlbmVyYXRlVXNlclRva2VuID0gKGVtYWlsLCBpZCwgaXNfYWRtaW4sIGZpcnN0X25hbWUsIGxhc3RfbmFtZSkgPT4ge1xuICBjb25zdCB0b2tlbiA9IGp3dC5zaWduKHtcbiAgICBlbWFpbCxcbiAgICB1c2VyX2lkOiBpZCxcbiAgICBpc19hZG1pbixcbiAgICBmaXJzdF9uYW1lLFxuICAgIGxhc3RfbmFtZSxcbiAgfSxcbiAgZW52LnNlY3JldCwgeyBleHBpcmVzSW46ICczZCcgfSk7XG4gIHJldHVybiB0b2tlbjtcbn07XG5cblxuZXhwb3J0IHtcbiAgaGFzaFBhc3N3b3JkLFxuICBjb21wYXJlUGFzc3dvcmQsXG4gIGlzVmFsaWRFbWFpbCxcbiAgdmFsaWRhdGVQYXNzd29yZCxcbiAgaXNFbXB0eSxcbiAgZW1wdHksXG4gIGdlbmVyYXRlVXNlclRva2VuLFxuICBpc051bSxcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "validations.js"
      ],
      "names": [
        "saltRounds",
        "salt",
        "bcrypt",
        "genSaltSync",
        "hashPassword",
        "password",
        "hashSync",
        "comparePassword",
        "hashedPassword",
        "isValidEmail",
        "email",
        "regEx",
        "test",
        "validatePassword",
        "length",
        "isEmpty",
        "input",
        "undefined",
        "replace",
        "isNum",
        "isNaN",
        "Number",
        "empty",
        "generateUserToken",
        "id",
        "is_admin",
        "first_name",
        "last_name",
        "token",
        "jwt",
        "sign",
        "user_id",
        "env",
        "secret",
        "expiresIn"
      ],
      "mappings": ";;;;;;;AACA;;AACA;;AACA;;;;AAHA;;AAIA;;;;;AAKA,IAAMA,UAAU,GAAG,EAAnB;;AACA,IAAMC,IAAI,GAAGC,qBAAOC,WAAP,CAAmBH,UAAnB,CAAb;;AACA,IAAMI,YAAY,GAAG,SAAfA,YAAe,CAAAC,QAAQ;AAAA,SAAIH,qBAAOI,QAAP,CAAgBD,QAAhB,EAA0BJ,IAA1B,CAAJ;AAAA,CAA7B;AAEA;;;;;;;;;;AAMA,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAACC,cAAD,EAAiBH,QAAjB,EAA8B;AACpD,SAAQG,cAAc,KAAKH,QAA3B,CADoD,CAEpD;AACD,CAHD;AAKA;;;;;;;;;AAKA,IAAMI,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B,MAAMC,KAAK,GAAG,cAAd;AACA,SAAOA,KAAK,CAACC,IAAN,CAAWF,KAAX,CAAP;AACD,CAHD;AAKA;;;;;;;;;AAKA,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACR,QAAD,EAAc;AACrC,MAAIA,QAAQ,CAACS,MAAT,IAAmB,CAAnB,IAAwBT,QAAQ,KAAK,EAAzC,EAA6C;AAC3C,WAAO,KAAP;AACD;;AAAC,SAAO,IAAP;AACH,CAJD;AAMA;;;;;;;;;AAKA,IAAMU,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AACzB,MAAIA,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,EAArC,EAAyC;AACvC,WAAO,IAAP;AACD;;AACD,MAAIA,KAAK,CAACE,OAAN,CAAc,KAAd,EAAqB,EAArB,EAAyBJ,MAA7B,EAAqC;AACnC,WAAO,KAAP;AACD;;AAAC,SAAO,IAAP;AACH,CAPD;;;;AASA,IAAMK,KAAK,GAAG,SAARA,KAAQ,CAACH,KAAD,EAAW;AACvB,MAAI,CAACI,KAAK,CAACC,MAAM,CAACL,KAAD,CAAP,CAAV,EAA2B;AACzB,WAAO,IAAP;AACD;;AAAC,SAAO,KAAP;AACH,CAJD,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AAKE,IAAMM,KAAK,GAAG,SAARA,KAAQ,CAACN,KAAD,EAAW;AACvB,MAAIA,KAAK,KAAKC,SAAd,EAAyB;AACvB,WAAO,IAAP;AACD;AACF,CAJD;AAMF;;;;;;;;;AAKA,IAAMM,iBAAiB,GAAG,SAApBA,iBAAoB,CAACb,KAAD,EAAQc,EAAR,EAAYC,QAAZ,EAAsBC,UAAtB,EAAkCC,SAAlC,EAAgD;AACxE,MAAMC,KAAK,GAAGC,yBAAIC,IAAJ,CAAS;AACrBpB,IAAAA,KAAK,EAALA,KADqB;AAErBqB,IAAAA,OAAO,EAAEP,EAFY;AAGrBC,IAAAA,QAAQ,EAARA,QAHqB;AAIrBC,IAAAA,UAAU,EAAVA,UAJqB;AAKrBC,IAAAA,SAAS,EAATA;AALqB,GAAT,EAOdK,gBAAIC,MAPU,EAOF;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAPE,CAAd;;AAQA,SAAON,KAAP;AACD,CAVD",
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/helpers/",
      "sourcesContent": [
        "/* eslint-disable camelcase */\nimport bcrypt from 'bcryptjs';\nimport jwt from 'jsonwebtoken';\nimport env from '../../env';\n/**\n   * Hash Password Method\n   * @param {string} password\n   * @returns {string} returns hashed password\n   */\nconst saltRounds = 10;\nconst salt = bcrypt.genSaltSync(saltRounds);\nconst hashPassword = password => bcrypt.hashSync(password, salt);\n\n/**\n   * comparePassword\n   * @param {string} hashPassword\n   * @param {string} password\n   * @returns {Boolean} return True or False\n   */\nconst comparePassword = (hashedPassword, password) => {\n  return (hashedPassword === password);\n  // return bcrypt.compareSync(password, hashedPassword);\n};\n\n/**\n   * isValidEmail helper method\n   * @param {string} email\n   * @returns {Boolean} True or False\n   */\nconst isValidEmail = (email) => {\n  const regEx = /\\S+@\\S+\\.\\S+/;\n  return regEx.test(email);\n};\n\n/**\n   * validatePassword helper method\n   * @param {string} password\n   * @returns {Boolean} True or False\n   */\nconst validatePassword = (password) => {\n  if (password.length <= 5 || password === '') {\n    return false;\n  } return true;\n};\n\n/**\n   * isEmpty helper method\n   * @param {string, integer} input\n   * @returns {Boolean} True or False\n   */\nconst isEmpty = (input) => {\n  if (input === undefined || input === '') {\n    return true;\n  }\n  if (input.replace(/\\s/g, '').length) {\n    return false;\n  } return true;\n};\n\nconst isNum = (input) => {\n  if (!isNaN(Number(input))) {\n    return true;\n  } return false;\n}\n\n// /**\n//    * empty helper method\n//    * @param {string, integer} input\n//    * @returns {Boolean} True or False\n//    */\n// const empty = (input) => {\n//   if (input === undefined || input === '') {\n//     return true;\n//   }\n// };\n\n/**\n   * empty helper method\n   * @param {string, integer} input\n   * @returns {Boolean} True or False\n   */\n  const empty = (input) => {\n    if (input === undefined) {\n      return true;\n    }\n  };\n\n/**\n   * Generate Token\n   * @param {string} id\n   * @returns {string} token\n   */\nconst generateUserToken = (email, id, is_admin, first_name, last_name) => {\n  const token = jwt.sign({\n    email,\n    user_id: id,\n    is_admin,\n    first_name,\n    last_name,\n  },\n  env.secret, { expiresIn: '3d' });\n  return token;\n};\n\n\nexport {\n  hashPassword,\n  comparePassword,\n  isValidEmail,\n  validatePassword,\n  isEmpty,\n  empty,\n  generateUserToken,\n  isNum,\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1588644908754
  },
  "{\"sourceRoot\":\"/Users/ngjingkang/Desktop/website/backend/app/helpers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/ngjingkang/Desktop/website/backend\",\"filename\":\"/Users/ngjingkang/Desktop/website/backend/app/helpers/status.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/ngjingkang/Desktop/website/backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/helpers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/ngjingkang/Desktop/website/backend",
      "filename": "/Users/ngjingkang/Desktop/website/backend/app/helpers/status.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/ngjingkang/Desktop/website/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ngjingkang/Desktop/website/backend/app/helpers/status.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/ngjingkang/Desktop/website/backend/app/helpers/status.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/helpers/",
        "sourceFileName": "status.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.trip_statuses = exports.status = exports.errorMessage = exports.successMessage = void 0;\n//app/helpers/status.js\nvar successMessage = {\n  status: 'success'\n};\nexports.successMessage = successMessage;\nvar errorMessage = {\n  status: 'error'\n};\nexports.errorMessage = errorMessage;\nvar status = {\n  success: 200,\n  error: 500,\n  notfound: 404,\n  unauthorized: 401,\n  conflict: 409,\n  created: 201,\n  bad: 400,\n  nocontent: 204\n};\nexports.status = status;\nvar trip_statuses = {\n  active: 1.00,\n  cancelled: 2.00\n};\nexports.trip_statuses = trip_statuses;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXR1cy5qcyJdLCJuYW1lcyI6WyJzdWNjZXNzTWVzc2FnZSIsInN0YXR1cyIsImVycm9yTWVzc2FnZSIsInN1Y2Nlc3MiLCJlcnJvciIsIm5vdGZvdW5kIiwidW5hdXRob3JpemVkIiwiY29uZmxpY3QiLCJjcmVhdGVkIiwiYmFkIiwibm9jb250ZW50IiwidHJpcF9zdGF0dXNlcyIsImFjdGl2ZSIsImNhbmNlbGxlZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFFQSxJQUFNQSxjQUFjLEdBQUc7QUFBRUMsRUFBQUEsTUFBTSxFQUFFO0FBQVYsQ0FBdkI7O0FBQ0EsSUFBTUMsWUFBWSxHQUFHO0FBQUVELEVBQUFBLE1BQU0sRUFBRTtBQUFWLENBQXJCOztBQUNBLElBQU1BLE1BQU0sR0FBRztBQUNiRSxFQUFBQSxPQUFPLEVBQUUsR0FESTtBQUViQyxFQUFBQSxLQUFLLEVBQUUsR0FGTTtBQUdiQyxFQUFBQSxRQUFRLEVBQUUsR0FIRztBQUliQyxFQUFBQSxZQUFZLEVBQUUsR0FKRDtBQUtiQyxFQUFBQSxRQUFRLEVBQUUsR0FMRztBQU1iQyxFQUFBQSxPQUFPLEVBQUUsR0FOSTtBQU9iQyxFQUFBQSxHQUFHLEVBQUUsR0FQUTtBQVFiQyxFQUFBQSxTQUFTLEVBQUU7QUFSRSxDQUFmOztBQVdBLElBQU1DLGFBQWEsR0FBRztBQUNwQkMsRUFBQUEsTUFBTSxFQUFFLElBRFk7QUFFcEJDLEVBQUFBLFNBQVMsRUFBRTtBQUZTLENBQXRCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9uZ2ppbmdrYW5nL0Rlc2t0b3Avd2Vic2l0ZS9iYWNrZW5kL2FwcC9oZWxwZXJzLyIsInNvdXJjZXNDb250ZW50IjpbIi8vYXBwL2hlbHBlcnMvc3RhdHVzLmpzXG5cbmNvbnN0IHN1Y2Nlc3NNZXNzYWdlID0geyBzdGF0dXM6ICdzdWNjZXNzJyB9O1xuY29uc3QgZXJyb3JNZXNzYWdlID0geyBzdGF0dXM6ICdlcnJvcicgfTtcbmNvbnN0IHN0YXR1cyA9IHtcbiAgc3VjY2VzczogMjAwLFxuICBlcnJvcjogNTAwLFxuICBub3Rmb3VuZDogNDA0LFxuICB1bmF1dGhvcml6ZWQ6IDQwMSxcbiAgY29uZmxpY3Q6IDQwOSxcbiAgY3JlYXRlZDogMjAxLFxuICBiYWQ6IDQwMCxcbiAgbm9jb250ZW50OiAyMDQsXG59O1xuXG5jb25zdCB0cmlwX3N0YXR1c2VzID0ge1xuICBhY3RpdmU6IDEuMDAsXG4gIGNhbmNlbGxlZDogMi4wMCxcbn1cbmV4cG9ydCB7XG4gIHN1Y2Nlc3NNZXNzYWdlLFxuICBlcnJvck1lc3NhZ2UsXG4gIHN0YXR1cyxcbiAgdHJpcF9zdGF0dXNlcyxcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "status.js"
      ],
      "names": [
        "successMessage",
        "status",
        "errorMessage",
        "success",
        "error",
        "notfound",
        "unauthorized",
        "conflict",
        "created",
        "bad",
        "nocontent",
        "trip_statuses",
        "active",
        "cancelled"
      ],
      "mappings": ";;;;;;AAAA;AAEA,IAAMA,cAAc,GAAG;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAvB;;AACA,IAAMC,YAAY,GAAG;AAAED,EAAAA,MAAM,EAAE;AAAV,CAArB;;AACA,IAAMA,MAAM,GAAG;AACbE,EAAAA,OAAO,EAAE,GADI;AAEbC,EAAAA,KAAK,EAAE,GAFM;AAGbC,EAAAA,QAAQ,EAAE,GAHG;AAIbC,EAAAA,YAAY,EAAE,GAJD;AAKbC,EAAAA,QAAQ,EAAE,GALG;AAMbC,EAAAA,OAAO,EAAE,GANI;AAObC,EAAAA,GAAG,EAAE,GAPQ;AAQbC,EAAAA,SAAS,EAAE;AARE,CAAf;;AAWA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB",
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/helpers/",
      "sourcesContent": [
        "//app/helpers/status.js\n\nconst successMessage = { status: 'success' };\nconst errorMessage = { status: 'error' };\nconst status = {\n  success: 200,\n  error: 500,\n  notfound: 404,\n  unauthorized: 401,\n  conflict: 409,\n  created: 201,\n  bad: 400,\n  nocontent: 204,\n};\n\nconst trip_statuses = {\n  active: 1.00,\n  cancelled: 2.00,\n}\nexport {\n  successMessage,\n  errorMessage,\n  status,\n  trip_statuses,\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1586140081670
  },
  "{\"sourceRoot\":\"/Users/ngjingkang/Desktop/website/backend/app/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/ngjingkang/Desktop/website/backend\",\"filename\":\"/Users/ngjingkang/Desktop/website/backend/app/routes/managersRoute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/ngjingkang/Desktop/website/backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/ngjingkang/Desktop/website/backend",
      "filename": "/Users/ngjingkang/Desktop/website/backend/app/routes/managersRoute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/ngjingkang/Desktop/website/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ngjingkang/Desktop/website/backend/app/routes/managersRoute.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/ngjingkang/Desktop/website/backend/app/routes/managersRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/routes/",
        "sourceFileName": "managersRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _managersController = require(\"../controllers/managersController\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = _express[\"default\"].Router(); // manager Routes\n\n\nrouter.post('/auth/signup', _managersController.createManager);\nrouter.post('/auth/signin', _managersController.signinManager);\nrouter.get('/search', _managersController.searchManagerFirstnameOrLastname);\nrouter.post('/edit', _managersController.editManager);\nrouter.post('/delete', _managersController.deleteManager);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hbmFnZXJzUm91dGUuanMiXSwibmFtZXMiOlsicm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsInBvc3QiLCJjcmVhdGVNYW5hZ2VyIiwic2lnbmluTWFuYWdlciIsImdldCIsInNlYXJjaE1hbmFnZXJGaXJzdG5hbWVPckxhc3RuYW1lIiwiZWRpdE1hbmFnZXIiLCJkZWxldGVNYW5hZ2VyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUE7Ozs7QUFFQSxJQUFNQSxNQUFNLEdBQUdDLG9CQUFRQyxNQUFSLEVBQWYsQyxDQUVBOzs7QUFFQUYsTUFBTSxDQUFDRyxJQUFQLENBQVksY0FBWixFQUE0QkMsaUNBQTVCO0FBQ0FKLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLGNBQVosRUFBNEJFLGlDQUE1QjtBQUNBTCxNQUFNLENBQUNNLEdBQVAsQ0FBVyxTQUFYLEVBQXNCQyxvREFBdEI7QUFDQVAsTUFBTSxDQUFDRyxJQUFQLENBQVksT0FBWixFQUFxQkssK0JBQXJCO0FBQ0FSLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLFNBQVosRUFBdUJNLGlDQUF2QjtlQUVlVCxNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9uZ2ppbmdrYW5nL0Rlc2t0b3Avd2Vic2l0ZS9iYWNrZW5kL2FwcC9yb3V0ZXMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5cbmltcG9ydCB7IGNyZWF0ZU1hbmFnZXIsIHNpZ25pbk1hbmFnZXIsIHNlYXJjaE1hbmFnZXJGaXJzdG5hbWVPckxhc3RuYW1lLCBlZGl0TWFuYWdlciwgZGVsZXRlTWFuYWdlciB9IGZyb20gJy4uL2NvbnRyb2xsZXJzL21hbmFnZXJzQ29udHJvbGxlcic7XG5cbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbi8vIG1hbmFnZXIgUm91dGVzXG5cbnJvdXRlci5wb3N0KCcvYXV0aC9zaWdudXAnLCBjcmVhdGVNYW5hZ2VyKTtcbnJvdXRlci5wb3N0KCcvYXV0aC9zaWduaW4nLCBzaWduaW5NYW5hZ2VyKTtcbnJvdXRlci5nZXQoJy9zZWFyY2gnLCBzZWFyY2hNYW5hZ2VyRmlyc3RuYW1lT3JMYXN0bmFtZSk7XG5yb3V0ZXIucG9zdCgnL2VkaXQnLCBlZGl0TWFuYWdlcik7XG5yb3V0ZXIucG9zdCgnL2RlbGV0ZScsIGRlbGV0ZU1hbmFnZXIpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "managersRoute.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "post",
        "createManager",
        "signinManager",
        "get",
        "searchManagerFirstnameOrLastname",
        "editManager",
        "deleteManager"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;;;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf,C,CAEA;;;AAEAF,MAAM,CAACG,IAAP,CAAY,cAAZ,EAA4BC,iCAA5B;AACAJ,MAAM,CAACG,IAAP,CAAY,cAAZ,EAA4BE,iCAA5B;AACAL,MAAM,CAACM,GAAP,CAAW,SAAX,EAAsBC,oDAAtB;AACAP,MAAM,CAACG,IAAP,CAAY,OAAZ,EAAqBK,+BAArB;AACAR,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBM,iCAAvB;eAEeT,M",
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/routes/",
      "sourcesContent": [
        "import express from 'express';\n\nimport { createManager, signinManager, searchManagerFirstnameOrLastname, editManager, deleteManager } from '../controllers/managersController';\n\nconst router = express.Router();\n\n// manager Routes\n\nrouter.post('/auth/signup', createManager);\nrouter.post('/auth/signin', signinManager);\nrouter.get('/search', searchManagerFirstnameOrLastname);\nrouter.post('/edit', editManager);\nrouter.post('/delete', deleteManager);\n\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1588644908755
  },
  "{\"sourceRoot\":\"/Users/ngjingkang/Desktop/website/backend/app/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/ngjingkang/Desktop/website/backend\",\"filename\":\"/Users/ngjingkang/Desktop/website/backend/app/controllers/managersController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/ngjingkang/Desktop/website/backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/ngjingkang/Desktop/website/backend",
      "filename": "/Users/ngjingkang/Desktop/website/backend/app/controllers/managersController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/ngjingkang/Desktop/website/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ngjingkang/Desktop/website/backend/app/controllers/managersController.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/ngjingkang/Desktop/website/backend/app/controllers/managersController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/controllers/",
        "sourceFileName": "managersController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteManager = exports.editManager = exports.searchManagerFirstnameOrLastname = exports.signinManager = exports.createManager = void 0;\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _dbQuery = _interopRequireDefault(require(\"../db/dev/dbQuery\"));\n\nvar _validations = require(\"../helpers/validations\");\n\nvar _status = require(\"../helpers/status\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n   * Create A Manager\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} reflection object (of Manager)\n   */\nvar createManager = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, email, first_name, last_name, password, createManagerQuery, values, _yield$dbQuery$query, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _req$body = req.body, email = _req$body.email, first_name = _req$body.first_name, last_name = _req$body.last_name, password = _req$body.password;\n            console.log('body: ', req.body);\n            console.log('email: ', email);\n            console.log('first_name: ', first_name);\n            console.log('last_name: ', last_name);\n            console.log('password: ', password); // const created_on = moment(new Date());\n\n            if (!((0, _validations.isEmpty)(email) || (0, _validations.isEmpty)(first_name) || (0, _validations.isEmpty)(last_name) || (0, _validations.isEmpty)(password))) {\n              _context.next = 9;\n              break;\n            }\n\n            _status.errorMessage.error = 'Email, password, first name and last name fields cannot be empty';\n            return _context.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 9:\n            if ((0, _validations.isValidEmail)(email)) {\n              _context.next = 12;\n              break;\n            }\n\n            _status.errorMessage.error = 'Please enter a valid Email';\n            return _context.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 12:\n            if ((0, _validations.validatePassword)(password)) {\n              _context.next = 15;\n              break;\n            }\n\n            _status.errorMessage.error = 'Password must be more than five(5) characters';\n            return _context.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 15:\n            // const hashedPassword = hashPassword(password);\n            createManagerQuery = \"INSERT INTO\\n        Manager(email, first_name, last_name, password)\\n        VALUES($1, $2, $3, $4)\\n        returning *\";\n            values = [email, first_name, last_name, password // created_on,\n            ];\n            _context.prev = 17;\n            _context.next = 20;\n            return _dbQuery[\"default\"].query(createManagerQuery, values);\n\n          case 20:\n            _yield$dbQuery$query = _context.sent;\n            rows = _yield$dbQuery$query.rows;\n            dbResponse = rows[0]; // delete dbResponse.password;\n            //   const token = generateUserToken(dbResponse.email, dbResponse.id, dbResponse.is_admin, dbResponse.first_name, dbResponse.last_name);\n\n            _status.successMessage.data = dbResponse; //   successMessage.data.token = token;\n\n            return _context.abrupt(\"return\", res.status(_status.status.created).send(_status.successMessage.data));\n\n          case 27:\n            _context.prev = 27;\n            _context.t0 = _context[\"catch\"](17);\n\n            if (!(_context.t0.routine === '_bt_check_unique')) {\n              _context.next = 32;\n              break;\n            }\n\n            _status.errorMessage.error = 'Manager with that EMAIL already exist';\n            return _context.abrupt(\"return\", res.status(_status.status.conflict).send(_status.errorMessage.error));\n\n          case 32:\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 34:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[17, 27]]);\n  }));\n\n  return function createManager(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n   * Signin\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} Manager object\n   */\n\n\nexports.createManager = createManager;\n\nvar signinManager = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body2, email, password, signinManagerQuery, _yield$dbQuery$query2, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _req$body2 = req.body, email = _req$body2.email, password = _req$body2.password;\n\n            if (!((0, _validations.isEmpty)(email) || (0, _validations.isEmpty)(password))) {\n              _context2.next = 4;\n              break;\n            }\n\n            _status.errorMessage.error = 'Email or Password detail is missing';\n            return _context2.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 4:\n            if ((0, _validations.isValidEmail)(email)) {\n              _context2.next = 7;\n              break;\n            }\n\n            _status.errorMessage.error = 'Please enter a valid Email or Password';\n            return _context2.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 7:\n            signinManagerQuery = 'SELECT * FROM Manager WHERE email = $1';\n            _context2.prev = 8;\n            _context2.next = 11;\n            return _dbQuery[\"default\"].query(signinManagerQuery, [email]);\n\n          case 11:\n            _yield$dbQuery$query2 = _context2.sent;\n            rows = _yield$dbQuery$query2.rows;\n            dbResponse = rows[0];\n\n            if (dbResponse) {\n              _context2.next = 18;\n              break;\n            }\n\n            _status.errorMessage.error = 'Manager with this email does not exist';\n            console.log(_status.errorMessage);\n            return _context2.abrupt(\"return\", res.status(_status.status.notfound).send(_status.errorMessage.error));\n\n          case 18:\n            if ((0, _validations.comparePassword)(dbResponse.password, password)) {\n              _context2.next = 21;\n              break;\n            }\n\n            _status.errorMessage.error = 'The password you provided is incorrect';\n            return _context2.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 21:\n            // const token = generateUserToken(dbResponse.email, dbResponse.id, dbResponse.is_admin, dbResponse.first_name, dbResponse.last_name);\n            // delete dbResponse.password;\n            _status.successMessage.data = dbResponse; //   successMessage.data.token = token;\n\n            return _context2.abrupt(\"return\", res.status(_status.status.success).send(_status.successMessage.data));\n\n          case 25:\n            _context2.prev = 25;\n            _context2.t0 = _context2[\"catch\"](8);\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context2.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 29:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[8, 25]]);\n  }));\n\n  return function signinManager(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n/**\n* @params {Object} req\n* @params {Object} res\n* @returns return firstname and Lastname\n*/\n\n\nexports.signinManager = signinManager;\n\nvar searchManagerFirstnameOrLastname = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$query, first_name, last_name, searchQuery, _yield$dbQuery$query3, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _req$query = req.query, first_name = _req$query.first_name, last_name = _req$query.last_name;\n            searchQuery = 'SELECT * from Manager WHERE first_name =$1 OR last_name =$2 ORDER BY id DESC';\n            _context3.prev = 2;\n            _context3.next = 5;\n            return _dbQuery[\"default\"].query(searchQuery, [first_name, last_name]);\n\n          case 5:\n            _yield$dbQuery$query3 = _context3.sent;\n            rows = _yield$dbQuery$query3.rows;\n            dbResponse = rows;\n\n            if (dbResponse[0]) {\n              _context3.next = 11;\n              break;\n            }\n\n            _status.errorMessage.error = 'No user with such names';\n            return _context3.abrupt(\"return\", res.status(_status.status.notfound).send(_status.errorMessage.error));\n\n          case 11:\n            _status.successMessage.data = dbResponse;\n            return _context3.abrupt(\"return\", res.status(_status.status.success).send(_status.successMessage.data));\n\n          case 15:\n            _context3.prev = 15;\n            _context3.t0 = _context3[\"catch\"](2);\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context3.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 19:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[2, 15]]);\n  }));\n\n  return function searchManagerFirstnameOrLastname(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n/**\n* Edit A manager\n* @param {object} req\n* @param {object} res\n* @returns {object} reflection object (of Customer)\n*/\n\n\nexports.searchManagerFirstnameOrLastname = searchManagerFirstnameOrLastname;\n\nvar editManager = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var _req$body3, email, first_name, last_name, password, id, editManagerQuery, values, _yield$dbQuery$query4, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _req$body3 = req.body, email = _req$body3.email, first_name = _req$body3.first_name, last_name = _req$body3.last_name, password = _req$body3.password, id = _req$body3.id;\n            console.log('body: ', req.body);\n            console.log('email: ', email);\n            console.log('first_name: ', first_name);\n            console.log('last_name: ', last_name);\n            console.log('password: ', password);\n            console.log('id: ', id);\n\n            if (!((0, _validations.isEmpty)(email) || (0, _validations.isEmpty)(first_name) || (0, _validations.isEmpty)(last_name) || (0, _validations.isEmpty)(password))) {\n              _context4.next = 10;\n              break;\n            }\n\n            _status.errorMessage.error = 'Email, password, first name and last name fields cannot be empty';\n            return _context4.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 10:\n            if ((0, _validations.isValidEmail)(email)) {\n              _context4.next = 13;\n              break;\n            }\n\n            _status.errorMessage.error = 'Please enter a valid Email';\n            return _context4.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 13:\n            if ((0, _validations.validatePassword)(password)) {\n              _context4.next = 16;\n              break;\n            }\n\n            _status.errorMessage.error = 'Password must be more than five(5) characters';\n            return _context4.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 16:\n            editManagerQuery = \"UPDATE Manager set\\n        email = $1,\\n        first_name = $2,\\n        last_name = $3,\\n        password = $4\\n        where id = $5\\n        returning *\";\n            values = [email, first_name, last_name, password, id];\n            _context4.prev = 18;\n            _context4.next = 21;\n            return _dbQuery[\"default\"].query(editManagerQuery, values);\n\n          case 21:\n            _yield$dbQuery$query4 = _context4.sent;\n            rows = _yield$dbQuery$query4.rows;\n            dbResponse = rows[0];\n            _status.successMessage.data = dbResponse;\n            return _context4.abrupt(\"return\", res.status(_status.status.created).send(_status.successMessage.data));\n\n          case 28:\n            _context4.prev = 28;\n            _context4.t0 = _context4[\"catch\"](18);\n\n            if (!(_context4.t0.routine === '_bt_check_unique')) {\n              _context4.next = 33;\n              break;\n            }\n\n            _status.errorMessage.error = 'Manager with that EMAIL already exist';\n            return _context4.abrupt(\"return\", res.status(_status.status.conflict).send(_status.errorMessage.error));\n\n          case 33:\n            console.log('errorrr: ', _context4.t0);\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context4.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 36:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[18, 28]]);\n  }));\n\n  return function editManager(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n/**\n * delete a manager\n */\n\n\nexports.editManager = editManager;\n\nvar deleteManager = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var id, deleteRiderQuery, _yield$dbQuery$query5, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            id = req.body.id;\n            deleteRiderQuery = 'delete from manager where id = $1 returning *';\n            _context5.prev = 2;\n            _context5.next = 5;\n            return _dbQuery[\"default\"].query(deleteRiderQuery, [id]);\n\n          case 5:\n            _yield$dbQuery$query5 = _context5.sent;\n            rows = _yield$dbQuery$query5.rows;\n            dbResponse = rows[0];\n            _status.successMessage.data = dbResponse;\n            return _context5.abrupt(\"return\", res.status(_status.status.success).send(_status.successMessage.data));\n\n          case 12:\n            _context5.prev = 12;\n            _context5.t0 = _context5[\"catch\"](2);\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context5.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 16:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[2, 12]]);\n  }));\n\n  return function deleteManager(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nexports.deleteManager = deleteManager;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "managersController.js"
      ],
      "names": [
        "createManager",
        "req",
        "res",
        "body",
        "email",
        "first_name",
        "last_name",
        "password",
        "console",
        "log",
        "errorMessage",
        "error",
        "status",
        "bad",
        "send",
        "createManagerQuery",
        "values",
        "dbQuery",
        "query",
        "rows",
        "dbResponse",
        "successMessage",
        "data",
        "created",
        "routine",
        "conflict",
        "signinManager",
        "signinManagerQuery",
        "notfound",
        "success",
        "searchManagerFirstnameOrLastname",
        "searchQuery",
        "editManager",
        "id",
        "editManagerQuery",
        "deleteManager",
        "deleteRiderQuery"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/controllers/",
      "sourcesContent": [
        "import moment from 'moment';\n\nimport dbQuery from '../db/dev/dbQuery';\n\nimport {\n    hashPassword,\n    comparePassword,\n    isValidEmail,\n    validatePassword,\n    isEmpty,\n} from '../helpers/validations';\n  \nimport {\n    errorMessage, successMessage, status,\n} from '../helpers/status';\n\n/**\n   * Create A Manager\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} reflection object (of Manager)\n   */\n  const createManager = async (req, res) => {\n    const {\n      email, first_name, last_name, password,\n    } = req.body;\n\n    console.log('body: ', req.body)\n    console.log('email: ', email)\n    console.log('first_name: ', first_name)\n    console.log('last_name: ', last_name)\n    console.log('password: ', password)\n\n\n    // const created_on = moment(new Date());\n    if (isEmpty(email) || isEmpty(first_name) || isEmpty(last_name) || isEmpty(password)) {\n      errorMessage.error = 'Email, password, first name and last name fields cannot be empty';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    if (!isValidEmail(email)) {\n      errorMessage.error = 'Please enter a valid Email';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    if (!validatePassword(password)) {\n      errorMessage.error = 'Password must be more than five(5) characters';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    // const hashedPassword = hashPassword(password);\n    const createManagerQuery = `INSERT INTO\n        Manager(email, first_name, last_name, password)\n        VALUES($1, $2, $3, $4)\n        returning *`;\n    const values = [\n      email,\n      first_name,\n      last_name,\n      password,\n      // created_on,\n    ];\n  \n    try {\n      const { rows } = await dbQuery.query(createManagerQuery, values);\n      const dbResponse = rows[0];\n      // delete dbResponse.password;\n    //   const token = generateUserToken(dbResponse.email, dbResponse.id, dbResponse.is_admin, dbResponse.first_name, dbResponse.last_name);\n      successMessage.data = dbResponse;\n    //   successMessage.data.token = token;\n      return res.status(status.created).send(successMessage.data);\n    } catch (error) {\n      if (error.routine === '_bt_check_unique') {\n        errorMessage.error = 'Manager with that EMAIL already exist';\n        return res.status(status.conflict).send(errorMessage.error);\n      }\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n    }\n  };\n  \n  /**\n     * Signin\n     * @param {object} req\n     * @param {object} res\n     * @returns {object} Manager object\n     */\n  const signinManager = async (req, res) => {\n    const { email, password } = req.body;\n    if (isEmpty(email) || isEmpty(password)) {\n      errorMessage.error = 'Email or Password detail is missing';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    if (!isValidEmail(email)) {\n      errorMessage.error = 'Please enter a valid Email or Password';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    const signinManagerQuery = 'SELECT * FROM Manager WHERE email = $1';\n    try {\n      const { rows } = await dbQuery.query(signinManagerQuery, [email]);\n      const dbResponse = rows[0];\n      if (!dbResponse) {\n        errorMessage.error = 'Manager with this email does not exist';\n        console.log(errorMessage);\n        return res.status(status.notfound).send(errorMessage.error);\n      }\n      if (!comparePassword(dbResponse.password, password)) {\n        errorMessage.error = 'The password you provided is incorrect';\n        return res.status(status.bad).send(errorMessage.error);\n      }\n      // const token = generateUserToken(dbResponse.email, dbResponse.id, dbResponse.is_admin, dbResponse.first_name, dbResponse.last_name);\n      // delete dbResponse.password;\n      successMessage.data = dbResponse;\n    //   successMessage.data.token = token;\n      return res.status(status.success).send(successMessage.data);\n    } catch (error) {\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n    }\n  };\n\n  /**\n * @params {Object} req\n * @params {Object} res\n * @returns return firstname and Lastname\n */ \n\n const searchManagerFirstnameOrLastname = async (req, res) => {\n    const { first_name, last_name } = req.query;\n    const searchQuery = 'SELECT * from Manager WHERE first_name =$1 OR last_name =$2 ORDER BY id DESC';\n    try {\n      const { rows } = await dbQuery.query(searchQuery, [first_name, last_name]);\n      const dbResponse = rows;\n      if (!dbResponse[0]) {\n        errorMessage.error = 'No user with such names';\n        return res.status(status.notfound).send(errorMessage.error);\n      }\n      successMessage.data = dbResponse;\n      return res.status(status.success).send(successMessage.data);\n    }\n    catch (error) {\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n\n    }\n  };\n\n    /**\n   * Edit A manager\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} reflection object (of Customer)\n   */\n  const editManager = async (req, res) => {\n    const {\n      email, first_name, last_name, password, id\n    } = req.body;\n\n    console.log('body: ', req.body)\n    console.log('email: ', email)\n    console.log('first_name: ', first_name)\n    console.log('last_name: ', last_name)\n    console.log('password: ', password)\n    console.log('id: ', id)\n\n    if (isEmpty(email) || isEmpty(first_name) || isEmpty(last_name) || isEmpty(password)) {\n      errorMessage.error = 'Email, password, first name and last name fields cannot be empty';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    if (!isValidEmail(email)) {\n      errorMessage.error = 'Please enter a valid Email';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    if (!validatePassword(password)) {\n      errorMessage.error = 'Password must be more than five(5) characters';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    const editManagerQuery = `UPDATE Manager set\n        email = $1,\n        first_name = $2,\n        last_name = $3,\n        password = $4\n        where id = $5\n        returning *`;\n    const values = [\n      email,\n      first_name,\n      last_name,\n      password,\n      id\n    ];\n  \n    try {\n      const { rows } = await dbQuery.query(editManagerQuery, values);\n      const dbResponse = rows[0];\n      successMessage.data = dbResponse;\n      return res.status(status.created).send(successMessage.data);\n    } catch (error) {\n      if (error.routine === '_bt_check_unique') {\n        errorMessage.error = 'Manager with that EMAIL already exist';\n        return res.status(status.conflict).send(errorMessage.error);\n      }\n      console.log('errorrr: ', error);\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n    }\n  };\n\n  /**\n   * delete a manager\n   */\n  const deleteManager = async (req, res) => {\n    const { id } = req.body;\n    const deleteRiderQuery = 'delete from manager where id = $1 returning *';\n    try {\n      const { rows } = await dbQuery.query(deleteRiderQuery, [id]);\n      const dbResponse = rows[0];\n      successMessage.data = dbResponse;\n      return res.status(status.success).send(successMessage.data);\n    } catch (error) {\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n    }\n  };\n  \n  export {\n    createManager,\n    signinManager,\n    searchManagerFirstnameOrLastname,\n    editManager,\n    deleteManager\n  };\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588644908752
  },
  "{\"sourceRoot\":\"/Users/ngjingkang/Desktop/website/backend/app/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/ngjingkang/Desktop/website/backend\",\"filename\":\"/Users/ngjingkang/Desktop/website/backend/app/routes/ridersRoute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/ngjingkang/Desktop/website/backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/ngjingkang/Desktop/website/backend",
      "filename": "/Users/ngjingkang/Desktop/website/backend/app/routes/ridersRoute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/ngjingkang/Desktop/website/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ngjingkang/Desktop/website/backend/app/routes/ridersRoute.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/ngjingkang/Desktop/website/backend/app/routes/ridersRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/routes/",
        "sourceFileName": "ridersRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _ridersController = require(\"../controllers/ridersController\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = _express[\"default\"].Router(); // rider Routes\n\n\nrouter.post('/auth/signup', _ridersController.createRider);\nrouter.post('/auth/signin', _ridersController.signinRider);\nrouter.get('/search', _ridersController.searchRiderFirstnameOrLastname);\nrouter.post('/edit', _ridersController.editRider);\nrouter.post('/delete', _ridersController.deleteRider);\nrouter.post('/orders', _ridersController.ordersByRider);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJpZGVyc1JvdXRlLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwb3N0IiwiY3JlYXRlUmlkZXIiLCJzaWduaW5SaWRlciIsImdldCIsInNlYXJjaFJpZGVyRmlyc3RuYW1lT3JMYXN0bmFtZSIsImVkaXRSaWRlciIsImRlbGV0ZVJpZGVyIiwib3JkZXJzQnlSaWRlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOzs7O0FBRUEsSUFBTUEsTUFBTSxHQUFHQyxvQkFBUUMsTUFBUixFQUFmLEMsQ0FFQTs7O0FBRUFGLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLGNBQVosRUFBNEJDLDZCQUE1QjtBQUNBSixNQUFNLENBQUNHLElBQVAsQ0FBWSxjQUFaLEVBQTRCRSw2QkFBNUI7QUFDQUwsTUFBTSxDQUFDTSxHQUFQLENBQVcsU0FBWCxFQUFzQkMsZ0RBQXRCO0FBQ0FQLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLE9BQVosRUFBcUJLLDJCQUFyQjtBQUNBUixNQUFNLENBQUNHLElBQVAsQ0FBWSxTQUFaLEVBQXVCTSw2QkFBdkI7QUFDQVQsTUFBTSxDQUFDRyxJQUFQLENBQVksU0FBWixFQUF1Qk8sK0JBQXZCO2VBRWVWLE0iLCJzb3VyY2VSb290IjoiL1VzZXJzL25namluZ2thbmcvRGVza3RvcC93ZWJzaXRlL2JhY2tlbmQvYXBwL3JvdXRlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcblxuaW1wb3J0IHsgY3JlYXRlUmlkZXIsIHNpZ25pblJpZGVyLCBzZWFyY2hSaWRlckZpcnN0bmFtZU9yTGFzdG5hbWUsIGVkaXRSaWRlciwgZGVsZXRlUmlkZXIsIG9yZGVyc0J5UmlkZXIgfSBmcm9tICcuLi9jb250cm9sbGVycy9yaWRlcnNDb250cm9sbGVyJztcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuLy8gcmlkZXIgUm91dGVzXG5cbnJvdXRlci5wb3N0KCcvYXV0aC9zaWdudXAnLCBjcmVhdGVSaWRlcik7XG5yb3V0ZXIucG9zdCgnL2F1dGgvc2lnbmluJywgc2lnbmluUmlkZXIpO1xucm91dGVyLmdldCgnL3NlYXJjaCcsIHNlYXJjaFJpZGVyRmlyc3RuYW1lT3JMYXN0bmFtZSk7XG5yb3V0ZXIucG9zdCgnL2VkaXQnLCBlZGl0UmlkZXIpO1xucm91dGVyLnBvc3QoJy9kZWxldGUnLCBkZWxldGVSaWRlcik7XG5yb3V0ZXIucG9zdCgnL29yZGVycycsIG9yZGVyc0J5UmlkZXIpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "ridersRoute.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "post",
        "createRider",
        "signinRider",
        "get",
        "searchRiderFirstnameOrLastname",
        "editRider",
        "deleteRider",
        "ordersByRider"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;;;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf,C,CAEA;;;AAEAF,MAAM,CAACG,IAAP,CAAY,cAAZ,EAA4BC,6BAA5B;AACAJ,MAAM,CAACG,IAAP,CAAY,cAAZ,EAA4BE,6BAA5B;AACAL,MAAM,CAACM,GAAP,CAAW,SAAX,EAAsBC,gDAAtB;AACAP,MAAM,CAACG,IAAP,CAAY,OAAZ,EAAqBK,2BAArB;AACAR,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBM,6BAAvB;AACAT,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBO,+BAAvB;eAEeV,M",
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/routes/",
      "sourcesContent": [
        "import express from 'express';\n\nimport { createRider, signinRider, searchRiderFirstnameOrLastname, editRider, deleteRider, ordersByRider } from '../controllers/ridersController';\n\nconst router = express.Router();\n\n// rider Routes\n\nrouter.post('/auth/signup', createRider);\nrouter.post('/auth/signin', signinRider);\nrouter.get('/search', searchRiderFirstnameOrLastname);\nrouter.post('/edit', editRider);\nrouter.post('/delete', deleteRider);\nrouter.post('/orders', ordersByRider);\n\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1588644908757
  },
  "{\"sourceRoot\":\"/Users/ngjingkang/Desktop/website/backend/app/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/ngjingkang/Desktop/website/backend\",\"filename\":\"/Users/ngjingkang/Desktop/website/backend/app/controllers/ridersController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/ngjingkang/Desktop/website/backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/ngjingkang/Desktop/website/backend",
      "filename": "/Users/ngjingkang/Desktop/website/backend/app/controllers/ridersController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/ngjingkang/Desktop/website/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ngjingkang/Desktop/website/backend/app/controllers/ridersController.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/ngjingkang/Desktop/website/backend/app/controllers/ridersController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/controllers/",
        "sourceFileName": "ridersController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ordersByRider = exports.deleteRider = exports.editRider = exports.searchRiderFirstnameOrLastname = exports.signinRider = exports.createRider = void 0;\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _dbQuery = _interopRequireDefault(require(\"../db/dev/dbQuery\"));\n\nvar _validations = require(\"../helpers/validations\");\n\nvar _status = require(\"../helpers/status\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n   * Create A Rider\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} reflection object (of Rider)\n   */\nvar createRider = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, email, first_name, last_name, password, type, createRiderQuery, values, addTypeQuery, _yield$dbQuery$query, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _req$body = req.body, email = _req$body.email, first_name = _req$body.first_name, last_name = _req$body.last_name, password = _req$body.password, type = _req$body.type;\n            console.log('body: ', req.body);\n            console.log('email: ', email);\n            console.log('first_name: ', first_name);\n            console.log('last_name: ', last_name);\n            console.log('password: ', password);\n            console.log('type: ', type); // const created_on = moment(new Date());\n\n            if (!((0, _validations.isEmpty)(email) || (0, _validations.isEmpty)(first_name) || (0, _validations.isEmpty)(last_name) || (0, _validations.isEmpty)(password))) {\n              _context.next = 10;\n              break;\n            }\n\n            _status.errorMessage.error = 'Email, password, first name and last name fields cannot be empty';\n            return _context.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 10:\n            if ((0, _validations.isValidEmail)(email)) {\n              _context.next = 13;\n              break;\n            }\n\n            _status.errorMessage.error = 'Please enter a valid Email';\n            return _context.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 13:\n            if ((0, _validations.validatePassword)(password)) {\n              _context.next = 16;\n              break;\n            }\n\n            _status.errorMessage.error = 'Password must be more than five(5) characters';\n            return _context.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 16:\n            // const hashedPassword = hashPassword(password);\n            createRiderQuery = \"INSERT INTO\\n        Rider(email, first_name, last_name, password)\\n        VALUES($1, $2, $3, $4)\\n        returning *\";\n            values = [email, first_name, last_name, password];\n            addTypeQuery = type === 1 ? 'insert into fulltime(id) values($1)' : 'insert into parttime(id) values($1)';\n            _context.prev = 19;\n            _context.next = 22;\n            return _dbQuery[\"default\"].query('begin');\n\n          case 22:\n            _context.next = 24;\n            return _dbQuery[\"default\"].query(createRiderQuery, values);\n\n          case 24:\n            _yield$dbQuery$query = _context.sent;\n            rows = _yield$dbQuery$query.rows;\n            dbResponse = rows[0];\n            _context.next = 29;\n            return _dbQuery[\"default\"].query(addTypeQuery, [dbResponse.id]);\n\n          case 29:\n            _context.next = 31;\n            return _dbQuery[\"default\"].query('commit');\n\n          case 31:\n            // delete dbResponse.password;\n            _status.successMessage.data = dbResponse;\n            return _context.abrupt(\"return\", res.status(_status.status.created).send(_status.successMessage.data));\n\n          case 35:\n            _context.prev = 35;\n            _context.t0 = _context[\"catch\"](19);\n            _context.next = 39;\n            return _dbQuery[\"default\"].query('rollback');\n\n          case 39:\n            if (!(_context.t0.routine === '_bt_check_unique')) {\n              _context.next = 42;\n              break;\n            }\n\n            _status.errorMessage.error = 'Rider with that EMAIL already exist';\n            return _context.abrupt(\"return\", res.status(_status.status.conflict).send(_status.errorMessage.error));\n\n          case 42:\n            _status.errorMessage.error = 'Operation was not successful';\n            console.log('error: ', _context.t0);\n            return _context.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 45:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[19, 35]]);\n  }));\n\n  return function createRider(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n   * Signin\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} rider object\n   */\n\n\nexports.createRider = createRider;\n\nvar signinRider = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body2, email, password, signinRiderQuery, _yield$dbQuery$query2, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _req$body2 = req.body, email = _req$body2.email, password = _req$body2.password;\n\n            if (!((0, _validations.isEmpty)(email) || (0, _validations.isEmpty)(password))) {\n              _context2.next = 4;\n              break;\n            }\n\n            _status.errorMessage.error = 'Email or Password detail is missing';\n            return _context2.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 4:\n            if ((0, _validations.isValidEmail)(email)) {\n              _context2.next = 7;\n              break;\n            }\n\n            _status.errorMessage.error = 'Please enter a valid Email or Password';\n            return _context2.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 7:\n            signinRiderQuery = 'SELECT * FROM Rider WHERE email = $1';\n            _context2.prev = 8;\n            _context2.next = 11;\n            return _dbQuery[\"default\"].query(signinRiderQuery, [email]);\n\n          case 11:\n            _yield$dbQuery$query2 = _context2.sent;\n            rows = _yield$dbQuery$query2.rows;\n            dbResponse = rows[0];\n\n            if (dbResponse) {\n              _context2.next = 18;\n              break;\n            }\n\n            _status.errorMessage.error = 'Rider with this email does not exist';\n            console.log(_status.errorMessage);\n            return _context2.abrupt(\"return\", res.status(_status.status.notfound).send(_status.errorMessage.error));\n\n          case 18:\n            if ((0, _validations.comparePassword)(dbResponse.password, password)) {\n              _context2.next = 21;\n              break;\n            }\n\n            _status.errorMessage.error = 'The password you provided is incorrect';\n            return _context2.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 21:\n            // const token = generateUserToken(dbResponse.email, dbResponse.id, dbResponse.is_admin, dbResponse.first_name, dbResponse.last_name);\n            // delete dbResponse.password;\n            _status.successMessage.data = dbResponse; //   successMessage.data.token = token;\n\n            return _context2.abrupt(\"return\", res.status(_status.status.success).send(_status.successMessage.data));\n\n          case 25:\n            _context2.prev = 25;\n            _context2.t0 = _context2[\"catch\"](8);\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context2.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 29:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[8, 25]]);\n  }));\n\n  return function signinRider(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n/**\n* @params {Object} req\n* @params {Object} res\n* @returns return firstname and Lastname\n*/\n\n\nexports.signinRider = signinRider;\n\nvar searchRiderFirstnameOrLastname = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$query, first_name, last_name, searchQuery, _yield$dbQuery$query3, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _req$query = req.query, first_name = _req$query.first_name, last_name = _req$query.last_name;\n            searchQuery = 'SELECT * from Rider WHERE first_name =$1 OR last_name =$2 ORDER BY id DESC';\n            _context3.prev = 2;\n            _context3.next = 5;\n            return _dbQuery[\"default\"].query(searchQuery, [first_name, last_name]);\n\n          case 5:\n            _yield$dbQuery$query3 = _context3.sent;\n            rows = _yield$dbQuery$query3.rows;\n            dbResponse = rows;\n\n            if (dbResponse[0]) {\n              _context3.next = 11;\n              break;\n            }\n\n            _status.errorMessage.error = 'No user with such names';\n            return _context3.abrupt(\"return\", res.status(_status.status.notfound).send(_status.errorMessage.error));\n\n          case 11:\n            _status.successMessage.data = dbResponse;\n            return _context3.abrupt(\"return\", res.status(_status.status.success).send(_status.successMessage.data));\n\n          case 15:\n            _context3.prev = 15;\n            _context3.t0 = _context3[\"catch\"](2);\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context3.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 19:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[2, 15]]);\n  }));\n\n  return function searchRiderFirstnameOrLastname(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n/**\n * Edit A Rider\n * @param {object} req\n * @param {object} res\n * @returns {object} reflection object (of Customer)\n */\n\n\nexports.searchRiderFirstnameOrLastname = searchRiderFirstnameOrLastname;\n\nvar editRider = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var _req$body3, email, first_name, last_name, password, id, editRiderQuery, values, _yield$dbQuery$query4, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _req$body3 = req.body, email = _req$body3.email, first_name = _req$body3.first_name, last_name = _req$body3.last_name, password = _req$body3.password, id = _req$body3.id;\n            console.log('body: ', req.body);\n            console.log('email: ', email);\n            console.log('first_name: ', first_name);\n            console.log('last_name: ', last_name);\n            console.log('password: ', password);\n            console.log('id: ', id);\n\n            if (!((0, _validations.isEmpty)(email) || (0, _validations.isEmpty)(first_name) || (0, _validations.isEmpty)(last_name) || (0, _validations.isEmpty)(password))) {\n              _context4.next = 10;\n              break;\n            }\n\n            _status.errorMessage.error = 'Email, password, first name and last name fields cannot be empty';\n            return _context4.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 10:\n            if ((0, _validations.isValidEmail)(email)) {\n              _context4.next = 13;\n              break;\n            }\n\n            _status.errorMessage.error = 'Please enter a valid Email';\n            return _context4.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 13:\n            if ((0, _validations.validatePassword)(password)) {\n              _context4.next = 16;\n              break;\n            }\n\n            _status.errorMessage.error = 'Password must be more than five(5) characters';\n            return _context4.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 16:\n            editRiderQuery = \"UPDATE Rider set\\n        email = $1,\\n        first_name = $2,\\n        last_name = $3,\\n        password = $4\\n        where id = $5\\n        returning *\";\n            values = [email, first_name, last_name, password, id];\n            _context4.prev = 18;\n            _context4.next = 21;\n            return _dbQuery[\"default\"].query(editRiderQuery, values);\n\n          case 21:\n            _yield$dbQuery$query4 = _context4.sent;\n            rows = _yield$dbQuery$query4.rows;\n            dbResponse = rows[0];\n            _status.successMessage.data = dbResponse;\n            return _context4.abrupt(\"return\", res.status(_status.status.created).send(_status.successMessage.data));\n\n          case 28:\n            _context4.prev = 28;\n            _context4.t0 = _context4[\"catch\"](18);\n\n            if (!(_context4.t0.routine === '_bt_check_unique')) {\n              _context4.next = 33;\n              break;\n            }\n\n            _status.errorMessage.error = 'Rider with that EMAIL already exist';\n            return _context4.abrupt(\"return\", res.status(_status.status.conflict).send(_status.errorMessage.error));\n\n          case 33:\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context4.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 35:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[18, 28]]);\n  }));\n\n  return function editRider(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n/**\n * delete a rider\n */\n\n\nexports.editRider = editRider;\n\nvar deleteRider = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var id, deleteRiderQuery, _yield$dbQuery$query5, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            id = req.body.id;\n            deleteRiderQuery = 'delete from rider where id = $1 returning *';\n            _context5.prev = 2;\n            _context5.next = 5;\n            return _dbQuery[\"default\"].query(deleteRiderQuery, [id]);\n\n          case 5:\n            _yield$dbQuery$query5 = _context5.sent;\n            rows = _yield$dbQuery$query5.rows;\n            dbResponse = rows[0];\n            _status.successMessage.data = dbResponse;\n            return _context5.abrupt(\"return\", res.status(_status.status.success).send(_status.successMessage.data));\n\n          case 12:\n            _context5.prev = 12;\n            _context5.t0 = _context5[\"catch\"](2);\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context5.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 16:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[2, 12]]);\n  }));\n\n  return function deleteRider(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n/**\n * get no. of orders delivered by rider\n */\n\n\nexports.deleteRider = deleteRider;\n\nvar ordersByRider = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var id, ordersByRiderQuery, _yield$dbQuery$query6, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            id = req.body.id;\n            console.log('id: ', id);\n            ordersByRiderQuery = 'select count(id) from delivers where id = $1';\n            _context6.prev = 3;\n            _context6.next = 6;\n            return _dbQuery[\"default\"].query(ordersByRiderQuery, [id]);\n\n          case 6:\n            _yield$dbQuery$query6 = _context6.sent;\n            rows = _yield$dbQuery$query6.rows;\n            dbResponse = rows[0];\n            _status.successMessage.data = dbResponse;\n            console.log('res: ', dbResponse);\n            return _context6.abrupt(\"return\", res.status(_status.status.success).send(_status.successMessage.data));\n\n          case 14:\n            _context6.prev = 14;\n            _context6.t0 = _context6[\"catch\"](3);\n            console.log(_context6.t0);\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context6.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 19:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[3, 14]]);\n  }));\n\n  return function ordersByRider(_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nexports.ordersByRider = ordersByRider;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "ridersController.js"
      ],
      "names": [
        "createRider",
        "req",
        "res",
        "body",
        "email",
        "first_name",
        "last_name",
        "password",
        "type",
        "console",
        "log",
        "errorMessage",
        "error",
        "status",
        "bad",
        "send",
        "createRiderQuery",
        "values",
        "addTypeQuery",
        "dbQuery",
        "query",
        "rows",
        "dbResponse",
        "id",
        "successMessage",
        "data",
        "created",
        "routine",
        "conflict",
        "signinRider",
        "signinRiderQuery",
        "notfound",
        "success",
        "searchRiderFirstnameOrLastname",
        "searchQuery",
        "editRider",
        "editRiderQuery",
        "deleteRider",
        "deleteRiderQuery",
        "ordersByRider",
        "ordersByRiderQuery"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/controllers/",
      "sourcesContent": [
        "import moment from 'moment';\n\nimport dbQuery from '../db/dev/dbQuery';\n\nimport {\n    hashPassword,\n    comparePassword,\n    isValidEmail,\n    validatePassword,\n    isEmpty,\n} from '../helpers/validations';\n  \nimport {\n    errorMessage, successMessage, status,\n} from '../helpers/status';\n\n/**\n   * Create A Rider\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} reflection object (of Rider)\n   */\n  const createRider = async (req, res) => {\n    const {\n      email, first_name, last_name, password, type\n    } = req.body;\n\n    console.log('body: ', req.body)\n    console.log('email: ', email)\n    console.log('first_name: ', first_name)\n    console.log('last_name: ', last_name)\n    console.log('password: ', password)\n    console.log('type: ', type)\n\n\n    // const created_on = moment(new Date());\n    if (isEmpty(email) || isEmpty(first_name) || isEmpty(last_name) || isEmpty(password)) {\n      errorMessage.error = 'Email, password, first name and last name fields cannot be empty';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    if (!isValidEmail(email)) {\n      errorMessage.error = 'Please enter a valid Email';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    if (!validatePassword(password)) {\n      errorMessage.error = 'Password must be more than five(5) characters';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    // const hashedPassword = hashPassword(password);\n    const createRiderQuery = `INSERT INTO\n        Rider(email, first_name, last_name, password)\n        VALUES($1, $2, $3, $4)\n        returning *`;\n    const values = [\n      email,\n      first_name,\n      last_name,\n      password,\n    ];\n    const addTypeQuery = (type === 1) ? 'insert into fulltime(id) values($1)' : 'insert into parttime(id) values($1)';\n  \n    try {\n      await dbQuery.query('begin')\n      const { rows } = await dbQuery.query(createRiderQuery, values);\n      const dbResponse = rows[0];\n      await dbQuery.query(addTypeQuery, [dbResponse.id]);\n      await dbQuery.query('commit');\n      // delete dbResponse.password;\n      successMessage.data = dbResponse;\n      return res.status(status.created).send(successMessage.data);\n    } catch (error) {\n      await dbQuery.query('rollback');\n      if (error.routine === '_bt_check_unique') {\n        errorMessage.error = 'Rider with that EMAIL already exist';\n        return res.status(status.conflict).send(errorMessage.error);\n      }\n      errorMessage.error = 'Operation was not successful';\n      console.log('error: ', error);\n      return res.status(status.error).send(errorMessage.error);\n    }\n  };\n  \n  /**\n     * Signin\n     * @param {object} req\n     * @param {object} res\n     * @returns {object} rider object\n     */\n  const signinRider = async (req, res) => {\n    const { email, password } = req.body;\n    if (isEmpty(email) || isEmpty(password)) {\n      errorMessage.error = 'Email or Password detail is missing';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    if (!isValidEmail(email)) {\n      errorMessage.error = 'Please enter a valid Email or Password';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    const signinRiderQuery = 'SELECT * FROM Rider WHERE email = $1';\n    try {\n      const { rows } = await dbQuery.query(signinRiderQuery, [email]);\n      const dbResponse = rows[0];\n      if (!dbResponse) {\n        errorMessage.error = 'Rider with this email does not exist';\n        console.log(errorMessage);\n        return res.status(status.notfound).send(errorMessage.error);\n      }\n      if (!comparePassword(dbResponse.password, password)) {\n        errorMessage.error = 'The password you provided is incorrect';\n        return res.status(status.bad).send(errorMessage.error);\n      }\n      // const token = generateUserToken(dbResponse.email, dbResponse.id, dbResponse.is_admin, dbResponse.first_name, dbResponse.last_name);\n      // delete dbResponse.password;\n      successMessage.data = dbResponse;\n    //   successMessage.data.token = token;\n      return res.status(status.success).send(successMessage.data);\n    } catch (error) {\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n    }\n  };\n\n  /**\n * @params {Object} req\n * @params {Object} res\n * @returns return firstname and Lastname\n */ \n\n const searchRiderFirstnameOrLastname = async (req, res) => {\n    const { first_name, last_name } = req.query;\n    const searchQuery = 'SELECT * from Rider WHERE first_name =$1 OR last_name =$2 ORDER BY id DESC';\n    try {\n      const { rows } = await dbQuery.query(searchQuery, [first_name, last_name]);\n      const dbResponse = rows;\n      if (!dbResponse[0]) {\n        errorMessage.error = 'No user with such names';\n        return res.status(status.notfound).send(errorMessage.error);\n      }\n      successMessage.data = dbResponse;\n      return res.status(status.success).send(successMessage.data);\n    }\n    catch (error) {\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n\n    }\n  };\n\n  /**\n   * Edit A Rider\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} reflection object (of Customer)\n   */\n  const editRider = async (req, res) => {\n    const {\n      email, first_name, last_name, password, id\n    } = req.body;\n\n    console.log('body: ', req.body)\n    console.log('email: ', email)\n    console.log('first_name: ', first_name)\n    console.log('last_name: ', last_name)\n    console.log('password: ', password)\n    console.log('id: ', id)\n\n    if (isEmpty(email) || isEmpty(first_name) || isEmpty(last_name) || isEmpty(password)) {\n      errorMessage.error = 'Email, password, first name and last name fields cannot be empty';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    if (!isValidEmail(email)) {\n      errorMessage.error = 'Please enter a valid Email';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    if (!validatePassword(password)) {\n      errorMessage.error = 'Password must be more than five(5) characters';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    const editRiderQuery = `UPDATE Rider set\n        email = $1,\n        first_name = $2,\n        last_name = $3,\n        password = $4\n        where id = $5\n        returning *`;\n    const values = [\n      email,\n      first_name,\n      last_name,\n      password,\n      id\n    ];\n  \n    try {\n      const { rows } = await dbQuery.query(editRiderQuery, values);\n      const dbResponse = rows[0];\n      successMessage.data = dbResponse;\n      return res.status(status.created).send(successMessage.data);\n    } catch (error) {\n      if (error.routine === '_bt_check_unique') {\n        errorMessage.error = 'Rider with that EMAIL already exist';\n        return res.status(status.conflict).send(errorMessage.error);\n      }\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n    }\n  };\n\n  /**\n   * delete a rider\n   */\n  const deleteRider = async (req, res) => {\n    const { id } = req.body;\n    const deleteRiderQuery = 'delete from rider where id = $1 returning *';\n    try {\n      const { rows } = await dbQuery.query(deleteRiderQuery, [id]);\n      const dbResponse = rows[0];\n      successMessage.data = dbResponse;\n      return res.status(status.success).send(successMessage.data);\n    } catch (error) {\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n    }\n  };\n\n  /**\n   * get no. of orders delivered by rider\n   */\n  const ordersByRider = async (req, res) => {\n    const { id } = req.body;\n    console.log('id: ', id);\n    const ordersByRiderQuery = 'select count(id) from delivers where id = $1';\n    try {\n      const { rows } = await dbQuery.query(ordersByRiderQuery, [id]);\n      const dbResponse = rows[0];\n      successMessage.data = dbResponse;\n      console.log('res: ', dbResponse);\n      return res.status(status.success).send(successMessage.data);\n    } catch (error) {\n      console.log(error);\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n    }\n  }\n  \n  export {\n    createRider,\n    signinRider,\n    searchRiderFirstnameOrLastname,\n    editRider,\n    deleteRider,\n    ordersByRider\n  };\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588644908753
  },
  "{\"sourceRoot\":\"/Users/ngjingkang/Desktop/website/backend/app/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/ngjingkang/Desktop/website/backend\",\"filename\":\"/Users/ngjingkang/Desktop/website/backend/app/routes/staffRoute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/ngjingkang/Desktop/website/backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/ngjingkang/Desktop/website/backend",
      "filename": "/Users/ngjingkang/Desktop/website/backend/app/routes/staffRoute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/ngjingkang/Desktop/website/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ngjingkang/Desktop/website/backend/app/routes/staffRoute.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/ngjingkang/Desktop/website/backend/app/routes/staffRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/routes/",
        "sourceFileName": "staffRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _staffController = require(\"../controllers/staffController\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = _express[\"default\"].Router(); // staff Routes\n\n\nrouter.post('/auth/signup', _staffController.createStaff);\nrouter.post('/auth/signin', _staffController.signinStaff);\nrouter.get('/search', _staffController.searchStaffFirstnameOrLastname);\nrouter.post('/edit', _staffController.editStaff);\nrouter.post('/delete', _staffController.deleteStaff);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YWZmUm91dGUuanMiXSwibmFtZXMiOlsicm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsInBvc3QiLCJjcmVhdGVTdGFmZiIsInNpZ25pblN0YWZmIiwiZ2V0Iiwic2VhcmNoU3RhZmZGaXJzdG5hbWVPckxhc3RuYW1lIiwiZWRpdFN0YWZmIiwiZGVsZXRlU3RhZmYiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQTs7OztBQUVBLElBQU1BLE1BQU0sR0FBR0Msb0JBQVFDLE1BQVIsRUFBZixDLENBRUE7OztBQUVBRixNQUFNLENBQUNHLElBQVAsQ0FBWSxjQUFaLEVBQTRCQyw0QkFBNUI7QUFDQUosTUFBTSxDQUFDRyxJQUFQLENBQVksY0FBWixFQUE0QkUsNEJBQTVCO0FBQ0FMLE1BQU0sQ0FBQ00sR0FBUCxDQUFXLFNBQVgsRUFBc0JDLCtDQUF0QjtBQUNBUCxNQUFNLENBQUNHLElBQVAsQ0FBWSxPQUFaLEVBQXFCSywwQkFBckI7QUFDQVIsTUFBTSxDQUFDRyxJQUFQLENBQVksU0FBWixFQUF1Qk0sNEJBQXZCO2VBRWVULE0iLCJzb3VyY2VSb290IjoiL1VzZXJzL25namluZ2thbmcvRGVza3RvcC93ZWJzaXRlL2JhY2tlbmQvYXBwL3JvdXRlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcblxuaW1wb3J0IHsgY3JlYXRlU3RhZmYsIHNpZ25pblN0YWZmLCBzZWFyY2hTdGFmZkZpcnN0bmFtZU9yTGFzdG5hbWUsIGVkaXRTdGFmZiwgZGVsZXRlU3RhZmYgfSBmcm9tICcuLi9jb250cm9sbGVycy9zdGFmZkNvbnRyb2xsZXInO1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG4vLyBzdGFmZiBSb3V0ZXNcblxucm91dGVyLnBvc3QoJy9hdXRoL3NpZ251cCcsIGNyZWF0ZVN0YWZmKTtcbnJvdXRlci5wb3N0KCcvYXV0aC9zaWduaW4nLCBzaWduaW5TdGFmZik7XG5yb3V0ZXIuZ2V0KCcvc2VhcmNoJywgc2VhcmNoU3RhZmZGaXJzdG5hbWVPckxhc3RuYW1lKTtcbnJvdXRlci5wb3N0KCcvZWRpdCcsIGVkaXRTdGFmZik7XG5yb3V0ZXIucG9zdCgnL2RlbGV0ZScsIGRlbGV0ZVN0YWZmKTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "staffRoute.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "post",
        "createStaff",
        "signinStaff",
        "get",
        "searchStaffFirstnameOrLastname",
        "editStaff",
        "deleteStaff"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;;;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf,C,CAEA;;;AAEAF,MAAM,CAACG,IAAP,CAAY,cAAZ,EAA4BC,4BAA5B;AACAJ,MAAM,CAACG,IAAP,CAAY,cAAZ,EAA4BE,4BAA5B;AACAL,MAAM,CAACM,GAAP,CAAW,SAAX,EAAsBC,+CAAtB;AACAP,MAAM,CAACG,IAAP,CAAY,OAAZ,EAAqBK,0BAArB;AACAR,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBM,4BAAvB;eAEeT,M",
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/routes/",
      "sourcesContent": [
        "import express from 'express';\n\nimport { createStaff, signinStaff, searchStaffFirstnameOrLastname, editStaff, deleteStaff } from '../controllers/staffController';\n\nconst router = express.Router();\n\n// staff Routes\n\nrouter.post('/auth/signup', createStaff);\nrouter.post('/auth/signin', signinStaff);\nrouter.get('/search', searchStaffFirstnameOrLastname);\nrouter.post('/edit', editStaff);\nrouter.post('/delete', deleteStaff);\n\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1588644908757
  },
  "{\"sourceRoot\":\"/Users/ngjingkang/Desktop/website/backend/app/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/ngjingkang/Desktop/website/backend\",\"filename\":\"/Users/ngjingkang/Desktop/website/backend/app/controllers/staffController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/ngjingkang/Desktop/website/backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/ngjingkang/Desktop/website/backend",
      "filename": "/Users/ngjingkang/Desktop/website/backend/app/controllers/staffController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/ngjingkang/Desktop/website/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ngjingkang/Desktop/website/backend/app/controllers/staffController.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/ngjingkang/Desktop/website/backend/app/controllers/staffController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/controllers/",
        "sourceFileName": "staffController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteStaff = exports.editStaff = exports.searchStaffFirstnameOrLastname = exports.signinStaff = exports.createStaff = void 0;\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _dbQuery = _interopRequireDefault(require(\"../db/dev/dbQuery\"));\n\nvar _validations = require(\"../helpers/validations\");\n\nvar _status = require(\"../helpers/status\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n   * Create A Staff\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} reflection object (of Staff)\n   */\nvar createStaff = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, email, first_name, last_name, password, resid, createStaffQuery, values, _yield$dbQuery$query, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _req$body = req.body, email = _req$body.email, first_name = _req$body.first_name, last_name = _req$body.last_name, password = _req$body.password, resid = _req$body.resid;\n            console.log('body: ', req.body);\n            console.log('email: ', email);\n            console.log('first_name: ', first_name);\n            console.log('last_name: ', last_name);\n            console.log('password: ', password);\n            console.log('resid: ', resid); // const created_on = moment(new Date());\n\n            if (!((0, _validations.isEmpty)(email) || (0, _validations.isEmpty)(first_name) || (0, _validations.isEmpty)(last_name) || (0, _validations.isEmpty)(password) || (0, _validations.isEmpty)(resid))) {\n              _context.next = 10;\n              break;\n            }\n\n            _status.errorMessage.error = 'Email, password, first name, last name and restauarnt id fields cannot be empty';\n            return _context.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage));\n\n          case 10:\n            if ((0, _validations.isValidEmail)(email)) {\n              _context.next = 13;\n              break;\n            }\n\n            _status.errorMessage.error = 'Please enter a valid Email';\n            return _context.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 13:\n            if ((0, _validations.validatePassword)(password)) {\n              _context.next = 16;\n              break;\n            }\n\n            _status.errorMessage.error = 'Password must be more than five(5) characters';\n            return _context.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 16:\n            if ((0, _validations.isNum)(resid)) {\n              _context.next = 19;\n              break;\n            }\n\n            _status.errorMessage.error = 'Please input a numerical value for your restaurant id';\n            return _context.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 19:\n            if (!(resid.indexOf('.') != -1)) {\n              _context.next = 22;\n              break;\n            }\n\n            _status.errorMessage.error = 'Please input only whole numbers';\n            return _context.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 22:\n            // const hashedPassword = hashPassword(password);\n            createStaffQuery = \"INSERT INTO\\n        Staff(email, first_name, last_name, password, restaurantid)\\n        VALUES($1, $2, $3, $4, $5)\\n        returning *\";\n            values = [email, first_name, last_name, password, Number(resid)];\n            console.log('values: ', values);\n            _context.prev = 25;\n            _context.next = 28;\n            return _dbQuery[\"default\"].query(createStaffQuery, values);\n\n          case 28:\n            _yield$dbQuery$query = _context.sent;\n            rows = _yield$dbQuery$query.rows;\n            dbResponse = rows[0]; // delete dbResponse.password;\n\n            _status.successMessage.data = dbResponse;\n            return _context.abrupt(\"return\", res.status(_status.status.created).send(_status.successMessage.data));\n\n          case 35:\n            _context.prev = 35;\n            _context.t0 = _context[\"catch\"](25);\n\n            if (!(_context.t0.routine === '_bt_check_unique')) {\n              _context.next = 40;\n              break;\n            }\n\n            _status.errorMessage.error = 'Staff with that EMAIL already exist';\n            return _context.abrupt(\"return\", res.status(_status.status.conflict).send(_status.errorMessage.error));\n\n          case 40:\n            if (!(_context.t0.routine === 'ri_ReportViolation')) {\n              _context.next = 43;\n              break;\n            }\n\n            _status.errorMessage.error = 'That restaurant id does not exist';\n            return _context.abrupt(\"return\", res.status(_status.status.conflict).send(_status.errorMessage.error));\n\n          case 43:\n            console.log(_context.t0);\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 46:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[25, 35]]);\n  }));\n\n  return function createStaff(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n   * Signin\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} staff object\n   */\n\n\nexports.createStaff = createStaff;\n\nvar signinStaff = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body2, email, password, signinStaffQuery, _yield$dbQuery$query2, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _req$body2 = req.body, email = _req$body2.email, password = _req$body2.password;\n\n            if (!((0, _validations.isEmpty)(email) || (0, _validations.isEmpty)(password))) {\n              _context2.next = 4;\n              break;\n            }\n\n            _status.errorMessage.error = 'Email or Password detail is missing';\n            return _context2.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 4:\n            if ((0, _validations.isValidEmail)(email)) {\n              _context2.next = 7;\n              break;\n            }\n\n            _status.errorMessage.error = 'Please enter a valid Email or Password';\n            return _context2.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 7:\n            signinStaffQuery = 'SELECT * FROM Staff WHERE email = $1';\n            _context2.prev = 8;\n            _context2.next = 11;\n            return _dbQuery[\"default\"].query(signinStaffQuery, [email]);\n\n          case 11:\n            _yield$dbQuery$query2 = _context2.sent;\n            rows = _yield$dbQuery$query2.rows;\n            dbResponse = rows[0];\n\n            if (dbResponse) {\n              _context2.next = 18;\n              break;\n            }\n\n            _status.errorMessage.error = 'Staff with this email does not exist';\n            console.log(_status.errorMessage);\n            return _context2.abrupt(\"return\", res.status(_status.status.notfound).send(_status.errorMessage.error));\n\n          case 18:\n            if ((0, _validations.comparePassword)(dbResponse.password, password)) {\n              _context2.next = 21;\n              break;\n            }\n\n            _status.errorMessage.error = 'The password you provided is incorrect';\n            return _context2.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 21:\n            // const token = generateUserToken(dbResponse.email, dbResponse.id, dbResponse.is_admin, dbResponse.first_name, dbResponse.last_name);\n            // delete dbResponse.password;\n            _status.successMessage.data = dbResponse; //   successMessage.data.token = token;\n\n            return _context2.abrupt(\"return\", res.status(_status.status.success).send(_status.successMessage.data));\n\n          case 25:\n            _context2.prev = 25;\n            _context2.t0 = _context2[\"catch\"](8);\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context2.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 29:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[8, 25]]);\n  }));\n\n  return function signinStaff(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n/**\n* @params {Object} req\n* @params {Object} res\n* @returns return firstname and Lastname\n*/\n\n\nexports.signinStaff = signinStaff;\n\nvar searchStaffFirstnameOrLastname = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$query, first_name, last_name, searchQuery, _yield$dbQuery$query3, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _req$query = req.query, first_name = _req$query.first_name, last_name = _req$query.last_name;\n            searchQuery = 'SELECT * from Staff WHERE first_name =$1 OR last_name =$2 ORDER BY id DESC';\n            _context3.prev = 2;\n            _context3.next = 5;\n            return _dbQuery[\"default\"].query(searchQuery, [first_name, last_name]);\n\n          case 5:\n            _yield$dbQuery$query3 = _context3.sent;\n            rows = _yield$dbQuery$query3.rows;\n            dbResponse = rows;\n\n            if (dbResponse[0]) {\n              _context3.next = 11;\n              break;\n            }\n\n            _status.errorMessage.error = 'No user with such names';\n            return _context3.abrupt(\"return\", res.status(_status.status.notfound).send(_status.errorMessage.error));\n\n          case 11:\n            _status.successMessage.data = dbResponse;\n            return _context3.abrupt(\"return\", res.status(_status.status.success).send(_status.successMessage.data));\n\n          case 15:\n            _context3.prev = 15;\n            _context3.t0 = _context3[\"catch\"](2);\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context3.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 19:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[2, 15]]);\n  }));\n\n  return function searchStaffFirstnameOrLastname(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n/**\n* Edit A staff\n* @param {object} req\n* @param {object} res\n* @returns {object} reflection object (of Customer)\n*/\n\n\nexports.searchStaffFirstnameOrLastname = searchStaffFirstnameOrLastname;\n\nvar editStaff = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var _req$body3, email, first_name, last_name, password, id, editStaffQuery, values, _yield$dbQuery$query4, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _req$body3 = req.body, email = _req$body3.email, first_name = _req$body3.first_name, last_name = _req$body3.last_name, password = _req$body3.password, id = _req$body3.id;\n            console.log('body: ', req.body);\n            console.log('email: ', email);\n            console.log('first_name: ', first_name);\n            console.log('last_name: ', last_name);\n            console.log('password: ', password);\n            console.log('id: ', id);\n\n            if (!((0, _validations.isEmpty)(email) || (0, _validations.isEmpty)(first_name) || (0, _validations.isEmpty)(last_name) || (0, _validations.isEmpty)(password))) {\n              _context4.next = 10;\n              break;\n            }\n\n            _status.errorMessage.error = 'Email, password, first name and last name fields cannot be empty';\n            return _context4.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage));\n\n          case 10:\n            if ((0, _validations.isValidEmail)(email)) {\n              _context4.next = 13;\n              break;\n            }\n\n            _status.errorMessage.error = 'Please enter a valid Email';\n            return _context4.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 13:\n            if ((0, _validations.validatePassword)(password)) {\n              _context4.next = 16;\n              break;\n            }\n\n            _status.errorMessage.error = 'Password must be more than five(5) characters';\n            return _context4.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 16:\n            editStaffQuery = \"UPDATE Staff set\\n        email = $1,\\n        first_name = $2,\\n        last_name = $3,\\n        password = $4\\n        where id = $5\\n        returning *\";\n            values = [email, first_name, last_name, password, id];\n            _context4.prev = 18;\n            _context4.next = 21;\n            return _dbQuery[\"default\"].query(editStaffQuery, values);\n\n          case 21:\n            _yield$dbQuery$query4 = _context4.sent;\n            rows = _yield$dbQuery$query4.rows;\n            dbResponse = rows[0];\n            _status.successMessage.data = dbResponse;\n            return _context4.abrupt(\"return\", res.status(_status.status.created).send(_status.successMessage.data));\n\n          case 28:\n            _context4.prev = 28;\n            _context4.t0 = _context4[\"catch\"](18);\n\n            if (!(_context4.t0.routine === '_bt_check_unique')) {\n              _context4.next = 33;\n              break;\n            }\n\n            _status.errorMessage.error = 'Staff with that EMAIL already exist';\n            return _context4.abrupt(\"return\", res.status(_status.status.conflict).send(_status.errorMessage.error));\n\n          case 33:\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context4.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 35:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[18, 28]]);\n  }));\n\n  return function editStaff(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n/**\n * delete a staff\n */\n\n\nexports.editStaff = editStaff;\n\nvar deleteStaff = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var id, deleteStaffQuery, _yield$dbQuery$query5, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            id = req.body.id;\n            deleteStaffQuery = 'delete from staff where id = $1 returning *';\n            _context5.prev = 2;\n            _context5.next = 5;\n            return _dbQuery[\"default\"].query(deleteStaffQuery, [id]);\n\n          case 5:\n            _yield$dbQuery$query5 = _context5.sent;\n            rows = _yield$dbQuery$query5.rows;\n            dbResponse = rows[0];\n            _status.successMessage.data = dbResponse;\n            return _context5.abrupt(\"return\", res.status(_status.status.success).send(_status.successMessage.data));\n\n          case 12:\n            _context5.prev = 12;\n            _context5.t0 = _context5[\"catch\"](2);\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context5.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 16:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[2, 12]]);\n  }));\n\n  return function deleteStaff(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nexports.deleteStaff = deleteStaff;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "staffController.js"
      ],
      "names": [
        "createStaff",
        "req",
        "res",
        "body",
        "email",
        "first_name",
        "last_name",
        "password",
        "resid",
        "console",
        "log",
        "errorMessage",
        "error",
        "status",
        "bad",
        "send",
        "indexOf",
        "createStaffQuery",
        "values",
        "Number",
        "dbQuery",
        "query",
        "rows",
        "dbResponse",
        "successMessage",
        "data",
        "created",
        "routine",
        "conflict",
        "signinStaff",
        "signinStaffQuery",
        "notfound",
        "success",
        "searchStaffFirstnameOrLastname",
        "searchQuery",
        "editStaff",
        "id",
        "editStaffQuery",
        "deleteStaff",
        "deleteStaffQuery"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/controllers/",
      "sourcesContent": [
        "import moment from 'moment';\n\nimport dbQuery from '../db/dev/dbQuery';\n\nimport {\n    hashPassword,\n    comparePassword,\n    isValidEmail,\n    validatePassword,\n    isEmpty,\n    isNum,\n} from '../helpers/validations';\n  \nimport {\n    errorMessage, successMessage, status,\n} from '../helpers/status';\n\n/**\n   * Create A Staff\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} reflection object (of Staff)\n   */\n  const createStaff = async (req, res) => {\n    const {\n      email, first_name, last_name, password, resid,\n    } = req.body;\n\n    console.log('body: ', req.body)\n    console.log('email: ', email)\n    console.log('first_name: ', first_name)\n    console.log('last_name: ', last_name)\n    console.log('password: ', password)\n    console.log('resid: ', resid)\n\n\n    // const created_on = moment(new Date());\n    if (isEmpty(email) || isEmpty(first_name) || isEmpty(last_name) || isEmpty(password) || isEmpty(resid)) {\n      errorMessage.error = 'Email, password, first name, last name and restauarnt id fields cannot be empty';\n      return res.status(status.bad).send(errorMessage);\n    }\n    if (!isValidEmail(email)) {\n      errorMessage.error = 'Please enter a valid Email';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    if (!validatePassword(password)) {\n      errorMessage.error = 'Password must be more than five(5) characters';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    if (!isNum(resid)) {\n      errorMessage.error = 'Please input a numerical value for your restaurant id';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    if (resid.indexOf('.') != -1) {\n      errorMessage.error = 'Please input only whole numbers';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    // const hashedPassword = hashPassword(password);\n    const createStaffQuery = `INSERT INTO\n        Staff(email, first_name, last_name, password, restaurantid)\n        VALUES($1, $2, $3, $4, $5)\n        returning *`;\n    const values = [\n      email,\n      first_name,\n      last_name,\n      password,\n      Number(resid),\n    ];\n\n    console.log('values: ', values);\n  \n    try {\n      const { rows } = await dbQuery.query(createStaffQuery, values);\n      const dbResponse = rows[0];\n      // delete dbResponse.password;\n      successMessage.data = dbResponse;\n      return res.status(status.created).send(successMessage.data);\n    } catch (error) {\n      if (error.routine === '_bt_check_unique') {\n        errorMessage.error = 'Staff with that EMAIL already exist';\n        return res.status(status.conflict).send(errorMessage.error);\n      }\n      if (error.routine === 'ri_ReportViolation') {\n        errorMessage.error = 'That restaurant id does not exist';\n        return res.status(status.conflict).send(errorMessage.error);\n      }\n      console.log(error);\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n    }\n  };\n  \n  /**\n     * Signin\n     * @param {object} req\n     * @param {object} res\n     * @returns {object} staff object\n     */\n  const signinStaff = async (req, res) => {\n    const { email, password } = req.body;\n    if (isEmpty(email) || isEmpty(password)) {\n      errorMessage.error = 'Email or Password detail is missing';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    if (!isValidEmail(email)) {\n      errorMessage.error = 'Please enter a valid Email or Password';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    const signinStaffQuery = 'SELECT * FROM Staff WHERE email = $1';\n    try {\n      const { rows } = await dbQuery.query(signinStaffQuery, [email]);\n      const dbResponse = rows[0];\n      if (!dbResponse) {\n        errorMessage.error = 'Staff with this email does not exist';\n        console.log(errorMessage);\n        return res.status(status.notfound).send(errorMessage.error);\n      }\n      if (!comparePassword(dbResponse.password, password)) {\n        errorMessage.error = 'The password you provided is incorrect';\n        return res.status(status.bad).send(errorMessage.error);\n      }\n      // const token = generateUserToken(dbResponse.email, dbResponse.id, dbResponse.is_admin, dbResponse.first_name, dbResponse.last_name);\n      // delete dbResponse.password;\n      successMessage.data = dbResponse;\n    //   successMessage.data.token = token;\n      return res.status(status.success).send(successMessage.data);\n    } catch (error) {\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n    }\n  };\n\n  /**\n * @params {Object} req\n * @params {Object} res\n * @returns return firstname and Lastname\n */ \n\n const searchStaffFirstnameOrLastname = async (req, res) => {\n    const { first_name, last_name } = req.query;\n    const searchQuery = 'SELECT * from Staff WHERE first_name =$1 OR last_name =$2 ORDER BY id DESC';\n    try {\n      const { rows } = await dbQuery.query(searchQuery, [first_name, last_name]);\n      const dbResponse = rows;\n      if (!dbResponse[0]) {\n        errorMessage.error = 'No user with such names';\n        return res.status(status.notfound).send(errorMessage.error);\n      }\n      successMessage.data = dbResponse;\n      return res.status(status.success).send(successMessage.data);\n    }\n    catch (error) {\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n\n    }\n  };\n\n      /**\n   * Edit A staff\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} reflection object (of Customer)\n   */\n  const editStaff = async (req, res) => {\n    const {\n      email, first_name, last_name, password, id\n    } = req.body;\n\n    console.log('body: ', req.body)\n    console.log('email: ', email)\n    console.log('first_name: ', first_name)\n    console.log('last_name: ', last_name)\n    console.log('password: ', password)\n    console.log('id: ', id)\n\n    if (isEmpty(email) || isEmpty(first_name) || isEmpty(last_name) || isEmpty(password)) {\n      errorMessage.error = 'Email, password, first name and last name fields cannot be empty';\n      return res.status(status.bad).send(errorMessage);\n    }\n    if (!isValidEmail(email)) {\n      errorMessage.error = 'Please enter a valid Email';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    if (!validatePassword(password)) {\n      errorMessage.error = 'Password must be more than five(5) characters';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    const editStaffQuery = `UPDATE Staff set\n        email = $1,\n        first_name = $2,\n        last_name = $3,\n        password = $4\n        where id = $5\n        returning *`;\n    const values = [\n      email,\n      first_name,\n      last_name,\n      password,\n      id\n    ];\n  \n    try {\n      const { rows } = await dbQuery.query(editStaffQuery, values);\n      const dbResponse = rows[0];\n      successMessage.data = dbResponse;\n      return res.status(status.created).send(successMessage.data);\n    } catch (error) {\n      if (error.routine === '_bt_check_unique') {\n        errorMessage.error = 'Staff with that EMAIL already exist';\n        return res.status(status.conflict).send(errorMessage.error);\n      }\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n    }\n  };\n\n  /**\n   * delete a staff\n   */\n  const deleteStaff = async (req, res) => {\n    const { id } = req.body;\n    const deleteStaffQuery = 'delete from staff where id = $1 returning *';\n    try {\n      const { rows } = await dbQuery.query(deleteStaffQuery, [id]);\n      const dbResponse = rows[0];\n      successMessage.data = dbResponse;\n      return res.status(status.success).send(successMessage.data);\n    } catch (error) {\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n    }\n  };\n  \n  export {\n    createStaff,\n    signinStaff,\n    searchStaffFirstnameOrLastname,\n    editStaff,\n    deleteStaff\n  };\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588644908754
  },
  "{\"sourceRoot\":\"/Users/ngjingkang/Desktop/website/backend/app/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/ngjingkang/Desktop/website/backend\",\"filename\":\"/Users/ngjingkang/Desktop/website/backend/app/routes/restaurantsRoute.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/ngjingkang/Desktop/website/backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/ngjingkang/Desktop/website/backend",
      "filename": "/Users/ngjingkang/Desktop/website/backend/app/routes/restaurantsRoute.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/ngjingkang/Desktop/website/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ngjingkang/Desktop/website/backend/app/routes/restaurantsRoute.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/ngjingkang/Desktop/website/backend/app/routes/restaurantsRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/routes/",
        "sourceFileName": "restaurantsRoute.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _restaurantsController = require(\"../controllers/restaurantsController\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = _express[\"default\"].Router(); // restaurant Routes\n// router.post('/search', searchRestaurant);\n\n\nrouter.get('/search', _restaurantsController.searchRestaurant);\nrouter.post('/get', _restaurantsController.getRestaurant);\nrouter.post('/auth/signup', _restaurantsController.createRestaurant);\nrouter.post('/edit', _restaurantsController.editRestaurant);\nrouter.post('/delete', _restaurantsController.deleteRestaurant);\nrouter.get('/menu', _restaurantsController.getRestaurantMenu);\nrouter.post('/food', _restaurantsController.getFood);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc3RhdXJhbnRzUm91dGUuanMiXSwibmFtZXMiOlsicm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsImdldCIsInNlYXJjaFJlc3RhdXJhbnQiLCJwb3N0IiwiZ2V0UmVzdGF1cmFudCIsImNyZWF0ZVJlc3RhdXJhbnQiLCJlZGl0UmVzdGF1cmFudCIsImRlbGV0ZVJlc3RhdXJhbnQiLCJnZXRSZXN0YXVyYW50TWVudSIsImdldEZvb2QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQTs7OztBQUVBLElBQU1BLE1BQU0sR0FBR0Msb0JBQVFDLE1BQVIsRUFBZixDLENBRUE7QUFFQTs7O0FBQ0FGLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLFNBQVgsRUFBc0JDLHVDQUF0QjtBQUNBSixNQUFNLENBQUNLLElBQVAsQ0FBWSxNQUFaLEVBQW9CQyxvQ0FBcEI7QUFDQU4sTUFBTSxDQUFDSyxJQUFQLENBQVksY0FBWixFQUE0QkUsdUNBQTVCO0FBQ0FQLE1BQU0sQ0FBQ0ssSUFBUCxDQUFZLE9BQVosRUFBcUJHLHFDQUFyQjtBQUNBUixNQUFNLENBQUNLLElBQVAsQ0FBWSxTQUFaLEVBQXVCSSx1Q0FBdkI7QUFDQVQsTUFBTSxDQUFDRyxHQUFQLENBQVcsT0FBWCxFQUFvQk8sd0NBQXBCO0FBQ0FWLE1BQU0sQ0FBQ0ssSUFBUCxDQUFZLE9BQVosRUFBb0JNLDhCQUFwQjtlQUVlWCxNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9uZ2ppbmdrYW5nL0Rlc2t0b3Avd2Vic2l0ZS9iYWNrZW5kL2FwcC9yb3V0ZXMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5cbmltcG9ydCB7IHNlYXJjaFJlc3RhdXJhbnQsIGdldFJlc3RhdXJhbnQsIGNyZWF0ZVJlc3RhdXJhbnQsIGVkaXRSZXN0YXVyYW50LCBkZWxldGVSZXN0YXVyYW50LCBnZXRSZXN0YXVyYW50TWVudSwgZ2V0Rm9vZCB9IGZyb20gJy4uL2NvbnRyb2xsZXJzL3Jlc3RhdXJhbnRzQ29udHJvbGxlcic7XG5cbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbi8vIHJlc3RhdXJhbnQgUm91dGVzXG5cbi8vIHJvdXRlci5wb3N0KCcvc2VhcmNoJywgc2VhcmNoUmVzdGF1cmFudCk7XG5yb3V0ZXIuZ2V0KCcvc2VhcmNoJywgc2VhcmNoUmVzdGF1cmFudClcbnJvdXRlci5wb3N0KCcvZ2V0JywgZ2V0UmVzdGF1cmFudClcbnJvdXRlci5wb3N0KCcvYXV0aC9zaWdudXAnLCBjcmVhdGVSZXN0YXVyYW50KVxucm91dGVyLnBvc3QoJy9lZGl0JywgZWRpdFJlc3RhdXJhbnQpXG5yb3V0ZXIucG9zdCgnL2RlbGV0ZScsIGRlbGV0ZVJlc3RhdXJhbnQpXG5yb3V0ZXIuZ2V0KCcvbWVudScsIGdldFJlc3RhdXJhbnRNZW51KVxucm91dGVyLnBvc3QoJy9mb29kJyxnZXRGb29kKVxuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "restaurantsRoute.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "get",
        "searchRestaurant",
        "post",
        "getRestaurant",
        "createRestaurant",
        "editRestaurant",
        "deleteRestaurant",
        "getRestaurantMenu",
        "getFood"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;;;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf,C,CAEA;AAEA;;;AACAF,MAAM,CAACG,GAAP,CAAW,SAAX,EAAsBC,uCAAtB;AACAJ,MAAM,CAACK,IAAP,CAAY,MAAZ,EAAoBC,oCAApB;AACAN,MAAM,CAACK,IAAP,CAAY,cAAZ,EAA4BE,uCAA5B;AACAP,MAAM,CAACK,IAAP,CAAY,OAAZ,EAAqBG,qCAArB;AACAR,MAAM,CAACK,IAAP,CAAY,SAAZ,EAAuBI,uCAAvB;AACAT,MAAM,CAACG,GAAP,CAAW,OAAX,EAAoBO,wCAApB;AACAV,MAAM,CAACK,IAAP,CAAY,OAAZ,EAAoBM,8BAApB;eAEeX,M",
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/routes/",
      "sourcesContent": [
        "import express from 'express';\n\nimport { searchRestaurant, getRestaurant, createRestaurant, editRestaurant, deleteRestaurant, getRestaurantMenu, getFood } from '../controllers/restaurantsController';\n\nconst router = express.Router();\n\n// restaurant Routes\n\n// router.post('/search', searchRestaurant);\nrouter.get('/search', searchRestaurant)\nrouter.post('/get', getRestaurant)\nrouter.post('/auth/signup', createRestaurant)\nrouter.post('/edit', editRestaurant)\nrouter.post('/delete', deleteRestaurant)\nrouter.get('/menu', getRestaurantMenu)\nrouter.post('/food',getFood)\n\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1588731491693
  },
  "{\"sourceRoot\":\"/Users/ngjingkang/Desktop/website/backend/app/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/ngjingkang/Desktop/website/backend\",\"filename\":\"/Users/ngjingkang/Desktop/website/backend/app/controllers/restaurantsController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/ngjingkang/Desktop/website/backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/ngjingkang/Desktop/website/backend",
      "filename": "/Users/ngjingkang/Desktop/website/backend/app/controllers/restaurantsController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/ngjingkang/Desktop/website/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ngjingkang/Desktop/website/backend/app/controllers/restaurantsController.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/ngjingkang/Desktop/website/backend/app/controllers/restaurantsController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/controllers/",
        "sourceFileName": "restaurantsController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFood = exports.getRestaurantMenu = exports.deleteRestaurant = exports.editRestaurant = exports.createRestaurant = exports.getRestaurant = exports.searchRestaurant = void 0;\n\nvar _dbQuery = _interopRequireDefault(require(\"../db/dev/dbQuery\"));\n\nvar _validations = require(\"../helpers/validations\");\n\nvar _status = require(\"../helpers/status\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * search for restaurants\n * @param {object} req\n * @param {object} res\n * @returns {object} returned resid\n */\nvar searchRestaurant = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var keywords, searchQuery, _yield$dbQuery$query, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            keywords = req.query.keywords;\n            searchQuery = \"SELECT * from Restaurant WHERE lower(resname) like '%' || lower($1) || '%'\";\n            _context.prev = 2;\n            _context.next = 5;\n            return _dbQuery[\"default\"].query(searchQuery, [keywords]);\n\n          case 5:\n            _yield$dbQuery$query = _context.sent;\n            rows = _yield$dbQuery$query.rows;\n            dbResponse = rows;\n\n            if (dbResponse[0]) {\n              _context.next = 11;\n              break;\n            }\n\n            _status.errorMessage.error = 'No restaurants found :(';\n            return _context.abrupt(\"return\", res.status(_status.status.notfound).send(_status.errorMessage.error));\n\n          case 11:\n            _status.successMessage.data = dbResponse;\n            return _context.abrupt(\"return\", res.status(_status.status.success).send(dbResponse));\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](2);\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 15]]);\n  }));\n\n  return function searchRestaurant(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * get restaurant detail\n * @param {object} req\n * @param {object} res\n * @returns {object} returned resid\n */\n\n\nexports.searchRestaurant = searchRestaurant;\n\nvar getRestaurant = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var resid, searchQuery, _yield$dbQuery$query2, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            resid = req.body.resid;\n            console.log('resid: ', resid);\n            searchQuery = \"SELECT * from Restaurant WHERE resid=$1\";\n            _context2.prev = 3;\n            _context2.next = 6;\n            return _dbQuery[\"default\"].query(searchQuery, [resid]);\n\n          case 6:\n            _yield$dbQuery$query2 = _context2.sent;\n            rows = _yield$dbQuery$query2.rows;\n            dbResponse = rows[0];\n\n            if (dbResponse) {\n              _context2.next = 12;\n              break;\n            }\n\n            _status.errorMessage.error = 'No restaurants found :(';\n            return _context2.abrupt(\"return\", res.status(_status.status.notfound).send(_status.errorMessage.error));\n\n          case 12:\n            _status.successMessage.data = dbResponse;\n            return _context2.abrupt(\"return\", res.status(_status.status.success).send(dbResponse));\n\n          case 16:\n            _context2.prev = 16;\n            _context2.t0 = _context2[\"catch\"](3);\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context2.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[3, 16]]);\n  }));\n\n  return function getRestaurant(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n/**\n   * Create A Restaurant\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} reflection object (of Customer)\n   */\n\n\nexports.getRestaurant = getRestaurant;\n\nvar createRestaurant = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$body, name, min, createRestaurantQuery, values, _yield$dbQuery$query3, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _req$body = req.body, name = _req$body.name, min = _req$body.min;\n            console.log('name: ', name);\n            console.log('min: ', min); // const created_on = moment(new Date());\n\n            if (!((0, _validations.isEmpty)(name) || (0, _validations.isEmpty)(min))) {\n              _context3.next = 6;\n              break;\n            }\n\n            _status.errorMessage.error = 'Restaurant name and min. spending fields cannot be empty';\n            return _context3.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 6:\n            if ((0, _validations.isNum)(min)) {\n              _context3.next = 9;\n              break;\n            }\n\n            _status.errorMessage.error = 'Please input a numerical value for min. spending';\n            return _context3.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 9:\n            if (!(min.indexOf('.') != -1)) {\n              _context3.next = 12;\n              break;\n            }\n\n            _status.errorMessage.error = 'Please input only whole numbers';\n            return _context3.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 12:\n            createRestaurantQuery = \"INSERT INTO\\n        Restaurant(ResName, MinSpending)\\n        VALUES($1, $2)\\n        returning *\";\n            values = [name, min];\n            _context3.prev = 14;\n            _context3.next = 17;\n            return _dbQuery[\"default\"].query(createRestaurantQuery, values);\n\n          case 17:\n            _yield$dbQuery$query3 = _context3.sent;\n            rows = _yield$dbQuery$query3.rows;\n            dbResponse = rows[0]; // delete dbResponse.password;\n\n            _status.successMessage.data = dbResponse;\n            console.log(_status.successMessage.data);\n            return _context3.abrupt(\"return\", res.status(_status.status.created).send(_status.successMessage.data));\n\n          case 25:\n            _context3.prev = 25;\n            _context3.t0 = _context3[\"catch\"](14);\n\n            if (!(_context3.t0.routine === '_bt_check_unique')) {\n              _context3.next = 30;\n              break;\n            }\n\n            _status.errorMessage.error = 'Restaurant with that name already exist';\n            return _context3.abrupt(\"return\", res.status(_status.status.conflict).send(_status.errorMessage.error));\n\n          case 30:\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context3.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 32:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[14, 25]]);\n  }));\n\n  return function createRestaurant(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n/**\n* Edit A restaurant\n* @param {object} req\n* @param {object} res\n* @returns {object} reflection object (of Customer)\n*/\n\n\nexports.createRestaurant = createRestaurant;\n\nvar editRestaurant = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var _req$body2, resname, min, id, editRestaurantQuery, values, _yield$dbQuery$query4, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _req$body2 = req.body, resname = _req$body2.resname, min = _req$body2.min, id = _req$body2.id;\n            console.log('name: ', resname);\n            console.log('min: ', min);\n            console.log('id: ', id); // const created_on = moment(new Date());\n\n            if (!((0, _validations.isEmpty)(resname) || (0, _validations.isEmpty)(min))) {\n              _context4.next = 7;\n              break;\n            }\n\n            _status.errorMessage.error = 'Restaurant name and min. spending fields cannot be empty';\n            return _context4.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 7:\n            if ((0, _validations.isNum)(min)) {\n              _context4.next = 10;\n              break;\n            }\n\n            _status.errorMessage.error = 'Please input a numerical value for min. spending';\n            return _context4.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 10:\n            if (!(min.indexOf('.') != -1)) {\n              _context4.next = 13;\n              break;\n            }\n\n            _status.errorMessage.error = 'Please input only whole numbers';\n            return _context4.abrupt(\"return\", res.status(_status.status.bad).send(_status.errorMessage.error));\n\n          case 13:\n            editRestaurantQuery = \"update restaurant set\\n      resname = $1,\\n      minspending = $2\\n      where resid = $3\\n      returning *\";\n            values = [resname, min, id];\n            _context4.prev = 15;\n            _context4.next = 18;\n            return _dbQuery[\"default\"].query(editRestaurantQuery, values);\n\n          case 18:\n            _yield$dbQuery$query4 = _context4.sent;\n            rows = _yield$dbQuery$query4.rows;\n            dbResponse = rows[0];\n            _status.successMessage.data = dbResponse;\n            return _context4.abrupt(\"return\", res.status(_status.status.created).send(_status.successMessage.data));\n\n          case 25:\n            _context4.prev = 25;\n            _context4.t0 = _context4[\"catch\"](15);\n            console.log(_context4.t0);\n\n            if (!(_context4.t0.routine === '_bt_check_unique')) {\n              _context4.next = 31;\n              break;\n            }\n\n            _status.errorMessage.error = 'Restaurant with that NAME already exist';\n            return _context4.abrupt(\"return\", res.status(_status.status.conflict).send(_status.errorMessage.error));\n\n          case 31:\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context4.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 33:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[15, 25]]);\n  }));\n\n  return function editRestaurant(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n/**\n * delete a restaurant\n */\n\n\nexports.editRestaurant = editRestaurant;\n\nvar deleteRestaurant = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var id, deleteRestaurantQuery, _yield$dbQuery$query5, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            id = req.body.id;\n            deleteRestaurantQuery = 'delete from restaurant where resid = $1 returning *';\n            _context5.prev = 2;\n            _context5.next = 5;\n            return _dbQuery[\"default\"].query(deleteRestaurantQuery, [id]);\n\n          case 5:\n            _yield$dbQuery$query5 = _context5.sent;\n            rows = _yield$dbQuery$query5.rows;\n            dbResponse = rows[0];\n            _status.successMessage.data = dbResponse;\n            return _context5.abrupt(\"return\", res.status(_status.status.success).send(_status.successMessage.data));\n\n          case 12:\n            _context5.prev = 12;\n            _context5.t0 = _context5[\"catch\"](2);\n            console.log(_context5.t0);\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context5.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 17:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[2, 12]]);\n  }));\n\n  return function deleteRestaurant(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n/**\n * get restaurant's menu (entire list of food items)\n * return itemid\n */\n\n\nexports.deleteRestaurant = deleteRestaurant;\n\nvar getRestaurantMenu = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var id, getRestaurantMenuQuery, _yield$dbQuery$query6, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            id = req.query.id;\n            getRestaurantMenuQuery = 'select itemid from fooditem where itemid = any(select itemid from listings where resid = $1)';\n            _context6.prev = 2;\n            _context6.next = 5;\n            return _dbQuery[\"default\"].query(getRestaurantMenuQuery, [id]);\n\n          case 5:\n            _yield$dbQuery$query6 = _context6.sent;\n            rows = _yield$dbQuery$query6.rows;\n            dbResponse = rows;\n            _status.successMessage.data = dbResponse;\n            console.log(_status.successMessage.data);\n            return _context6.abrupt(\"return\", res.status(_status.status.success).send(_status.successMessage.data));\n\n          case 13:\n            _context6.prev = 13;\n            _context6.t0 = _context6[\"catch\"](2);\n            console.log(_context6.t0);\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context6.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 18:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[2, 13]]);\n  }));\n\n  return function getRestaurantMenu(_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n/**\n * get details of food item\n */\n\n\nexports.getRestaurantMenu = getRestaurantMenu;\n\nvar getFood = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var id, getFoodQuery, _yield$dbQuery$query7, rows, dbResponse;\n\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            id = req.body.id;\n            getFoodQuery = 'select * from fooditem where itemid = $1';\n            _context7.prev = 2;\n            _context7.next = 5;\n            return _dbQuery[\"default\"].query(getFoodQuery, [id]);\n\n          case 5:\n            _yield$dbQuery$query7 = _context7.sent;\n            rows = _yield$dbQuery$query7.rows;\n            dbResponse = rows[0];\n            _status.successMessage.data = dbResponse;\n            console.log(_status.successMessage.data);\n            return _context7.abrupt(\"return\", res.status(_status.status.success).send(_status.successMessage.data));\n\n          case 13:\n            _context7.prev = 13;\n            _context7.t0 = _context7[\"catch\"](2);\n            console.log(_context7.t0);\n            _status.errorMessage.error = 'Operation was not successful';\n            return _context7.abrupt(\"return\", res.status(_status.status.error).send(_status.errorMessage.error));\n\n          case 18:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[2, 13]]);\n  }));\n\n  return function getFood(_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nexports.getFood = getFood;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "restaurantsController.js"
      ],
      "names": [
        "searchRestaurant",
        "req",
        "res",
        "keywords",
        "query",
        "searchQuery",
        "dbQuery",
        "rows",
        "dbResponse",
        "errorMessage",
        "error",
        "status",
        "notfound",
        "send",
        "successMessage",
        "data",
        "success",
        "getRestaurant",
        "resid",
        "body",
        "console",
        "log",
        "createRestaurant",
        "name",
        "min",
        "bad",
        "indexOf",
        "createRestaurantQuery",
        "values",
        "created",
        "routine",
        "conflict",
        "editRestaurant",
        "resname",
        "id",
        "editRestaurantQuery",
        "deleteRestaurant",
        "deleteRestaurantQuery",
        "getRestaurantMenu",
        "getRestaurantMenuQuery",
        "getFood",
        "getFoodQuery"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/ngjingkang/Desktop/website/backend/app/controllers/",
      "sourcesContent": [
        "import dbQuery from '../db/dev/dbQuery';\n\nimport {\n  hashPassword,\n  comparePassword,\n  isValidEmail,\n  validatePassword,\n  isEmpty,\n  isNum,\n} from '../helpers/validations';\n\nimport {\n    errorMessage, successMessage, status,\n} from '../helpers/status';\n\n/**\n * search for restaurants\n * @param {object} req\n * @param {object} res\n * @returns {object} returned resid\n */\nconst searchRestaurant = async (req, res) => {\n  const { keywords } = req.query;\n\n  const searchQuery = \"SELECT * from Restaurant WHERE lower(resname) like '%' || lower($1) || '%'\";\n  try {\n    const { rows } = await dbQuery.query(searchQuery, [keywords]);\n    const dbResponse = rows;\n    if (!dbResponse[0]) {\n      errorMessage.error = 'No restaurants found :(';\n      return res.status(status.notfound).send(errorMessage.error);\n    }\n    successMessage.data = dbResponse;\n    return res.status(status.success).send(dbResponse);\n  } catch (error) {\n    errorMessage.error = 'Operation was not successful';\n    return res.status(status.error).send(errorMessage.error);\n  }\n};\n\n/**\n * get restaurant detail\n * @param {object} req\n * @param {object} res\n * @returns {object} returned resid\n */\nconst getRestaurant = async (req, res) => {\n  const { resid } = req.body;\n  console.log('resid: ', resid);\n\n  const searchQuery = \"SELECT * from Restaurant WHERE resid=$1\";\n  try {\n    const { rows } = await dbQuery.query(searchQuery, [resid]);\n    const dbResponse = rows[0];\n    if (!dbResponse) {\n      errorMessage.error = 'No restaurants found :(';\n      return res.status(status.notfound).send(errorMessage.error);\n    }\n    successMessage.data = dbResponse;\n    return res.status(status.success).send(dbResponse);\n  } catch (error) {\n    errorMessage.error = 'Operation was not successful';\n    return res.status(status.error).send(errorMessage.error);\n  }\n};\n\n/**\n   * Create A Restaurant\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} reflection object (of Customer)\n   */\n  const createRestaurant = async (req, res) => {\n    const {\n      name, min, \n    } = req.body;\n\n    console.log('name: ', name)\n    console.log('min: ', min)\n\n\n    // const created_on = moment(new Date());\n    if (isEmpty(name) || isEmpty(min)) {\n      errorMessage.error = 'Restaurant name and min. spending fields cannot be empty';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    if (!isNum(min)) {\n      errorMessage.error = 'Please input a numerical value for min. spending';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    if (min.indexOf('.') != -1) {\n      errorMessage.error = 'Please input only whole numbers';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    const createRestaurantQuery = `INSERT INTO\n        Restaurant(ResName, MinSpending)\n        VALUES($1, $2)\n        returning *`;\n    const values = [\n      name,\n      min,\n    ];\n  \n    try {\n      const { rows } = await dbQuery.query(createRestaurantQuery, values);\n      const dbResponse = rows[0];\n      // delete dbResponse.password;\n      successMessage.data = dbResponse;\n      console.log(successMessage.data);\n      return res.status(status.created).send(successMessage.data);\n    } catch (error) {\n      if (error.routine === '_bt_check_unique') {\n        errorMessage.error = 'Restaurant with that name already exist';\n        return res.status(status.conflict).send(errorMessage.error);\n      }\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n    }\n  };\n\n    /**\n   * Edit A restaurant\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} reflection object (of Customer)\n   */\n  const editRestaurant = async (req, res) => {\n    const {\n      resname, min, id\n    } = req.body;\n\n    console.log('name: ', resname)\n    console.log('min: ', min)\n    console.log('id: ', id)\n\n\n    // const created_on = moment(new Date());\n    if (isEmpty(resname) || isEmpty(min)) {\n      errorMessage.error = 'Restaurant name and min. spending fields cannot be empty';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    if (!isNum(min)) {\n      errorMessage.error = 'Please input a numerical value for min. spending';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    if (min.indexOf('.') != -1) {\n      errorMessage.error = 'Please input only whole numbers';\n      return res.status(status.bad).send(errorMessage.error);\n    }\n    const editRestaurantQuery = `update restaurant set\n      resname = $1,\n      minspending = $2\n      where resid = $3\n      returning *`;\n    const values = [\n      resname,\n      min,\n      id,\n    ];\n  \n    try {\n      const { rows } = await dbQuery.query(editRestaurantQuery, values);\n      const dbResponse = rows[0];\n      successMessage.data = dbResponse;\n      return res.status(status.created).send(successMessage.data);\n    } catch (error) {\n      console.log(error);\n      if (error.routine === '_bt_check_unique') {\n        errorMessage.error = 'Restaurant with that NAME already exist';\n        return res.status(status.conflict).send(errorMessage.error);\n      }\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n    }\n  };\n\n  /**\n   * delete a restaurant\n   */\n  const deleteRestaurant = async (req, res) => {\n    const { id } = req.body;\n    const deleteRestaurantQuery = 'delete from restaurant where resid = $1 returning *';\n    try {\n      const { rows } = await dbQuery.query(deleteRestaurantQuery, [id]);\n      const dbResponse = rows[0];\n      successMessage.data = dbResponse;\n      return res.status(status.success).send(successMessage.data);\n    } catch (error) {\n      console.log(error);\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n    }\n  };\n\n  /**\n   * get restaurant's menu (entire list of food items)\n   * return itemid\n   */\n  const getRestaurantMenu = async (req, res) => {\n    const { id } = req.query;\n    const getRestaurantMenuQuery = 'select itemid from fooditem where itemid = any(select itemid from listings where resid = $1)';\n    try {\n      const { rows } = await dbQuery.query(getRestaurantMenuQuery, [id]);\n      const dbResponse = rows;\n      successMessage.data = dbResponse;\n      console.log(successMessage.data);\n      return res.status(status.success).send(successMessage.data);\n    } catch (error) {\n      console.log(error);\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n    }\n  }\n\n  /**\n   * get details of food item\n   */\n  const getFood = async (req, res) => {\n    const { id } = req.body;\n    const getFoodQuery = 'select * from fooditem where itemid = $1';\n    try {\n      const { rows } = await dbQuery.query(getFoodQuery, [id]);\n      const dbResponse = rows[0];\n      successMessage.data = dbResponse;\n      console.log(successMessage.data);\n      return res.status(status.success).send(successMessage.data);\n    } catch (error) {\n      console.log(error);\n      errorMessage.error = 'Operation was not successful';\n      return res.status(status.error).send(errorMessage.error);\n    }\n  }\n  \nexport {\n    searchRestaurant,\n    getRestaurant,\n    createRestaurant,\n    editRestaurant,\n    deleteRestaurant,\n    getRestaurantMenu,\n    getFood,\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1588731491693
  }
}